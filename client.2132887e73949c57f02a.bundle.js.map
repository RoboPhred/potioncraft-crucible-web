{"version":3,"file":"client.2132887e73949c57f02a.bundle.js","mappings":"iNACA,SAAgB,OAAS,gBAAgB,SAAW,kBAAkB,qBAAqB,4BAA4B,0BAA0B,iCAAiC,0BAA0B,iCAAiC,uBAAuB,8BAA8B,uBAAuB,gC,4CCAzT,SAAgB,kBAAkB,2B,8CCAlC,SAAgB,QAAU,iBAAiB,sBAAsB,6BAA6B,oBAAoB,2BAA2B,eAAe,wB,8CCA5J,SAAgB,SAAW,kBAAkB,iBAAiB,wBAAwB,mBAAmB,4B,8CCAzG,SAAgB,iBAAiB,0B,8CCAjC,SAAgB,WAAa,oBAAoB,oBAAoB,2BAA2B,wBAAwB,+BAA+B,6BAA6B,sC,6CCApL,SAAgB,cAAc,qBAAqB,uBAAuB,gC,8CCA1E,SAAgB,uBAAuB,8BAA8B,qBAAqB,4BAA4B,0BAA0B,mC,8CCAhJ,SAAgB,aAAa,oBAAoB,oBAAoB,2BAA2B,uBAAuB,8BAA8B,kBAAkB,2B,8CCAvK,SAAgB,eAAe,wB,8CCA/B,SAAgB,aAAa,sB,8CCA7B,SAAgB,cAAc,uB,8CCA9B,SAAgB,mBAAmB,4B,8CCAnC,SAAgB,KAAO,cAAc,YAAY,mBAAmB,sBAAsB,6BAA6B,oBAAoB,2BAA2B,iBAAiB,wBAAwB,sBAAsB,6BAA6B,iBAAiB,wBAAwB,eAAe,wB,8CCA1T,SAAgB,MAAQ,eAAe,gBAAgB,uBAAuB,kBAAkB,2B,8CCAhG,SAAgB,KAAO,cAAc,eAAe,sBAAsB,kBAAkB,2B,8CCA5F,SAAgB,SAAW,kBAAkB,qBAAqB,4BAA4B,sBAAsB,6BAA6B,mBAAmB,0BAA0B,iBAAiB,0B,8CCA/M,SAAgB,gBAAgB,yB,8CCAhC,SAAgB,SAAW,kBAAkB,mBAAmB,0BAA0B,mBAAmB,0BAA0B,iBAAiB,0B,8CCAxJ,SAAgB,QAAU,iBAAiB,gBAAgB,yB,8CCA3D,SAAgB,KAAO,cAAc,YAAY,mBAAmB,oBAAoB,2BAA2B,sBAAsB,6BAA6B,oBAAoB,2BAA2B,8BAA8B,qCAAqC,kBAAkB,yBAAyB,qBAAqB,8B,8CCAxV,SAAgB,KAAO,gB,8CCAvB,SAAgB,yBAAyB,gCAAgC,uBAAuB,gC,8CCAhG,SAAgB,uBAAuB,8BAA8B,oBAAoB,2BAA2B,qBAAqB,8B,8CCAzI,SAAgB,4BAA4B,mCAAmC,2BAA2B,kCAAkC,yBAAyB,gCAAgC,0BAA0B,iCAAiC,yBAAyB,gCAAgC,sBAAsB,+B,8CCA/U,SAAgB,yBAAyB,kC,8CCAzC,SAAgB,sBAAwB,+BAA+B,8BAA8B,uC,8CCArG,SAAgB,gBAAkB,yBAAyB,6BAA6B,oCAAoC,4BAA4B,qC,8CCAxJ,SAAgB,uBAAuB,gC,8CCAvC,SAAgB,uBAAyB,kC,8CCAzC,SAAgB,uBAAuB,gC,8CCAvC,SAAgB,qBAAqB,8B,mJCCxB,EAAAA,2BAA6B,sBAC7B,EAAAC,kBAAoB,KAAM,CACrCC,KAAM,EAAAF,6BAGR,qCACEG,GAEA,OAAOA,EAAOD,OAAS,EAAAF,6B,mICRZ,EAAAI,qBAAuB,gBACvB,EAAAC,aAAe,KAAM,CAChCH,KAAM,EAAAE,uBAIR,gCACED,GAEA,OAAOA,EAAOD,OAAS,EAAAE,uB,uGCXZ,EAAAE,kBAAoB,cACpB,EAAAC,WAAa,KAAM,CAC9BL,KAAM,EAAAI,qB,iKCAR,iBAEa,EAAAE,+BACX,0BACW,EAAAC,sBAAyBC,IAAmC,CACvER,KAAM,EAAAM,+BACNG,QAAS,CACPD,YAAY,IAAAE,SAAQF,MAMxB,yCACEP,GAEA,OAAOA,EAAOD,OAAS,EAAAM,iC,2PCjBzB,oBACA,WAEA,WAGa,EAAAK,+BAAiC,0BACjC,EAAAC,sBAAyBC,IAAkC,CACtEb,KAAM,EAAAW,+BACNF,QAAS,CAAEK,UAAU,cAAQ,IAAAJ,SAAQG,IAAUE,IAAM,eAKvD,yCACEd,GAEA,OAAOA,EAAOD,OAAS,EAAAW,iC,iKChBzB,iBAEa,EAAAK,+BACX,0BACW,EAAAC,sBAAwB,CACnCT,EACAU,EACAC,KACG,CACHnB,KAAM,EAAAgB,+BACNP,QAAS,CACPD,YAAY,IAAAE,SAAQF,GACpBU,QAAAA,EACAC,QAAAA,KAMJ,yCACElB,GAEA,OAAOA,EAAOD,OAAS,EAAAgB,iC,2MCvBzB,iBAKa,EAAAI,8CACX,kCACW,EAAAC,oCAAsC,CACjDC,EACAC,KACG,CACHvB,KAAM,EAAAoB,8CACNX,QAAS,CAAEa,UAAAA,EAAWC,SAAAA,EAAUC,WAAW,aAK7C,uDACEvB,GAEA,OAAOA,EAAOD,OAAS,EAAAoB,gD,mJCnBZ,EAAAK,2BAA6B,sBAC7B,EAAAC,kBAAoB,KAAM,CACrC1B,KAAM,EAAAyB,6BAGR,qCACExB,GAEA,OAAOA,EAAOD,OAAS,EAAAyB,6B,+KCNZ,EAAAE,qCACX,gCACW,EAAAC,2BACXC,IACG,CACH7B,KAAM,EAAA2B,qCACNlB,QAAS,CACPoB,WAAAA,KAMJ,8CACE5B,GAEA,OAAOA,EAAOD,OAAS,EAAA2B,uC,wJChBZ,EAAAG,6BAA+B,wBAC/B,EAAAC,oBAAuBjB,IAA0B,CAC5Dd,KAAM,EAAA8B,6BACNrB,QAAS,CAAEK,SAAAA,KAGb,uCACEb,GAEA,OAAOA,EAAOD,OAAS,EAAA8B,+B,oLCVZ,EAAAE,sCACX,iCACW,EAAAC,6BAAgCC,IAA4B,CACvElC,KAAM,EAAAgC,sCACNvB,QAAS,CAAEyB,UAAAA,KAKb,gDACEjC,GAEA,OAAOA,EAAOD,OAAS,EAAAgC,wC,sJCVZ,EAAAG,4BAA8B,uBAC9B,EAAAC,mBAAqB,CAChCC,EACAC,KACG,CACHtC,KAAM,EAAAmC,4BACN1B,QAAS,CAAE4B,YAAAA,EAAaC,aAAAA,KAG1B,sCACErC,GAEA,OAAOA,EAAOD,OAAS,EAAAmC,8B,sJCZZ,EAAAI,4BAA8B,uBAC9B,EAAAC,mBAAqB,CAChCH,EACAC,KACG,CACHtC,KAAM,EAAAuC,4BACN9B,QAAS,CAAE4B,YAAAA,EAAaC,aAAAA,KAG1B,sCACErC,GAEA,OAAOA,EAAOD,OAAS,EAAAuC,8B,mJCfZ,EAAAE,2BAA6B,sBAC7B,EAAAC,kBAAoB,KAAM,CACrC1C,KAAM,EAAAyC,6BAGR,qCACExC,GAEA,OAAOA,EAAOD,OAAS,EAAAyC,6B,gJCLZ,EAAAE,0BAA4B,qBAC5B,EAAAC,iBAAmB,CAC9BP,EACAC,KACG,CACHtC,KAAM,EAAA2C,0BACNlC,QAAS,CAAE4B,YAAAA,EAAaC,aAAAA,KAG1B,oCACErC,GAEA,OAAOA,EAAOD,OAAS,EAAA2C,4B,mICfZ,EAAAE,qBAAuB,gBACvB,EAAAC,aAAe,CAACC,EAAiBC,KAAoB,CAChEhD,KAAM,EAAA6C,qBACNpC,QAAS,CAAEM,EAAGgC,EAASE,EAAGD,KAG5B,gCACE/C,GAEA,OAAOA,EAAOD,OAAS,EAAA6C,uB,kJCTZ,EAAAK,0BAA4B,qBAC5B,EAAAC,kBAAoB,KAAM,CACrCnD,KAAM,EAAAkD,4BAER,qCAA0CjD,GACxC,OAAOA,EAAOD,OAAS,EAAAkD,4B,4JCLZ,EAAAE,8BAAgC,yBAChC,EAAAC,qBAAuB,KAAM,CACxCrD,KAAM,EAAAoD,gCAKR,wCACEnD,GAEA,OAAOA,EAAOD,OAAS,EAAAoD,gC,iKCVzB,iBAGa,EAAAE,+BACX,0BACW,EAAAC,sBAAwB,CACnC/C,EACAgD,EAAsB,SACnB,CACHxD,KAAM,EAAAsD,+BACN7C,QAAS,CAAED,YAAY,IAAAE,SAAQF,GAAagD,KAAAA,KAK9C,yCACEvD,GAEA,OAAOA,EAAOD,OAAS,EAAAsD,iC,wKClBZ,EAAAG,kCACX,6BACW,EAAAC,yBAA2B,KAAM,CAC5C1D,KAAM,EAAAyD,oCAKR,4CACExD,GAEA,OAAOA,EAAOD,OAAS,EAAAyD,oC,mKCXZ,EAAAE,iCACX,4BACW,EAAAC,uBAA0BC,IAAmB,CACxD7D,KAAM,EAAA2D,iCACNlD,QAAS,CAAEoD,OAAAA,KAKb,0CACE5D,GAEA,OAAOA,EAAOD,OAAS,EAAA2D,mC,gJCVZ,EAAAG,0BAA4B,qBAC5B,EAAAC,iBAAoBC,IAA0B,CACzDhE,KAAM,EAAA8D,0BACNrD,QAAS,CAAEuD,KAAAA,KAGb,oCACE/D,GAEA,OAAOA,EAAOD,OAAS,EAAA8D,4B,qKCXZ,EAAAG,iCACX,4BACW,EAAAC,wBAA0B,CAACC,EAAeC,KAAmB,CACxEpE,KAAM,EAAAiE,iCACNxD,QAAS,CAAE0D,MAAAA,EAAOC,OAAAA,KAKpB,2CACEnE,GAEA,OAAOA,EAAOD,OAAS,EAAAiE,mC,sICZZ,EAAAI,sBAAwB,iBACxB,EAAAC,cAAiBC,IAAuB,CACnDvE,KAAM,EAAAqE,sBACN5D,QAAS,CAAE8D,WAAAA,KAGb,iCACEtE,GAEA,OAAOA,EAAOD,OAAS,EAAAqE,wB,wKCTZ,EAAAG,kCACX,6BACW,EAAAC,yBAA4BC,IAA6B,CACpE1E,KAAM,EAAAwE,kCACN/D,QAAS,CAAEiE,eAAAA,KAKb,4CACEzE,GAEA,OAAOA,EAAOD,OAAS,EAAAwE,oC,uJCPZ,EAAAG,6BAA+B,wBAkB5C,8BACEC,EACAC,KACGC,GAEH,MAAO,CACL9E,KAAM,EAAA2E,6BACNlE,QAAS,CACPmE,WAAAA,EACAC,GAAAA,EACAE,KAAMD,EAAKE,MAAM,EAAGF,EAAKG,OAAS,GAClCC,KAAMJ,EAAKA,EAAKG,OAAS,MAe/B,sCACEhF,GAEA,OAAOA,EAAOD,OAAS,EAAA2E,+B,wICnDZ,EAAAQ,uBAAyB,mBA+BtC,6BAAkCL,GAChC,MAAO,CACL9E,KAAM,EAAAmF,uBACN1E,QAAS,CACPsE,KAAMD,EAAKE,MAAM,EAAGF,EAAKG,OAAS,GAClCC,KAAMJ,EAAKA,EAAKG,OAAS,MAW/B,kCACEhF,GAEA,OAAOA,EAAOD,OAAS,EAAAmF,yB,sJCjDZ,EAAAC,4BAA8B,uBAC9B,EAAAC,mBAAqB,CAChCC,EACAT,KACG,CACH7E,KAAM,EAAAoF,4BACN3E,QAAS,CAAE6E,IAAAA,EAAKT,GAAAA,KAGlB,sCACE5E,GAEA,OAAOA,EAAOD,OAAS,EAAAoF,8B,gJCdZ,EAAAG,0BAA4B,qBAC5B,EAAAC,iBAAoBC,IAAyB,CACxDzF,KAAM,EAAAuF,0BACN9E,QAAS,CAAEgF,aAAAA,KAGb,oCACExF,GAEA,OAAOA,EAAOD,OAAS,EAAAuF,4B,6ICTZ,EAAAG,yBAA2B,oBAC3B,EAAAC,gBAAmBC,IAAe,CAC7C5F,KAAM,EAAA0F,yBACNjF,QAAS,CAAEmF,KAAAA,KAGb,mCACE3F,GAEA,OAAOA,EAAOD,OAAS,EAAA0F,2B,6HCTZ,EAAAG,mBAAqB,cACrB,EAAAC,WAAa,KAAM,CAC9B9F,KAAM,EAAA6F,qBAGR,8BACE5F,GAEA,OAAOA,EAAOD,OAAS,EAAA6F,qB,yICRZ,EAAAE,uBAAyB,kBACzB,EAAAC,eAAiB,CAC5BC,EACAC,KACG,CACHlG,KAAM,EAAA+F,uBACNtF,QAAS,CAAEwF,UAAAA,EAAWC,UAAAA,KAGxB,kCACEjG,GAEA,OAAOA,EAAOD,OAAS,EAAA+F,yB,mKCPZ,EAAAI,iCAAmC,4BAYhD,kCACEvB,EACAC,KACGC,GAEH,MAAO,CACL9E,KAAM,EAAAmG,iCACN1F,QAAS,CACPmE,WAAAA,EACAC,GAAAA,EACAE,KAAMD,EAAKE,MAAM,EAAGF,EAAKG,OAAS,GAClCmB,aAActB,EAAKA,EAAKG,OAAS,GACjCoB,SAAUvB,EAAKA,EAAKG,OAAS,MAgBnC,0CACEhF,GAEA,OAAOA,EAAOD,OAAS,EAAAmG,mC,gIChDZ,EAAAG,oBAAsB,eACtB,EAAAC,YAAc,KAAM,CAC/BvG,KAAM,EAAAsG,sBAGR,+BACErG,GAEA,OAAOA,EAAOD,OAAS,EAAAsG,sB,mJCRZ,EAAAE,2BAA6B,sBAC7B,EAAAC,kBAAqBC,IAAyB,CACzD1G,KAAM,EAAAwG,2BACN/F,QAAS,CAAEiG,aAAAA,KAGb,qCACEzG,GAEA,OAAOA,EAAOD,OAAS,EAAAwG,6B,0GCXZ,EAAAG,oBAAsB,mBACtB,EAAAC,YAAeC,IAAqB,CAC/C7G,KAAM,EAAA2G,oBACNlG,QAASoG,K,mGCAX,mBAA2B9F,GACzB,OAAO+F,MAAMC,QAAQhG,GAAKA,EAAI,CAACA,IAGjC,MAAMiG,EAAcC,OAAOC,OAAO,IAClC,8BACE,OAAOF,I,4HCTT,iBACA,WAIA,0BACEG,EACA5C,EACArD,EACAC,EACAiG,GAEAD,EAAIE,OACJF,EAAIG,MAAM/C,EAAYA,GACtB4C,EAAII,UAAqB,GAAVrG,EAAyB,GAAVC,GAC9BgG,EAAIG,MAAM,GAAI,GAEdF,IACAD,EAAIK,WAGN,6BAAkCL,GAChCA,EAAIM,YACJN,EAAIO,UAAY,OAChBP,EAAIQ,IAAI,EAAG,EAAG,EAAAC,cAAe,EAAG,EAAIC,KAAKC,IACzCX,EAAIY,QAGN,wBACEZ,EACAtG,EACAmH,EACAC,GAEA,MAAMjI,EAAO,EAAAkI,iBAAiBrH,EAAOsH,YAChCnI,IAILmH,EAAIE,OAEJF,EAAII,UAAU1G,EAAOE,EAAGF,EAAOoC,GAC/BjD,EAAKoI,OACHjB,EACAtG,GACCsG,IACKa,IACFb,EAAIO,UAAY,eAGpBO,GAGFd,EAAIK,a,omBCrDN,oBA2DA,UA5CgD,EAC9Ca,SAAAA,GAAW,EACXC,OAAAA,EACAC,aAAAA,EACAC,sBAAAA,EAAwB,SACxBC,SAAAA,MAEA,MAAMC,EAAWC,EAAMC,OAAgC,MAEjDC,EAAUF,EAAMG,aAAY,KAC5BJ,EAASK,SACXL,EAASK,QAAQC,UAElB,CAACN,IAEEO,EAAeN,EAAMG,aACxBI,IACC,MAAMC,EAAQD,EAAEE,OAAOD,MACvB,IAAKA,GAA0B,IAAjBA,EAAMlE,OAElB,YADAuD,IAGF,MAAM5C,EAAOuD,EAAM,GAEnBZ,EAAa3C,GACb4C,MAEF,CAACD,EAAcC,IAGjB,OACE,gCACGC,EAAS,CAAEJ,SAAAA,EAAUQ,QAAAA,IACtB,yBACEQ,IAAKX,EACLY,MAAO,CAAEC,QAAS,QAClBvJ,KAAK,OACLsI,OAAQA,EACRkB,SAAUP,O,orBCrDlB,oBAGA,cACA,UAuCA,UAhC8C,EAC5CQ,QAAAA,EACAC,UAAAA,EACAjB,SAAAA,MAEA,MAAMkB,EAAWhB,EAAMC,OAA8B,OAE9CgB,EAAMC,GAAWlB,EAAMmB,UAAS,GACjCjB,EAAUF,EAAMG,aAAY,KAChCe,GAAQ,KACP,IACGE,EAAUpB,EAAMG,aAAY,KAChCe,GAAQ,KACP,IAEH,OACE,gBAAC,EAAAG,kBAAiB,CAACD,QAASA,GAC1B,uBAAKV,IAAKM,EAAUd,QAASA,GAC1BJ,GAEH,gBAAC,UAAM,CACLkB,SAAUA,EAASZ,QACnBkB,OAAQL,EACRF,UAAWA,EACXQ,eAAgBH,GAEfH,GAAQH,M,mhCCrCjB,oBACA,cAUA,cAEMU,EAASxB,EAAMyB,YACnB,CACE,EACAf,K,IADA,UAAEgB,EAAS,QAAEC,EAAU,UAAS,KAAEC,EAAO,UAAS,SAAElC,GAAQ,EAAKmC,EAAK,IAAtE,2CAGA,OACE,wCACEnB,IAAKA,EACLgB,WAAW,aACT,UAAe,OACd,UAAe,mBAAmBC,KAClC,UAAe,gBAAgBC,KAChClC,GAAY,UAAiB,SAC7BgC,GAEFrK,KAAK,UACDwK,GAEHA,EAAM/B,aAMf,UAAe0B,G,mhCCrCf,oBACA,cACA,WASA,cAEMM,EAAa9B,EAAMyB,YACvB,CAAC,EAAgEf,K,IAAhE,UAAEgB,EAAS,QAAEC,EAAU,UAAS,KAAEC,EAAO,WAAS,EAAKC,EAAK,IAA5D,gCACC,OACE,gBAAC,EAAAE,KAAI,eACHrB,IAAKA,EACLgB,WAAW,aACT,UAAe,OACd,UAAe,mBAAmBC,KAClC,UAAe,gBAAgBC,KAChCF,IAEEG,GAEHA,EAAM/B,aAMf,UAAegC,G,2JChCf,oBACA,UAAe,W,orBCDf,oBACA,WAEA,cAEA,YA0DA,UAnDoB,EAAGE,MAAAA,EAAOnB,SAAAA,MAC5B,MAAMoB,EAASjC,EAAMC,OAAsB,OACpCqB,EAAQY,GAAalC,EAAMmB,UAAS,IACpCgB,EAAeC,GAAoBpC,EAAMmB,SAAwB,MAElEjB,EAAUF,EAAMG,aAAY,KAChC+B,GAAWZ,KACV,CAACA,IAEEC,EAAiBvB,EAAMG,aAAY,KACvC+B,GAAU,KACT,IAEGG,EAAsBrC,EAAMG,aAAa6B,IAC7CI,EAAiBJ,EAAMM,OACtB,IAEGC,EAAsBvC,EAAMG,aAC/B6B,IACCI,EAAiB,MACjBvB,EAASmB,EAAMM,OAEjB,CAACzB,IAGH,OACE,gCACE,uBACErF,MAAM,OACNC,OAAO,OACPiF,IAAKuB,EACLP,UAAW,UAAO,mBAClBxB,QAASA,GAET,0BAAQsC,GAAI,GAAIC,GAAI,GAAIC,EAAG,GAAItD,KAAM+C,MAAAA,EAAAA,EAAiBH,KAExD,gBAAC,UAAM,CACLV,OAAQA,EACRN,SAAUiB,EAAO7B,QACjBmB,eAAgBA,GAEhB,gBAAC,EAAAoB,aAAY,CACXX,MAAOA,EACPnB,SAAUwB,EACVO,iBAAkBL,Q,0JCxD5B,oBACA,UAAe,W,mhCCDf,oBAEA,cAkCA,UA5BuD,I,IAAA,MACrDM,EAAK,SACLC,GAAQ,EACLjB,EAAK,IAH6C,sBAKrD,MAAOkB,EAAcC,GAAmBhD,EAAMmB,SAAwB,MAChEN,EAAWb,EAAMG,aACpBI,IACCyC,EAAgBzC,EAAEE,OAAOoC,SAE3B,IAEII,EAASjD,EAAMG,aAAY,KACX,MAAhB4C,IACFC,EAAgB,MAChBF,EAASC,MAEV,CAACA,IACJ,OACE,gBAAC,UAAQ,iBACHlB,EAAK,CACTgB,MAAOE,MAAAA,EAAAA,EAAgBF,EACvBhC,SAAUA,EACVoC,OAAQA,O,mhCC/Bd,oBAEA,cAkCA,UA5BqD,I,IAAA,MACnDJ,EAAK,SACLC,GAAQ,EACLjB,EAAK,IAH2C,sBAKnD,MAAOkB,EAAcC,GAAmBhD,EAAMmB,SAAwB,MAChEN,EAAWb,EAAMG,aACpBI,IACCyC,EAAgBzC,EAAEE,OAAOoC,SAE3B,IAEII,EAASjD,EAAMG,aAAY,KACX,MAAhB4C,IACFC,EAAgB,MAChBF,EAASC,MAEV,CAACA,IACJ,OACE,gBAAC,UAAO,iBACFlB,EAAK,CACTgB,MAAOE,MAAAA,EAAAA,EAAgBF,EACvBhC,SAAUA,EACVoC,OAAQA,O,orBC/Bd,oBAEA,cAUA,UAR+B,IAE3B,gCACE,gBAAC,UAAiB,Q,orBCPxB,oBACA,cAEA,cAmBA,UAbgB,EAAGC,YAAAA,EAAc,gBAC/B,uBACExB,WAAW,aACT,UAAgB,QACD,cAAfwB,EACI,UAAO,uBACP,UAAO,uBAGb,uBAAKxB,UAAW,UAAO,oB,2JClB3B,oBACA,UAAe,W,omBCDf,oBACA,WAEA,WAEA,WAOA,UALsC,IAEnB,WADF,IAAAyB,aAAY,EAAAC,2BACC,KAAO,gBAAC,EAAAC,SAAQ,CAACC,GAAG,O,orBCTlD,oBACA,cAEA,cAcA,UAPiB,EAAG5B,UAAAA,EAAW6B,MAAAA,EAAOzD,SAAAA,KACpC,uBAAK4B,WAAW,aAAW,UAAiB,SAAGA,IAC7C,wBAAMA,UAAW,UAAO,mBAAoB6B,GAC5C,uBAAK7B,UAAW,UAAO,qBAAsB5B,K,2JCbjD,oBACA,UAAe,W,orBCDf,oBACA,cAEA,cAYA,UANa,EAAG4B,UAAAA,EAAW5B,SAAAA,KACzB,uBAAK4B,WAAW,aAAW,UAAO,kBAAmBA,IAClD5B,I,2JCXL,oBACA,UAAe,W,orBCDf,oBACA,WACA,WACA,cAEA,WAEA,cACA,cAEA,cAwEA,UA/DmB,EACjB4B,UAAAA,EACA8B,cAAAA,EACAC,kBAAAA,EACA5C,SAAAA,MAEA,MAAO6C,EAAWC,GAAc3D,EAAMmB,UAAS,GACzCyC,EAAW5D,EAAM6D,SAAQ,IACR,MAAjBL,GAA8C,MAArBC,EACpB,KAEFK,IAAIC,gBACT,IAAIC,KAAK,CAACR,EAAcS,QAAS,CAC/B5M,KAAM,UAAS,IAAA6M,SAAQT,SAG1B,CAACD,EAAeC,IAEb7D,EAAeI,EAAMG,aACxBlD,IACC0G,GAAW,GACX1G,EACGkH,cACAC,MAAMH,IACLpD,EAAS,IAAIwD,WAAWJ,GAAShH,EAAKqH,SAEvCC,SAAQ,KACPZ,GAAW,QAGjB,CAAC9C,IAGH,OACE,uBACEa,WAAW,aACT,UAAmB,WACnBkC,GAAY,UAAO,yBACnBlC,IAGF,uBAAKA,UAAW,UAAO,sBACrB,gBAAC,UAAsB,CACrB/B,OAAO,YACPC,aAAcA,EACdF,SAAUgE,IAER7B,GACA,gBAAC,UAAM,iBAAKA,GACV,gBAAC,EAAA2C,gBAAe,CAACxC,MAAM,UAAUyC,KAAM,EAAAC,mBAK9Cd,GACC,uBAAKlC,UAAW,UAAO,+BACrB,uBAAKiD,IAAKf,Q,2JC3EpB,oBACA,UAAe,W,orBCDf,oBACA,cAEA,WACA,WAEA,WAEA,WAKA,WAEA,cAEA,cACA,cACA,cAEA,aAoDA,UA/CyB,EAAGlC,UAAAA,MAC1B,MAAMkD,GAAW,IAAAzB,aAAY,EAAA0B,oBACvBC,GAAc,IAAA3B,aAAY,EAAA4B,qBAC1BC,GAAqB,IAAAC,gBACzB,EAAAhK,uBACA2J,EAAW,IAEPM,GAAqB,IAAAD,gBACzB,EAAAhK,uBACA2J,EAAW,IAEPO,GAAiB,IAAAF,gBAAe,EAAA7J,iBAAkB,WAClDgK,GAAgB,IAAAH,gBAAe,EAAA7J,iBAAkB,UACjDiK,GAAe,IAAAJ,gBAAe,EAAA7J,iBAAkB,qBACtD,OACE,uBAAKsG,WAAW,aAAW,UAAO,eAAgBA,IAChD,gBAAC,UAAM,CACLC,QAAyB,YAAhBmD,EAA4B,UAAY,UACjD5E,QAASiF,GAAc,WAIzB,gBAAC,UAAM,CACLxD,QAAyB,WAAhBmD,EAA2B,UAAY,UAChD5E,QAASkF,GAAa,UAIxB,gBAAC,UAAM,CACLzD,QAAyB,sBAAhBmD,EAAsC,UAAY,UAC3D5E,QAASmF,GAAY,S,cAKvB,gBAAC,UAAM,CAACnF,QAASgF,GAAkB,KAClCN,EAASU,QAAQ,GAClB,gBAAC,UAAM,CAACpF,QAAS8E,GAAkB,KACnC,uBAAKtD,UAAW,UAAO,yBACrB,gBAAC,UAAuB,MACxB,gBAAC,UAAe,MAChB,gBAAC,UAAkB,U,orBCnE3B,oBACA,WAMA,cAEA,SAAS6D,EACPlO,GAEA,MAAO,CACLmO,QAAS,yCAAyCnO,IAClDmI,WAAY,iBACZiG,OAAQpO,EACRqO,MAAO,GAIX,MAAMC,EAAY,CAChBJ,EAAc,UACdA,EAAc,SACdA,EAAc,SACdA,EAAc,SACdA,EAAc,UAYhB,UATgC,KAC9B,MAAM,EAAEK,IAAM,IAAAC,kBACd,OACE,gBAAC,UAAkB,CAACC,iBAAkBH,GACnCC,EAAE,uD,orBChCT,oBAEA,cAEA,cAEA,WAIA,cACA,UAgCA,UAzB2B,EACzBE,iBAAAA,EACAhG,SAAAA,MAEA,MAAMkB,EAAWhB,EAAMC,OAAiC,OAEjDqB,EAAQJ,EAAS6E,IAAa,IAAAC,sBAErC,OACE,gBAAC,EAAA3E,kBAAiB,CAACD,QAAS2E,GAC1B,gBAAC,UAAM,CAACpE,QAAQ,UAAUjB,IAAKM,EAAUd,QAASgB,GAC/CpB,GAEH,gBAAC,UAAM,CACLkB,SAAUA,EAASZ,QACnBkB,OAAQA,EACRP,UAAU,eACVQ,eAAgBwE,GAEfzE,GAAU,gBAAC,UAAgB,CAACwE,iBAAkBA,Q,orBCrCvD,oBACA,cACA,WACA,WAEA,WAKA,WAEA,WAGA,WAEA,cAEA,cACA,WAgBA,UAV6B,EAAGA,iBAAAA,KAE5B,sBAAIpE,UAAW,UAAO,uBACnBoE,EAAiBG,KAAI,CAACC,EAAiBC,IACtC,gBAACC,EAAyB,CAACzJ,IAAKwJ,EAAGD,gBAAiBA,OAY5D,MAAME,EAA4B,EAChCF,gBAAAA,MAEA,MAAOG,EAASC,GAActG,EAAMmB,SAA+B,OAC7D,WAAE3B,EAAU,QAAEgG,EAAO,YAAEe,GAAgBL,GACvC,EAAEN,IAAM,IAAAC,kBACRW,EAAYxG,EAAMC,OAAiC,OAClD,CAAEwG,IAAW,IAAAC,SAAQ,CAC1BrP,KAAM,EAAAsP,sBACNC,MAAM,IAAAC,sBACJ,aAAKX,EAAiB,CAAC,UAAW,oBAG/BY,EAAkBC,EAAaC,IAAe,IAAAhB,sBAC/C1G,GAAkB,IAAA6D,aAAY,EAAA8D,yBAgBpC,OAdAjH,EAAMkH,iBAAgB,KACpB,MAAM7P,EAAO,EAAAkI,iBAAiBC,GACxB2H,EAASX,EAAUpG,QACzB,IAAK+G,IAAW9P,EACd,OAGF,MAAMmH,EAAM2I,EAAOC,WAAW,MAC9B5I,EAAIG,MAAM,GAAI,IACdH,EAAII,UAAU,GAAK,KACnBJ,EAAIG,MAAM,GAAI,GACdtH,EAAKoI,OAAOjB,EAAK0H,GAAiB,QAAU5G,KAC3C,CAACE,EAAYF,IAGd,sBACEoC,UAAW,UAAO,2BAClBhB,IAAMA,IACJ+F,EAAQ/F,GACR4F,EAAW5F,IAEb2G,WAAYL,EACZ9G,QAAS6G,GAET,4BACE,0BAAQrG,IAAK8F,EAAWhL,MAAO,GAAIC,OAAQ,MAE7C,4BAAO+J,EAAUI,EAAEJ,GAAWe,GAC9B,gBAAC,UAAO,CAACvF,SAAUqF,EAAS/E,OAAQwF,GACjClB,EAAE,0C,2JCvFX,oBACA,UAAe,W,orBCDf,oBACA,WAEA,WAEA,WAEA,cAYA,UAVgC,KAC9B,MAAM0B,GAAU,IAAAnE,aAAY,EAAAoE,uCACtB,EAAE3B,IAAM,IAAAC,kBACd,OACE,gBAAC,UAAkB,CAACC,iBAAkBwB,GACnC1B,EAAE,2C,orBCdT,oBACA,WAMA,cAEA,SAAS4B,EACPnQ,GAEA,MAAO,CACLmO,QAAS,gCAAgCnO,IACzCmI,WAAY,SACZiG,OAAQpO,GAIZ,MAAMoQ,EAAc,CAACD,EAAgB,UAAWA,EAAgB,UAWhE,UATgC,KAC9B,MAAM,EAAE5B,IAAM,IAAAC,kBACd,OACE,gBAAC,UAAkB,CAACC,iBAAkB2B,GACnC7B,EAAE,8C,2JCzBT,oBACA,UAAe,W,mhCCDf,oBACA,cAEA,WACA,WAEA,WAEA,aACA,cACA,cACA,cAEA,cAEA,cA0CM8B,EAA8C,I,IAAA,SAAE5H,GAAQ,EAAK+B,EAAK,IAApB,cAClD,OAEE,uCAAUA,EAAa,CAAEH,UAAW,UAAO,uBACxC5B,IAKP,UA9CkB,EAAG4B,UAAAA,MACnB,MAAMiG,GAAW,IAAAC,eACXC,EAAc7H,EAAM6D,SAAQ,KAChC,IAA+BvM,EAc/B,MAHmC,CACjC,CAAC,EAAAwQ,gBAZ4BxQ,GAYU,IAAAyD,4BAX/BwF,IACN,GAAIA,EAAG,CACL,GAAIA,EAAEwH,iBACJ,OAEFxH,EAAEyH,iBAEJL,EAASrQ,QAOZ,IAEH,OACE,uBAAKoK,WAAW,aAAWA,EAAW,aAAc,UAAO,gBACzD,gBAAC,EAAAuG,QAAO,CACNC,OAAQ,UACRC,SAAUN,EACVO,UAAWV,GAEX,gBAAC,UAAc,CAAChG,UAAW,UAAO,yBAChC,gBAAC,UAAS,CAACA,UAAW,UAAO,qBAC7B,gBAAC,UAAW,CAACA,UAAW,UAAO,qBAC/B,gBAAC,UAAU,CAACA,UAAW,UAAO,0B,mrBClDxC,oBACA,cAEA,cAEA,WAEA,WAEA,UACA,WACA,WAKA,UACA,WAIA,WAuDA,UAlDoB,EAAGA,UAAAA,MACrB,MAAM2G,GAAgB,IAAAlF,aAAY,EAAAmF,uBAC5BC,GAAqB,IAAApF,aAAY,EAAAqF,4BACjCjQ,GAAU,IAAA4K,aAAY,EAAAsF,uBACtBjQ,GAAU,IAAA2K,aAAY,EAAAuF,uBACtB9M,GAAa,IAAAuH,aAAY,EAAAwF,0BACzBC,GAAgB,IAAAzF,aAAY,EAAA0F,6BAC5BC,GAAiB,IAAA3F,aAAY,EAAA4F,8BAC7BC,GAAiB,IAAA7F,aAAY,EAAA8F,wBAC7B3J,GAAkB,IAAA6D,aAAY,EAAA8D,yBAE9BT,EAAYxG,EAAMC,OAAiC,MA6BzD,OA3BAD,EAAMkJ,WAAU,KACd,IAAK1C,EAAUpG,QACb,OAGF,MAAM5B,EAAMgI,EAAUpG,QAAQgH,WAAW,MAEzC5I,EAAI2K,UAAU,EAAG,EAAG3C,EAAUpG,QAAQ5E,MAAOgL,EAAUpG,QAAQ3E,SAE/D,IAAA2N,gBAAe5K,EAAK5C,EAAYrD,EAASC,GAAS,KAChD,GAAsB,MAAlBwQ,EAAwB,CAC1BxK,EAAII,UAAUoK,EAAe5Q,EAAG4Q,EAAe1O,GAC/C,IAAK,MAAMqC,KAAO4L,EAAoB,CACpC,MAAMrQ,EAASmQ,EAAc1L,IAC7B,IAAA0M,cAAa7K,EAAKtG,GAAQ,EAAMoH,UAIrC,CACD+I,EACAE,EACAhQ,EACAC,EACAoD,EACAoN,IAIA,0BACEtI,IAAK8F,EACL9E,WAAW,aAAWA,EAAW,UAAO,iBACxClG,MAAOoN,EACPnN,OAAQqN,M,2JCvEd,mBACA,UAAe,W,orBCDf,oBACA,WACA,WACA,cAEA,WACA,WAEA,WAEA,WAKA,WAEA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,WAEA,WAIA,WACA,UACA,WAKA,WACA,UACA,WACA,WACA,WAEA,cAuPA,UAjPkB,EAAGpH,UAAAA,MACnB,MAAMiG,GAAW,IAAAC,eACX0B,GAAQ,IAAAC,YAERC,EAAaxJ,EAAMC,OAAsB,MACzCuG,EAAYxG,EAAMC,OAAiC,MACnDwJ,GAAe,IAAAC,oBAAmBlD,GAClCoC,GAAgB,IAAAzF,aAAY,EAAA0F,6BAC5BC,GAAiB,IAAA3F,aAAY,EAAA4F,8BAE7BzJ,GAAkB,IAAA6D,aAAY,EAAA8D,yBAE9B0C,GAAgB,IAAAC,oBAEhBC,EAAmB7J,EAAMG,aAC5BI,IACQ,CACLnI,EAAGmI,EAAEuJ,QAAUL,EAAaM,KAC5BzP,EAAGiG,EAAEyJ,QAAUP,EAAaQ,OAGhC,CAACR,IAGGS,EAAelK,EAAMG,aAAY,K,MACpB,QAAjB,EAAAqG,EAAUpG,eAAO,SAAE+J,UAClB,IAEGC,EAAgBpK,EAAMG,aACzBI,IACC,GAA2B,OAAvBiJ,EAAWpJ,SAAoBoJ,EAAWpJ,UAAYG,EAAE8J,UAC1D,OAEFb,EAAWpJ,QAAUG,EAAE8J,UACvB9J,EAAE+J,cAAcC,kBAAkBhK,EAAE8J,WAEpC,MAAM9Q,GAAY,IAAAiR,cAAajK,GACzBkK,EAAIZ,EAAiBtJ,GAC3BoH,GAAS,IAAAlO,oBAAmBgR,EAAGlR,MAEjC,CAACsQ,IAGGa,EAAgB1K,EAAMG,aACzBI,IACC,GAA2B,OAAvBiJ,EAAWpJ,SAAoBoJ,EAAWpJ,UAAYG,EAAE8J,UAC1D,OAGF,MAAM9Q,GAAY,IAAAiR,cAAajK,GACzBkK,EAAIZ,EAAiBtJ,GAC3BoH,GAAS,IAAA9N,oBAAmB4Q,EAAGlR,MAEjC,CAACsQ,IAGGc,EAAc3K,EAAMG,aACvBI,IACC,GAA2B,OAAvBiJ,EAAWpJ,SAAoBoJ,EAAWpJ,UAAYG,EAAE8J,UAC1D,OAGF9J,EAAE+J,cAAcM,sBAAsBrK,EAAE8J,WACxCb,EAAWpJ,QAAU,KAErB,MAAM7G,GAAY,IAAAiR,cAAajK,GACzBkK,EAAIZ,EAAiBtJ,GAC3BoH,GAAS,IAAA1N,kBAAiBwQ,EAAGlR,MAE/B,CAACsQ,IAGGgB,EAAY7K,EAAMG,aAAaI,IACnC,MAAMhH,GAAY,IAAAiR,cAAajK,GAC/BoH,GAAS,IAAArO,8BAA6BC,IACxB,QAAVgH,EAAE5D,KACJ4D,EAAEyH,mBAEH,IAEG8C,EAAU9K,EAAMG,aAAaI,IACjC,MAAMhH,GAAY,IAAAiR,cAAajK,GAC/BoH,GAAS,IAAArO,8BAA6BC,IACxB,QAAVgH,EAAE5D,KACJ4D,EAAEyH,mBAEH,KAEI+C,EAAGC,IAAW,IAAAC,SACnB,CACEtL,OAAQ,EAAAgH,sBACRuE,KAAM,CAACtE,EAAMuE,KACX,KAAK,IAAAC,uBAAsBxE,GACzB,OAGF,MAAM,UAAEjO,GAAciO,EAAK9O,QAErB2S,EAAIU,EAAQE,kBAClB,IAAKZ,EACH,OAEFA,EAAErS,GAAKqR,EAAaM,KACpBU,EAAEnQ,GAAKmP,EAAaQ,IACpB,MAAMqB,EAAS3B,EAAcc,GAC7B9C,GAAS,IAAAjP,qCAAoCC,EAAW2S,MAG5D,CAAC3B,EAAeF,IAiHlB,OA9GAzJ,EAAMkJ,WAAU,KACd,IAAIqC,EAAgC,KAEpC,SAAS9L,IAGP,GAFA8L,EAAiB,MAEZ/E,EAAUpG,QACb,OAGF,MAAMoL,EAAQlC,EAAMmC,WACdpD,GAAgB,IAAAC,uBAAsBkD,GACtCjD,GAAqB,IAAAC,4BAA2BgD,GAChDjT,GAAU,IAAAkQ,uBAAsB+C,GAChChT,GAAU,IAAAkQ,uBAAsB8C,GAChC5P,GAAa,IAAA+M,0BAAyB6C,GACtCxC,GAAiB,IAAAC,wBAAuBuC,GAC9C,IAAIE,GAAa,IAAAC,0BAAyBH,GAE1C,IAAKE,EAEH,OAKFA,EAAa,CACXE,GAAI,CACFxT,EAAGsT,EAAWE,GAAGxT,EAAI,EAAAyT,oBACrBvR,EAAGoR,EAAWE,GAAGtR,EAAI,EAAAuR,qBAEvBC,GAAI,CACF1T,EAAGsT,EAAWI,GAAG1T,EAAI,EAAAyT,oBACrBvR,EAAGoR,EAAWI,GAAGxR,EAAI,EAAAuR,sBAKzB,MAAME,EAAwB,CAC5BH,GAAI,CACFxT,EAAGsT,EAAWE,GAAGxT,EAAI,EAAAyT,oBACrBvR,EAAGoR,EAAWE,GAAGtR,EAAI,EAAAuR,qBAEvBC,GAAI,CACF1T,EAAGsT,EAAWI,GAAG1T,EAAI,EAAAyT,oBACrBvR,EAAGoR,EAAWI,GAAGxR,EAAI,EAAAuR,sBAInBrN,EAAMgI,EAAUpG,QAAQgH,WAAW,MAEnC4E,GAAgB,IAAAC,uBAAsBT,EAAOE,EAAWE,IACxDM,GAAgB,IAAAD,uBAAsBT,EAAOE,EAAWI,IACxD3C,GAAY,IAAAgD,oBAAmBH,EAAeE,GACpD1N,EAAI2K,UACFjK,KAAKkN,IAAI,EAAGjD,EAAUyC,GAAGxT,GACzB8G,KAAKkN,IAAI,EAAGjD,EAAUyC,GAAGtR,GACzB4E,KAAKmN,IAAI7N,EAAI2I,OAAO3L,MAAO2N,EAAU2C,GAAG1T,EAAI+Q,EAAUyC,GAAGxT,GACzD8G,KAAKmN,IAAI7N,EAAI2I,OAAO1L,OAAQ0N,EAAU2C,GAAGxR,EAAI6O,EAAUyC,GAAGtR,KAG5D,IAAA8O,gBAAe5K,EAAK5C,EAAYrD,EAASC,GAAS,KAChDgG,EAAIM,YACJN,EAAI8N,UAAY,GAChB9N,EAAI+N,YAAY,CAAC,EAAG,IACpB/N,EAAIgO,QAAQ,IAAK,IACjBhO,EAAIiO,QAAQ,GAAI,IAChBjO,EAAIiO,OAAO,GAAI,IACfjO,EAAIiO,OAAO,IAAK,IAChBjO,EAAIiO,QAAQ,IAAK,IACjBjO,EAAIkO,UAEJ,IAAAC,mBAAkBnO,GAGlB,IAAK,MAAM7B,KAAO2B,OAAOsO,KAAKvE,GAAgB,CAC5C,MAAMnQ,EAASmQ,EAAc1L,GAC7B,KAAK,IAAAkQ,qBAAoB3U,EAAQ6T,GAC/B,SAEF,MAAM1M,EAAakJ,EAAmBuE,SAASnQ,GACzB,MAAlBqM,GAA0B3J,IAI9B,IAAAgK,cAAa7K,EAAKtG,EAAQmH,EAAYC,OAI1CqI,GAAS,IAAAnN,sBAUX,MAAMuS,EAAczD,EAAM0D,WAP1B,WACwB,MAAlBzB,IAGJA,EAAiB0B,sBAAsBxN,OAKzC,MAAO,KACD8L,IACF2B,qBAAqB3B,GACrBA,EAAiB,MAEnBwB,OAED,IAGD,0BACEI,UAAW,EACXzL,WAAW,aAAWA,EAAW,UAAO,eACxChB,IAAMA,IACJ8F,EAAUpG,QAAUM,EACpBsK,EAAQtK,IAEVlF,MAAOoN,EACPnN,OAAQqN,EACRoB,aAAcA,EACdE,cAAeA,EACfM,cAAeA,EACfC,YAAaA,EACbE,UAAWA,EACXC,QAASA,M,orBC7Rf,oBACA,cAEA,WAEA,WACA,WAIA,WAEA,cA4CA,UAtCmB,EAAGpJ,UAAAA,MACpB,MAAM0L,GAAgB,IAAAjK,aAAY,EAAAkK,2BAC5BC,GAAW,IAAAnK,aAAY,EAAAoK,0BACvBC,GAAa,IAAArK,aAAY,EAAAsK,4BACzBpS,GAAO,IAAA8H,aAAY,EAAA4B,qBAEzB,OACE,uBACErD,WAAW,aAAWA,EAAW,UAAO,gBACxClG,MAAM,OACNC,OAAO,QAEN2R,GACC,wBACEhV,EAAGgV,EAAcxB,GAAGxT,EACpBkC,EAAG8S,EAAcxB,GAAGtR,EACpBkB,MAAO4R,EAActB,GAAG1T,EAAIgV,EAAcxB,GAAGxT,EAC7CqD,OAAQ2R,EAActB,GAAGxR,EAAI8S,EAAcxB,GAAGtR,EAC9CoS,OAAO,YACPgB,YAAa,EACbC,QAAS,GACTC,gBAAgB,QAGnBN,IAAsB,WAATjS,GAA8B,sBAATA,IACjC,0BACEmH,GAAI8K,EAASlV,EACbqK,GAAI6K,EAAShT,EACboI,EAAG8K,EACHd,OAAO,YACPiB,QAAS,GACTD,YAAa,O,2JCjDvB,oBACA,UAAe,W,stBCDf,oBACA,cACA,WAEA,WAEA,WACA,WACA,WAEA,WAEA,WACA,WACA,WAEA,cAOa,EAAAG,YAAc,KACd,EAAAC,WAAa,GA4D1B,UA1DuB,EAAGpM,UAAAA,EAAW5B,SAAAA,MACnC,MAAM6H,GAAW,IAAAC,eACXhM,GAAa,IAAAuH,aAAY,EAAAwF,0BAEzBoF,EAAe/N,EAAMC,OAA8B,MACnD+N,GAAkB,IAAAtE,oBAAmBqE,GAE3C/N,EAAMkH,iBAAgB,KACpBS,GACE,IAAApM,yBAAwByS,EAAgBxS,MAAOwS,EAAgBvS,WAEhE,CAACuS,EAAgBxS,MAAOwS,EAAgBvS,SAE3C,MAAMwS,EAAUjO,EAAMG,aACnBI,IAEC,IADewN,EAAa3N,SACbG,EAAEwH,iBACf,OAGF,MAAMxO,GAAY,IAAAiR,cAAajK,GAE/B,GAAIhH,EAAU2U,YAAa,CACzB,MAAMC,EACJ5N,EAAE6N,OAAS,EAAIxS,EAAa,EAAAiS,YAAcjS,EAAa,EAAAiS,YACzDlG,GAAS,IAAAhM,eAAcwS,IACvB5N,EAAEyH,iBACFzH,EAAE8N,uBACO9U,EAAU+U,UACnB3G,GAAS,IAAAxN,cAAcoG,EAAE6N,OAAS,EAAAN,WAAclS,EAAY,IAC5D2E,EAAEyH,iBACFzH,EAAE8N,oBAEF1G,GAAS,IAAAxN,cAAa,EAAIoG,EAAE6N,OAAS,EAAAN,WAAclS,IACnD2E,EAAEyH,iBACFzH,EAAE8N,qBAGN,CAACzS,IAUH,OAFA,IAAA2S,gBAAeR,EAAc,QAASE,EAAS,CAAEO,SAAS,IAGxD,uBACE9M,WAAW,aAAWA,EAAW,UAAM,qBACvChB,IAAKqN,GAEJjO,K,0JC/EP,oBACA,UAAe,W,+dCDf,oBACA,cACA,UAAe,W,sFCFF,EAAAgI,cAAgB,0BAE7B,MAAM2G,EAAS,CACb,CAAC,EAAA3G,eAAgB,CAAC,YAAa,QAEjC,UAAe2G,G,orBCLf,oBAEA,cAMA,UAJkC,IACzB,uBAAK/M,UAAW,UAAO,mB,orBCLhC,oBAEA,cAMA,UAJuB,EAAG5B,SAAAA,KACjB,sBAAI4B,UAAW,UAAa,MAAI5B,I,opBCLzC,oBAMM4O,EAAmB1O,EAAM2O,eAJ/B,eAMA,SAAgBC,IACd,OAAO5O,EAAM6O,WAAWH,GAD1B,wBAQa,EAAArN,kBAAoB,EAC/BD,QAAS0N,EACThP,SAAAA,MAEA,MAAMiP,EAAeH,IACfxN,EAAUpB,EAAMG,aAAY,KAC5B2O,GAAaA,IACbC,GAAcA,MACjB,CAACD,EAAaC,IAEjB,OACE,gBAACL,EAAiBM,SAAQ,CAACnM,MAAOzB,GAC/BtB,K,orBC5BP,oBACA,cAEA,cACA,UA2CA,UAnC0C,EACxCmP,gBAAAA,GAAkB,EAClBvP,SAAAA,EACAQ,QAAAA,EACAgP,UAAAA,EACApP,SAAAA,MAEA,MAAMqP,GAAmB,IAAAP,uBACnBQ,EAAcpP,EAAMG,aACvBI,IACKL,GACFA,EAAQK,GAEN0O,GAAiBE,MAEvB,CAACF,EAAiBE,EAAkBjP,IAEtC,OACE,sBACEwB,WAAW,aACT,UAAO,aACPhC,GAAY,UAAO,wBAErBQ,QAASkP,GAET,qBAAG1N,UAAW,UAAO,sBACnB,wBAAMA,UAAW,UAAO,mBAAoB5B,GAC3CoP,GACC,wBAAMxN,UAAW,UAAO,wBAAyBwN,O,orBCxC3D,oBACA,cAEA,cAEA,cAmCA,UA5BgD,EAC9CxP,SAAAA,EACAwP,UAAAA,EACApO,QAAAA,EACAhB,SAAAA,KAGE,sBACE4B,WAAW,aACT,UAAO,aACPhC,GAAY,UAAO,yBAGrB,gBAAC,UAAU,CAACqB,UAAU,cAAcD,QAASA,GAC3C,qBAAGY,UAAW,UAAO,sBACnB,wBAAMA,UAAW,UAAO,mBAAoB5B,GAC3CoP,GACC,wBAAMxN,UAAW,UAAO,wBAAyBwN,GAEnD,uBAAKxN,UAAW,UAAO,kBAAmBlG,MAAO,GAAIC,OAAQ,IAC3D,wBAAM4T,EAAE,oBAAoBjQ,KAAK,QAAQsO,YAAa,S,orBChClE,oBACA,cACA,WACA,WAEA,cAgCA,UAxBoC,EAClChM,UAAAA,EACAJ,OAAAA,EACAC,eAAAA,EACAzB,SAAAA,KAEKwB,GAIE,IAAAgO,cACL,uBAAK5N,WAAW,aAAI,QAAS,UAAc,QACzC,gBAAC,EAAA6N,QAAO,CAACC,eAAgBjO,EAAgBkO,YAAalO,GACpD,uBAAKG,WAAW,aAAI,UAAO,iBAAkBA,IAC3C,gBAAC,EAAAgO,gBAAe,CAAChO,UAAW,UAAO,oBAChC5B,MAKT6P,SAASC,MAbF,M,0JCpBX,oBACA,UAAe,W,mrBCDf,oBACA,WACA,WAEA,WAEA,WACA,WAEA,WAEA,cACA,cA8EA,UAxE2B,EAAGlO,UAAAA,MAC5B,MAAMiG,GAAW,IAAAC,gBACX,EAAEhC,IAAM,IAAAC,kBAERgK,GAAwB,IAAA1M,aAAY,EAAA2M,+BACpCC,EAA0B/P,EAAMG,aAAa6P,IACjDrI,GAAS,IAAA7L,0BAAyBkU,MACjC,IAKGC,IAHgB,IAAA9M,cAAaqI,IACjC,IAAA0E,4BAA2B1E,EAAO,kBAEd,IAAArI,cAAaqI,IACjC,IAAA0E,4BAA2B1E,EAAO,kBAE9B2E,GAAkB,IAAAhN,cAAaqI,IACnC,IAAA0E,4BAA2B1E,EAAO,mBAEpC,OACE,gBAAC,UAAI,CACH9J,UAAWA,EACX3F,eAAgB8T,EAChBE,wBAAyBA,GAEzB,gBAAC,UAAY,CAAClN,MAAM,OAAOS,GAAG,IAAIC,MAAOqC,EAAE,2BAezC,gBAAC,UAAY,CACX/C,MAAM,eACNS,GAAG,gBACHC,MAAOqC,EAAE,sCAERqK,EAAchK,KAAK/J,GAClB,gBAAC,UAAY,CACX2G,MAAO,gBAAgB3G,IACvBS,IAAKT,EACLqH,MAAOrH,EACPoH,GAAI,iBAAiBpH,SAI3B,gBAAC,UAAY,CACX2G,MAAM,iBACNS,GAAG,kBACHC,MAAOqC,EAAE,wCAERuK,EAAgBlK,KAAK/J,GACpB,gBAAC,UAAY,CACX2G,MAAO,kBAAkB3G,IACzBS,IAAKT,EACLqH,MAAOrH,EACPoH,GAAI,mBAAmBpH,a,orBCjFrC,oBACA,WAEA,WACA,WAEA,WAEA,cAEA,cACA,cACA,UACA,cAEA,cACA,cAYMkU,EAAc,KAClB,MAAM,EAAExK,IAAM,IAAAC,mBACR,WAAEwK,EAAU,cAAEC,IAAkB,eAChCnB,GAAmB,IAAAP,uBACnB2B,GAAQ,IAAAC,WAAU,EAAArT,YAClBsT,GAAS,IAAAD,WAAU,EAAA5S,aACzB,OACE,gBAAC,UAAI,KACH,gBAAC,UAAQ,CAACsC,QAASqQ,GAAQ3K,EAAE,gBAC7B,gBAAC,UAAsB,CACrBlG,SAAwB,WAAd2Q,EACV1Q,OAAO,OACPC,aAAc0Q,EACdzQ,sBAAuBsP,IAEtB,EAAGzP,SAAAA,EAAUQ,QAAAA,KACZ,gBAAC,UAAQ,CACP+O,iBAAiB,EACjBvP,SAAUA,EACVQ,QAASA,GAER0F,EAAE,mBAIT,gBAAC,UAAQ,CAAC1F,QAASuQ,GAAS7K,EAAE,mBAKpC,UAxC0B,KACxB,MAAM,EAAEA,IAAM,IAAAC,kBAEd,OACE,gBAAC,UAAU,CAAC/E,QAAS,gBAACsP,EAAW,MAAKrP,UAAU,gBAC9C,gBAAC,UAAM,CAACY,QAAQ,QAAQiE,EAAE,8B,orBCvBhC,oBAEA,cACA,cACA,aACA,cAEA,cAgCA,UAzBkC,EAChC8K,gBAAAA,EACAC,gBAAAA,GAAkB,EAClB7Q,SAAAA,KAGE,uBAAK4B,UAAW,UAAa,MAC3B,gBAAC,UAAQ,KACP,gBAAC,UAAsB,MACtBgP,GAEH,gBAAC,UAAO,MACR,uBAAKhP,UAAW,UAAO,iBACpBiP,GACC,gCACE,gBAAC,UAAkB,CAACjP,UAAW,UAAO,qBACtC,gBAAC,UAAO,CAACwB,YAAY,cAGxBpD,K,2JCjCT,oBACA,UAAe,W,omBCDf,oBACA,WAGA,WAEA,WACA,UAEA,UAYM8Q,EAAO,OAoDb,UAhDsC,EACpCtP,OAAAA,EACAN,SAAAA,EACAD,UAAAA,EAAY,OACZQ,eAAAA,EAAiBqP,EACjB9Q,SAAAA,MAEA,MAAO+Q,EAAWC,GAAgB9Q,EAAMmB,SAAgC,OAClE,WAAE4P,EAAU,OAAEC,IAAW,IAAAC,WAC7B3P,EAASN,EAAW,KACpB6P,EACA,CACE9P,UAAAA,KAKJ,IAAAmQ,gBAAeL,GAEf,MAAOM,EAAgBC,EAAqBC,IAC1C,IAAAC,iBAKIC,EAAavR,EAAM6D,SACvB,IAAM,CAACgN,KAAcM,IACrB,CAACA,EAAgBN,IAInB,OAFA,IAAAW,sBAAqBD,EAAYhQ,GAE5BD,GAIE,IAAAgO,cACL,gBAAC,EAAAmC,2BAA0B,CACzBL,oBAAqBA,EACrBC,sBAAuBA,GAEvB,qCAAK3Q,IAAKoQ,EAAcnQ,MAAOqQ,EAAOU,QAAYX,EAAWW,QAC1D5R,IAGL6P,SAASC,MAZF,O,qsBCzDX,oBAOA,SAASgB,KAGT,MAAMe,EAA6C,CACjDP,oBAAqBR,EACrBS,sBAAuBT,GAGZ,EAAAgB,mBACX5R,EAAM2O,cAAyC,MAEpC,EAAAkD,sBAAwB,IAAM7R,EAAM6O,WAAW,EAAA+C,oBAE/C,EAAAH,2BAA2D,EACtEL,oBAAqBU,EACrBT,sBAAuBU,EACvBjS,SAAAA,MAEA,MAAMkS,GAAS,IAAAH,yBACTI,EAAiBD,MAAAA,OAAM,EAANA,EAAQZ,oBACzBc,EAAmBF,MAAAA,OAAM,EAANA,EAAQX,sBAE3BD,EAAsBpR,EAAMG,aAC/BgS,IACKF,GACFA,EAAeE,GAEjBL,EAAgBK,KAElB,CAACL,EAAiBG,IAGdZ,EAAwBrR,EAAMG,aACjCgS,IACCJ,EAAkBI,KAKpB,CAACJ,EAAmBG,IAGhBE,EAAkBpS,EAAM6D,SAC5B,KAAM,CACJuN,oBAAAA,EACAC,sBAAAA,KAEF,CAACD,EAAqBC,IAGxB,OACE,gBAAC,EAAAO,mBAAmB5C,SAAQ,CAACnM,MAAOuP,GACjCtS,IAKP,0BAA+BqS,G,MAC7B,MAAME,EACgC,QAApC,EAAArS,EAAM6O,WAAW,EAAA+C,2BAAmB,QAAID,EAOpCW,EAAStS,EAAMC,OAAOoS,GAC5BrS,EAAMkJ,WAAU,KACdoJ,EAAOlS,QAAUiS,KAGnBrS,EAAMkJ,WAAU,KACd,GAAIiJ,EAEF,OADAG,EAAOlS,QAAQgR,oBAAoBe,GAC5B,IAAMG,EAAOlS,QAAQiR,sBAAsBc,KAEnD,CAACA,M,geCnFN,cACA,oBACA,UAAe,W,orBCFf,oBACA,cAEA,aAEA,cAqBA,UAVkBtQ,GAChB,uBAAKH,WAAW,aAAW,UAAiB,SAAGG,EAAMH,YACnD,wBAAMA,UAAW,UAAO,wBACxB,wBAAMA,UAAW,UAAO,yBACxB,uBAAKA,UAAW,UAAO,qBACrB,gBAAC,UAAgB,iBAAKG,EAAK,CAAEH,UAAW,UAAO,wB,geCrBrD,oBACA,cACA,UAAe,W,mrBCFf,oBACA,cAEA,cAeA,UARiBG,GACf,yCACMA,EAAK,CACTH,WAAW,aAAW,UAAO,iBAAkBG,EAAMH,WACrDrK,KAAK,W,geCdT,mBACA,aACA,UAAe,W,orBCFf,oBACA,cAEA,cAiBA,UAX0C,EAAGqK,UAAAA,EAAW6Q,MAAAA,EAAOzS,SAAAA,KAE3D,uBAAK4B,WAAW,aAAW,UAAO8Q,SAAU9Q,IAC1C,wBAAMA,UAAW,UAAO,qBAAmB,YAC3C,uBAAKA,UAAW,UAAO,sBACtB6Q,GAAS,uBAAK7Q,UAAW,UAAO,mBAAoB6Q,GACpDzS,I,2JCfP,oBACA,UAAe,W,orBCDf,oBACA,WACA,cAGA,WASA,cA2DA,UAzDuC,EACrC4B,UAAAA,EACAJ,OAAAA,EACAN,SAAAA,EACAD,UAAAA,EAAY,OACZjB,SAAAA,MAEA,MAAO+Q,EAAWC,GAAgB9Q,EAAMmB,SAAgC,OACjEsR,EAAUC,GAAe1S,EAAMmB,SAAgC,OAEhE,WAAE4P,EAAYC,OAAQ2B,IAAiB,IAAA1B,WAC3C3P,EAASN,EAAW,KACpB6P,EACA,CACE9P,UAAAA,EACAxH,UAAW,CACT,CACE+K,KAAM,QACNsO,QAAS,CACPT,QAASM,IAGb,CACEnO,KAAM,SACNsO,QAAS,CACPC,OAAQ,CAAC,EAAG,QAOtB,OAAKvR,GAIE,IAAAgO,cACL,qCACE5O,IAAKoQ,EACLpP,WAAW,aAAW,UAAgB,QAAGA,GACzCf,MAAOgS,EAAajB,OACpBoB,KAAK,WACD/B,EAAWW,QAEd5R,EACD,qCACEY,IAAKgS,EAAW,uBAEhBhR,UAAW,UAAO,iBAClBf,MAAOgS,EAAaI,OAChBhC,EAAWgC,SAGnBpD,SAASC,MApBF,O,orBCjDX,oBACA,WAEA,WAEA,cA0BA,UApBkD,EAChD/M,MAAAA,EACAS,GAAAA,EACAC,MAAAA,EACAzD,SAAAA,MAEA,MAAM,SAAEkT,IAAa,IAAAC,eACf/S,GAAU,IAAAgT,gBAAe5P,GAC/B,OACE,gBAAC,UAAQ,CACPT,MAAOA,EACPU,MAAOA,EACP4P,SAAUH,GAAY1P,EACtBpD,QAASA,GAERJ,K,orBC1BP,oBACA,cAEA,WAEA,cAiCA,UAxBkC,EAChC4B,UAAAA,EACAxF,GAAAA,EACAH,eAAAA,EACAgU,wBAAAA,EACAjQ,SAAAA,MAEA,MAAMsT,EAAUpT,EAAM6D,SACpB,KAAM,CACJ9H,eAAAA,EACAsX,kBAAmBtD,KAErB,CAAChU,EAAgBgU,IAGnB,OACE,gBAAC,EAAAuD,iBAAiBtE,SAAQ,CAACnM,MAAOuQ,GAChC,sBAAIlX,GAAIA,EAAIwF,WAAW,aAAW,OAAQ,UAAa,KAAGA,IACvD5B,M,opBChCT,oBAEA,WASa,EAAAwT,iBAAmBtT,EAAM2O,cAAgC,CACpE5S,gBAAgB,IAAAwX,oBAChBF,kBAJF,eAOA,iCACE,OAAOrT,EAAM6O,WAAW,EAAAyE,oB,orBCjB1B,oBACA,cACA,WACA,WAKA,cAEA,cACA,WAuFA,UA5E0C,EACxCpX,GAAAA,EACAqH,MAAAA,EACAV,MAAAA,EACAsQ,SAAAA,EACAjT,QAAAA,EACAJ,SAAAA,MAEA,MAAM,eAAE/D,EAAc,kBAAEsX,IAAsB,IAAAG,uBAExCC,GAAgD,IAAnC1X,EAAe2X,QAAQ7Q,GAEpC8Q,EAAiB3T,EAAMG,aAC1BI,IACC,GAAIA,EAAEwH,iBACJ,OAEF,MAAM0L,GAAgD,IAAnC1X,EAAe2X,QAAQ7Q,GAC1CtC,EAAEyH,iBAEAqL,EADEI,EACgB1X,EAAe6X,QAAQC,GAAMA,IAAMhR,IAEnC,IAAI9G,EAAgB8G,MAG1C,CAAC9G,EAAgBsX,EAAmBxQ,IAGhCiR,EAAe9T,EAAMG,aACxBI,KACuD,IAAnCxE,EAAe2X,QAAQ7Q,IAExCwQ,EAAkB,IAAItX,EAAgB8G,IAEpC3C,GACFA,EAAQK,KAGZ,CAACL,EAASnE,EAAgB8G,IAE5B,OACE,sBAAI3G,GAAIA,EAAIwF,WAAW,aAAW,YAAa,UAAO,eACpD,uBACEA,WAAW,aACT,UAAO,qBACPyR,GAAY,UAAO,iCAGpBrT,EACC,gBAAC,EAAA0E,gBAAe,CACd9C,UAAW,UAAO,qBAClBqS,YAAU,EACV/R,MAAM,UACNyC,KAAMgP,EAAa,EAAAO,cAAgB,EAAAC,eACnC/T,QAASyT,IAGX,uBAAKjS,UAAW,UAAO,yBAEzB,uBAAKA,UAAW,UAAO,mBAAoBxB,QAAS4T,GACjDvQ,IAGJkQ,GAAc3T,GACb,gBAAC,UAAI,CACH/D,eAAgBA,EAChBgU,wBAAyBsD,EACzB3R,UAAW,UAAO,uBAEjB5B,M,4ICzFE,EAAA6G,sBAAwB,aACxB,EAAAE,oBAAuBlO,IAAkC,CACpEtB,KAAM,EAAAsP,sBACN7O,QAAS,CAAEa,UAAAA,KAGb,iCAAsCiO,GACpC,OAAOA,EAAKvP,OAAS,EAAAsP,wB,qHCTV,EAAA1H,cAAgB,IAEhB,EAAAiV,cAAgB,KAChB,EAAAC,aAAe,M,gBCC5B,SAASC,EAAQzP,GACf,MAAM0P,EAAM,IAAIC,MAGhB,OAFAD,EAAIE,QAAUC,QAAQC,MAAMC,KAAKF,SACjCH,EAAI1P,IAAMA,EACH0P,E,iDAGT,MAAMM,EAAqD,CACzDC,MAAOR,EAAQ,EAAQ,QACvBS,MAAOT,EAAQ,EAAQ,QACvBU,MAAOV,EAAQ,EAAQ,QACvBW,MAAOX,EAAQ,EAAQ,QACvBY,OAAQZ,EAAQ,EAAQ,SAoCpBa,EAAwD,CAC5DC,UAAW,GACXzV,OACEjB,EACAtG,EACAid,GAWA,OATA3W,EAAIE,OACJF,EAAIM,YAEJN,EAAIO,UAAY,OAEhBoW,EAAY3W,GAEZA,EAAI4W,OAAwBld,EAAOwN,MAwCnBxG,KAAKC,GAAM,KAtCnBjH,EAAOuN,QACb,IAAK,QAEHjH,EAAI6W,UAAU,KAAO,IAAM,IAAM,IACjC,MACF,IAAK,QAEH7W,EAAI6W,UAAU,MAAQ,IAAM,IAAM,KAClC,MACF,IAAK,QAEH7W,EAAI6W,UAAU,KAAO,KAAO,IAAM,KAClC,MACF,IAAK,QAEH7W,EAAI6W,UAAU,KAAO,IAAM,IAAM,KACjC,MAEF,QACE7W,EAAIQ,IAAI,EAAG,EAAG,IAAM,EAAG,EAAIE,KAAKC,IAGpCX,EAAIY,OAEJ,MAAMiV,EAAMM,EAAiBzc,EAAOuN,QACpC,GAAI4O,EAAK,CACP,MAAMiB,EAAIjB,EAAI7Y,MAAQ,IAChB+Z,EAAIlB,EAAI5Y,OAAS,IACvB+C,EAAIG,MAAM,GAAI,GACdH,EAAII,WAAW0W,EAAI,GAAIC,EAAI,GAC3B/W,EAAIgX,UAAUnB,EAAK,EAAG,EAAGiB,EAAGC,GAE9B/W,EAAIK,YAGR,UAAeoW,G,2JCvGf,oBACA,UAAe,W,+DCGf,MAAMQ,EAA0D,CAC9DP,UAAW,GACXzV,OACEjB,EACAtG,EACAid,GAEA3W,EAAIM,YACJN,EAAIO,UAAY,QAChBoW,EAAY3W,GACZA,EAAIQ,IAAI,EAAG,EAAG,GAAK,EAAG,EAAIE,KAAKC,IAC/BX,EAAIY,SAGR,UAAeqW,G,iECff,iBAOMC,EAAmD,GA8BzD,MAAMC,EAAoD,CACxDT,UAAW,EAAAjW,cACXQ,OACEjB,EACAtG,EACAid,EACA7V,GAEAd,EAAIE,OAEJF,EAAIO,UAAY,MAChBoW,EAAY3W,GAEZA,EAAIM,YACJN,EAAIQ,IAAI,EAAG,EAAG,EAAAC,cAAe,EAAG,EAAIC,KAAKC,IACzCX,EAAIoX,MAAM,GAAK,EAAA3W,cAAgB,IAAM,GAAK,KAC1CT,EAAIY,OAEJ,MAAMiV,EA7BV,SACEwB,EACAvW,GAEA,MAAM3C,EAAM,iBAAiBkZ,IAC7B,OAAKvW,EAAgB3C,GAvBvB,SACEmZ,EACAhV,GAEA,GAAI4U,EAAcI,IAAeJ,EAAcI,GAAYvZ,OAASuE,EAClE,OAAO4U,EAAcI,GAAYC,MAGnC,MAAM1B,EAAM,IAAIC,MAOhB,OANAD,EAAIE,QAAUC,QAAQC,MAAMC,KAAKF,SACjCH,EAAI1P,IAAM7D,EACV4U,EAAcI,GAAc,CAC1BC,MAAO1B,EACP9X,KAAMuE,GAEDuT,EAWA2B,CAAgBrZ,EAAK2C,EAAgB3C,IAFnC,KAuBKsZ,CAAoB/d,EAAOge,OAAQ5W,GAC/C,GAAI+U,EAAK,CACP,MAAMiB,EAAIjB,EAAI7Y,MAAQ,GAChB+Z,EAAIlB,EAAI5Y,OAAS,GACvB+C,EAAIG,MAAM,GAAI,GACdH,EAAII,WAAW0W,EAAI,GAAIC,EAAI,GAC3B/W,EAAIgX,UAAUnB,EAAK,EAAG,EAAGiB,EAAGC,GAG9B/W,EAAIK,YAGR,UAAe8W,G,iECrEf,iBAIMQ,EAAwC,CAC5CjB,UAAW,EAAAf,aACX1U,OACEjB,EACAtG,EACAid,GAEA3W,EAAIM,YACJN,EAAIO,UAAY,OAChBoW,EAAY3W,GACZ,MAAMoD,EAAwB,UAAjB1J,EAAOuN,OAAqB,EAAAyO,cAAgB,EAAAC,aACzD3V,EAAIQ,IAAI,EAAG,EAAG4C,EAAM,EAAG,EAAI1C,KAAKC,IAChCX,EAAIY,SAGR,UAAe+W,G,qLChBf,oBACA,cACA,cACA,cAEa,EAAA5W,iBAA+D,CAC1E6W,eAAgB,UAChBC,gBAAiB,UACjBC,aAAc,UACdC,OAAQ,Y,6fCbV,oBAEA,cACA,cAEA,iBACa,EAAA1K,qBAAsB,aAAO,EAAAtM,kBAAkBiX,QAC1D,CAACpe,EAAGqe,IAAQvX,KAAKkN,IAAIhU,EAAGqe,EAAIvB,YAC5B,I,+FCRF,iBAcMwB,EAA2C,CAC/C,cAAe,EAAQ,QAGzB,gCACEC,EACAf,GAEA,MAAMrZ,EAAOma,EAAeC,GAC5B,OAAKpa,EAMP,SAAsBqa,EAAoBhB,GACxCA,GAAO,IAAAzJ,oBAAmByJ,GAC1B,MAAQzd,SAAU0e,EAAcC,QAASC,GAAgBH,EACnDI,EAAwB,CAC5BpL,GAAI,CACFxT,EAAGye,EAAaL,QAAO,CAACpe,EAAGmI,IAAMrB,KAAKmN,IAAIjU,EAAGmI,EAAEnI,IAAI,GAAK2e,EAAY3e,EAAI,EACxEkC,EAAGuc,EAAaL,QAAO,CAAClc,EAAGiG,IAAMrB,KAAKmN,IAAI/R,EAAGiG,EAAEjG,IAAI,GAAKyc,EAAYzc,EAAI,GAE1EwR,GAAI,CACF1T,EAAGye,EAAaL,QAAO,CAACpe,EAAGmI,IAAMrB,KAAKkN,IAAIhU,EAAGmI,EAAEnI,IAAI,GAAK2e,EAAY3e,EAAI,EACxEkC,EAAGuc,EAAaL,QAAO,CAAClc,EAAGiG,IAAMrB,KAAKkN,IAAI9R,EAAGiG,EAAEjG,IAAI,GAAKyc,EAAYzc,EAAI,IAItE2c,GAAW,IAAAC,UAASF,GAEpB7e,EAAwB,GAE9B,IACE,IAAIgf,EAAejY,KAAKkY,MAAMxB,EAAKhK,GAAGxT,EAAI6e,EAASzb,OACnD2b,GAAgBjY,KAAKmY,KAAKzB,EAAK9J,GAAG1T,EAAI6e,EAASzb,OAC/C2b,IAEA,IACE,IAAIG,EAAepY,KAAKkY,MAAMxB,EAAKhK,GAAGtR,EAAI2c,EAASxb,QACnD6b,GAAgBpY,KAAKmY,KAAKzB,EAAK9J,GAAGxR,EAAI2c,EAASxb,QAC/C6b,IAEA,IAAK,IAAInR,EAAI,EAAGA,EAAI0Q,EAAava,OAAQ6J,IAAK,CAC5C,MAAMoR,EAAaV,EAAa1Q,GAC1BsE,EAAW,CACfrS,EAAGmf,EAAWnf,EAAI6e,EAASzb,MAAQ2b,EACnC7c,EAAGid,EAAWjd,EAAI2c,EAASxb,OAAS6b,IAEjC,IAAAzK,qBAAoBpC,EAAGmL,IAG5Bzd,EAASqf,KAAK,OAAD,wBACRD,GACA9M,IAMX,OAAOtS,EAhDA0e,CAAata,EAAMqZ,GAFjB,K,8ECkBX,SAAgB6B,EACdhX,EACArE,EACAyG,GAEA,GAAoB,IAAhBzG,EAAKE,OACP,MAAqB,mBAAVuG,EACFA,EAAMpC,GAERoC,EAGT,MAAM6U,EAAatb,EAAKC,MAAM,EAAGD,EAAKE,OAAS,GAAG2J,IAAI0R,QAChDC,EAAWxb,EAAKA,EAAKE,OAAS,GAE9Bub,EAAUC,EAAMrX,GAEtB,IAAIsX,EAAqBF,EAEzB,IAAK,MAAMG,KAAON,EAChBK,EAAcC,GAAOF,EAAMC,EAAcC,IACzCD,EAAgBA,EAAcC,GAShC,OALED,EAAcH,GADK,mBAAV/U,EACiBA,EAAMkV,EAAcH,IAEpB/U,EAGrBgV,EAGT,SAASC,EAAiDG,GACxD,OAAI9Z,MAAMC,QAAQ6Z,GACTA,EAAI5b,QAENiC,OAAO4Z,OAAO,GAAID,G,+EA5C3B,oBAAyB9b,GAIvB,OAAOsb,EAHQtb,EAAK,GACPA,EAAKE,MAAM,EAAGF,EAAKG,OAAS,GAAG2J,IAAI0R,QAClCxb,EAAKA,EAAKG,OAAS,KAInC,kB,cCJA,SAAgB6P,KAAsBhQ,GACpC,IAAIyP,EACAE,EACJ,GAAoB,IAAhB3P,EAAKG,OAAc,CACrB,MAAMoG,EAAIvG,EAAK,GACfyP,EAAKlJ,EAAEkJ,GACPE,EAAKpJ,EAAEoJ,QAEPF,EAAKzP,EAAK,GACV2P,EAAK3P,EAAK,GAEZ,MAAO,CACLyP,GAAI,CACFxT,EAAG8G,KAAKmN,IAAIT,EAAGxT,EAAG0T,EAAG1T,GACrBkC,EAAG4E,KAAKmN,IAAIT,EAAGtR,EAAGwR,EAAGxR,IAEvBwR,GAAI,CACF1T,EAAG8G,KAAKkN,IAAIR,EAAGxT,EAAG0T,EAAG1T,GACrBkC,EAAG4E,KAAKkN,IAAIR,EAAGtR,EAAGwR,EAAGxR,K,6LApDd,EAAA6d,UAAY7Z,OAAOC,OAAO,CAAEnG,EAAG,EAAGkC,EAAG,IAYrC,EAAA8d,SAAW9Z,OAAOC,OAAO,CAAEqN,GAAI,EAAAuM,UAAWrM,GAAI,EAAAqM,YAE3D,oBAAyBvM,EAAWE,GAClC,MAAO,CACL1T,EAAGwT,EAAGxT,EAAI0T,EAAG1T,EACbkC,EAAGsR,EAAGtR,EAAIwR,EAAGxR,IAIjB,yBAA8BsR,EAAWE,GACvC,MAAO,CACL1T,EAAGwT,EAAGxT,EAAI0T,EAAG1T,EACbkC,EAAGsR,EAAGtR,EAAIwR,EAAGxR,IAIjB,qBAA0BuZ,GACxB,OAAO3U,KAAKmZ,KAAKxE,EAAEzb,EAAIyb,EAAEzb,EAAIyb,EAAEvZ,EAAIuZ,EAAEvZ,IAKvC,uBAuBA,0BAA+BoI,EAAc+H,GAC3C,MAAO,CACLmB,GAAI,CACFxT,EAAG8G,KAAKmN,IAAI3J,EAAEkJ,GAAGxT,EAAGqS,EAAErS,GACtBkC,EAAG4E,KAAKmN,IAAI3J,EAAEkJ,GAAGtR,EAAGmQ,EAAEnQ,IAExBwR,GAAI,CACF1T,EAAG8G,KAAKkN,IAAI1J,EAAEoJ,GAAG1T,EAAGqS,EAAErS,GACtBkC,EAAG4E,KAAKkN,IAAI1J,EAAEoJ,GAAGxR,EAAGmQ,EAAEnQ,MAK5B,+BAAoCmQ,EAAU/H,GAG5C,SAFAA,EAAIyJ,EAAmBzJ,IAEjBkJ,GAAGxT,EAAIqS,EAAErS,GAAKsK,EAAEoJ,GAAG1T,EAAIqS,EAAErS,GAI3BsK,EAAEkJ,GAAGtR,EAAImQ,EAAEnQ,GAAKoI,EAAEoJ,GAAGxR,EAAImQ,EAAEnQ,IAOjC,oBAAyBoI,GAEvB,MAAO,CACLlH,OAFFkH,EAAIyJ,EAAmBzJ,IAEZoJ,GAAG1T,EAAIsK,EAAEkJ,GAAGxT,EACrBqD,OAAQiH,EAAEoJ,GAAGxR,EAAIoI,EAAEkJ,GAAGtR,K,iEC5F1B,MAEMge,GAAU,EAFhB,SAEgBC,qBAChB,UAAeD,G,woBCHf,oBACA,WAWA,qBACEE,KACGC,GAEH,MAAM9Q,GAAW,IAAAC,eACjB,OAAO5H,EAAMG,aAAY,KACvB,MAAM7I,EAASkhB,KAAiBC,GAC5BnhB,GACFqQ,EAASrQ,KAEV,CAACqQ,EAAU6Q,KAAkBC,KAGlC,0BACED,KACGC,GAEH,MAAM9Q,GAAW,IAAAC,eACjB,OAAO5H,EAAMG,aACVI,IACC,GAAIA,EAAEwH,iBACJ,OAEFxH,EAAEyH,iBACF,MAAM1Q,EAASkhB,KAAiBC,GAC5BnhB,GACFqQ,EAASrQ,KAGb,CAACqQ,EAAU6Q,KAAkBC,M,0sBCzCjC,oBACA,cASA,yBAAiCC,EAAoB,IACnD,MAAOC,EAAOC,GAAY5Y,EAAMmB,SAASuX,GACnCG,EAAU7Y,EAAMG,aACnByG,IACCgS,EAAS,IAAID,EAAO/R,MAEtB,CAAC+R,IAEGG,EAAa9Y,EAAMG,aACtByG,IACCgS,GAAS,aAAWD,EAAO,CAAC/R,OAE9B,CAAC+R,IAGH,MAAO,CAACA,EAAOE,EAASC,EAAYF,K,goBCzBtC,oBAEA,8BACEG,GAAwB,GAExB,MAAOvN,EAAOwN,GAAYhZ,EAAMmB,SAAS4X,GAKzC,MAAO,CAACvN,EAHQxL,EAAMG,aAAY,IAAM6Y,GAAS,IAAO,IACvChZ,EAAMG,aAAY,IAAM6Y,GAAS,IAAQ,O,goBCR5D,oBAUA,8BAAmCtY,GACjC,MAAOkB,EAAMqX,GAAWjZ,EAAMmB,SAA6B,CACzD4I,KAAM,EACNE,IAAK,EACLiP,MAAO,EACPC,OAAQ,EACR3d,MAAO,EACPC,OAAQ,IA+BV,OA5BAuE,EAAMkH,iBAAgB,KACpB,IAAKxG,EAAIN,QACP,OAGF,MAAMgZ,EAAW,IAAIC,gBAAe,KAClC,MAAMC,EAAK5Y,EAAIN,QACf,IAAKkZ,EACH,OAEF,MAAMC,EAAID,EAAGE,wBACbP,EAAQ,CACNhP,IAAKsP,EAAEtP,IACPF,KAAMwP,EAAExP,KACRmP,MAAOK,EAAEL,MACTC,OAAQI,EAAEJ,OACV3d,MAAO+d,EAAE/d,MACTC,OAAQ8d,EAAE9d,YAMd,OAFA2d,EAASK,QAAQ/Y,EAAIN,SAEd,KACLgZ,EAASM,gBAEV,CAAChZ,IAEGkB,I,4nBChDT,oBAEA,0BAIElB,EACArJ,EACAsiB,EAIA/G,GAEA5S,EAAMkJ,WAAU,KACd,IAAKxI,EAAIN,QACP,OAIF,MAAMwZ,EAAelZ,EAAIN,QAGzB,OADAwZ,EAAaC,iBAAiBxiB,EAAMsiB,EAAU/G,GACvC,KACLgH,EAAaE,oBAAoBziB,EAAMsiB,EAAU/G,MAElD,CAACvb,EAAMsiB,EAAUjZ,EAAKkS,M,koBC1B3B,oBAEA,WAoCA,SAASmH,EAAY3hB,GACnB,OAAO4hB,QAAQ5hB,GAnCjB,gCACE+Z,EACA8H,EACAC,GAAO,GAEP,MAAMC,EAAUna,EAAMG,aACnBI,IACC,MAAM6Z,GAAW,IAAAriB,SAAQoa,GAASyB,OAAOmG,GACpCK,EAAS9d,QAIV8d,EAASC,OAAOlI,IAAaA,EAAQmI,SAAS/Z,EAAEE,WAClDwZ,MAGJ,CAAC9H,EAAS8H,IAGZja,EAAMkJ,WAAU,KACd,GAAKgR,EAOL,OAHAvK,SAASkK,iBAAiB,YAAaM,GACvCxK,SAASkK,iBAAiB,aAAcM,GAEjC,KACLxK,SAASmK,oBAAoB,YAAaK,GAC1CxK,SAASmK,oBAAoB,aAAcK,MAE5C,CAACA,EAASD,M,sFClCf,iBAEA,uBAA+BK,GAC7B,OAAO,kBAAiB/O,GAAU+O,EAAS/O,O,orBCJ7C,SAEA,oBACA,cAEA,cAEMgP,EAAS7K,SAAS8K,eAAe,QACnCD,GACFE,EAASjb,OAAO,gBAAC,UAAI,MAAK+a,I,mLCT5B,oBACA,WACA,cAEA,0BACElX,EACA7C,EACAP,GAEA,OAAO,UAAMC,aACVwa,IACKza,GACFA,EAAQya,GAIPA,EAAM5S,kBACU,IAAjB4S,EAAMC,QACJna,GAAqB,UAAXA,IACX,IAAAoa,mBAAkBF,KAEnBA,EAAM3S,iBAEN,UAAQwP,KAAKlU,MAGjB,CAACA,EAAI7C,EAAQP,M,0FC1BjB,MAAM4a,EAAM,EAAQ,OACdC,EAAQ,EAAQ,OAET,EAAAC,gBAAkB,CAC7BF,IAAAA,EACAC,MAAAA,I,gICLF,gBAEa,EAAAE,mBAAqB3c,OAAOC,OAAqB,IAc9D,wBAA6BgC,GAC3B,MAAM,QAAE2a,EAAO,OAAEC,EAAM,SAAE7M,EAAQ,QAAE8M,GAAY7a,EAC/C,MAAO,CAEL2N,YAAa,EAAAmN,wBAA0BD,EAAUF,EACjDC,OAAAA,EACA7M,SAAAA,IAIJ,6BAAkCqM,GAChC,SAAUA,EAAMS,SAAWT,EAAMQ,QAAUR,EAAMO,SAAWP,EAAMrM,Y,orBC3BpE,oBAEA,WACA,WAEA,cACA,cACA,cACA,cAcA,UAZ2B,KACzB,MAAMgN,GAAe,IAAAnY,aAAY,EAAAC,2BACjC,OACE,gCACmB,QAAhBkY,GAA0B,gBAAC,UAAa,MACxB,WAAhBA,GAA6B,gBAAC,UAAkB,MAChC,UAAhBA,GAA4B,gBAAC,UAAW,MACxB,SAAhBA,GAA2B,gBAAC,UAAa,S,2JCjBhD,oBACA,UAAe,W,orBCDf,oBAEA,WAEA,cAEA,WAWA,UATsB,KACpB,MAAM7G,GAAQ,IAAAtR,aAAY,EAAAoY,0BAC1B,OACE,gBAAC,UAAI,CAAC5K,iBAAiB,GACrB,4BAAO8D,M,orBCZb,oBAEA,cAMA,UAJsB,IACb,gBAAC,UAAI,CAAC9D,iBAAiB,GAAK,qB,orBCLrC,oBACA,WAEA,cAEA,cAWA,UATsB,KACpB,MAAM,EAAE/K,IAAM,IAAAC,kBACd,OACE,gBAAC,UAAI,CAAC8K,iBAAiB,GACrB,uBAAKjP,UAAW,UAAa,MAAIkE,EAAE,kC,2JCXzC,oBACA,UAAe,W,orBCDf,oBACA,WACA,WAEA,WAEA,WAEA,cACA,cACA,cACA,cAEA,UAEA,cA+CA,UA7CoB,K,UAClB,MAAM+B,GAAW,IAAAC,gBACX,EAAEhC,IAAM,IAAAC,kBAER2V,GAAc,IAAArY,aAAY,EAAAsY,qBAE1BC,EAAmB1b,EAAMG,aAAamE,IAC1CqD,GAAS,IAAAgU,gBAAe,OAAQrX,MAC/B,IACGsX,EAAqB5b,EAAMG,aAAa0b,IAC5ClU,GAAS,IAAAgU,gBAAe,SAAUE,MACjC,IACGC,EAA0B9b,EAAMG,aAAa4b,IACjDpU,GAAS,IAAAgU,gBAAe,cAAeI,MACtC,IAEH,OACE,gBAAC,UAAI,KACH,gBAAC,UAAI,CAACra,UAAW,UAAO,2BACtB,uBAAKA,UAAW,UAAO,yBACrB,6BAAQkE,EAAE,iBACV,gBAAC,UAAa,CACZ/C,MAAwB,QAAjB,EAAA2Y,MAAAA,OAAW,EAAXA,EAAalX,YAAI,QAAI,GAC5BxB,SAAU4Y,KAGd,uBAAKha,UAAW,UAAO,yBACrB,6BAAQkE,EAAE,mBACV,gBAAC,UAAa,CACZ/C,MAA0B,QAAnB,EAAA2Y,MAAAA,OAAW,EAAXA,EAAaK,cAAM,QAAI,GAC9B/Y,SAAU8Y,KAGd,uBAAKla,UAAW,UAAO,yBACrB,6BAAQkE,EAAE,wBACV,gBAAC,UAAc,CACb/C,MAA+B,QAAxB,EAAA2Y,MAAAA,OAAW,EAAXA,EAAaO,mBAAW,QAAI,GACnCjZ,SAAUgZ,S,2JCtDtB,oBACA,UAAe,W,orBCDf,oBACA,WACA,WACA,WAEA,WAEA,WAEA,cACA,cACA,cAGA,WA+DA,UA1D4B,KAC1B,MAAMnU,GAAW,IAAAC,gBACX,EAAEhC,IAAM,IAAAC,kBACRmW,GAAgB,IAAA7Y,cAAaqI,IACjC,IAAA0E,4BAA2B1E,EAAO,kBAG7ByQ,EAAiBC,GAAsBlc,EAAMmB,SAClD,MAaF,OAV+BnB,EAAMG,aAAY,KAC/C+b,EAAmB,MAClB,IACqBlc,EAAMG,aAAY,KACjB,MAAnB8b,GAA2BA,EAAgB3f,OAAS,IACtD4f,EAAmB,MACnBvU,GAAS,IAAAjL,oBAAmB,cAAeuf,OAE5C,CAACA,IAGF,gCACE,gBAAC,UAAmB,MACpB,gBAAC,UAAI,KACH,gBAAC,UAAI,KACH,0BACGD,EAAc/V,KAAKlI,GAClB,sBAAIpB,IAAKoB,GACP,gBAAC,EAAAgE,KAAI,CAACuB,GAAI,gBAAgBvF,KAAiBA,Y,2JChD3D,oBACA,UAAe,W,orBCDf,oBACA,WACA,WACA,WACA,cAEA,WAEA,WAEA,cACA,cACA,cACA,cAEA,WAEA,aACA,cAmEA,UAjE2B,KACzB,MAAM4J,GAAW,IAAAC,gBACX,EAAEhC,IAAM,IAAAC,kBACRoK,GAAgB,IAAA9M,cAAaqI,IACjC,IAAA0E,4BAA2B1E,EAAO,kBAG7B2Q,EAAaC,GAAkBpc,EAAMmB,SAAwB,MAE9Dkb,EAAyBrc,EAAMG,aAAY,KAC/Cic,EAAe,MACd,IACGE,EAAwBtc,EAAMG,aAAY,KAC9Cic,EAAe,QACd,IACGG,EAAkBvc,EAAMG,aAAY,KACrB,MAAfgc,GAAuBA,EAAY7f,OAAS,IAC9C8f,EAAe,MACfzU,GAAS,IAAAjL,oBAAmB,cAAeyf,IAC3C,UAAQ3E,KAAK,iBAAiB2E,QAE/B,CAACA,IAEJ,OACE,gCACE,gBAAC,UAAmB,MACpB,gBAAC,UAAI,KACH,gBAAC,UAAI,KACH,0BACGlM,EAAchK,KAAKlI,GAClB,sBAAIpB,IAAKoB,GACP,gBAAC,EAAAgE,KAAI,CAACuB,GAAI,iBAAiBvF,KAAiBA,OAIlD,gBAAC,UAAM,CAAC4D,QAAQ,UAAUzB,QAASmc,GAChCzW,EAAE,oBAEL,gBAAC,UAAK,CACJtE,OAAuB,MAAf6a,EACR5a,eAAgB+a,GAEhB,yBAAI1W,EAAE,8BACN,2BACE,gBAAC,UAAO,CACN4W,WAAS,EACT3Z,MAAOsZ,EACPtb,SAAWN,GAAM6b,EAAe7b,EAAEE,OAAOoC,UAG7C,2BACE,gBAAC,UAAM,CACLnD,SAAyB,MAAfyc,GAAsC,IAAfA,EACjCjc,QAASqc,GAER3W,EAAE,2B,2JC3EnB,oBACA,UAAe,W,orBCDf,oBAEA,WAEA,cAEA,WAEA,cACA,cAEA,aACA,cA8BA,UAtBI,EAAG6W,MAAAA,M,MACL,MAAM9U,GAAW,IAAAC,gBACX,aAAE7J,GAA8B,QAAb,EAAA0e,MAAAA,OAAK,EAALA,EAAOC,cAAM,QAAI,GAU1C,OARA1c,EAAMkJ,WAAU,KACVnL,EACF4J,GAAS,IAAA7J,mBAAkBC,IAE3B,UAAQyZ,KAAK,OAEd,CAACzZ,IAGF,gCACE,gBAAC,UAAmB,MACpB,gBAAC,UAAI,CAAC2S,gBAAiB,gBAAC,UAAa,OACnC,gBAAC,UAAS,U,orBCpClB,oBACA,WAEA,WAEA,cACA,cACA,cACA,cACA,cACA,cAEA,WACA,WAWA,UATsB,KACpB,MAAM,EAAE9K,IAAM,IAAAC,kBACd,OACE,gBAAC,UAAU,CAAC/E,QAAS,gBAAC6b,EAAO,MAAK5b,UAAU,gBAC1C,gBAAC,UAAM,CAACY,QAAQ,QAAQiE,EAAE,4BAOhC,MAAM+W,EAAU,KACd,MAAM,EAAE/W,IAAM,IAAAC,kBACR+W,GAAa,IAAA3X,gBAAe,EAAAlM,mBAClC,OACE,gBAAC,UAAI,KACH,gBAAC,UAAW,CAAC+H,QAAS,gBAAC+b,EAAa,OAAMjX,EAAE,eAC5C,gBAAC,UAAe,MAChB,gBAAC,UAAQ,CAAC1F,QAAS0c,GAAahX,EAAE,gBAKlCiX,EAAgB,KACpB,MAAM,EAAEjX,IAAM,IAAAC,kBACd,OACE,gBAAC,UAAI,KACH,gBAAC,UAAW,CAAC/E,QAAS,gBAACgc,EAAqB,OACzClX,EAAE,wBAEL,gBAAC,UAAQ,CAAClG,UAAU,GAAOkG,EAAE,sBAK7BkX,EAAwB,KAC5B,MAAM,EAAElX,IAAM,IAAAC,kBACRkX,GAAgB,IAAA9X,gBAAe,EAAAhM,2BAA4B,SAC3D+jB,GAAc,IAAA/X,gBAAe,EAAAhM,2BAA4B,OAC/D,OACE,gBAAC,UAAI,KACH,gBAAC,UAAQ,CAACiH,QAAS6c,GAChBnX,EAAE,sCAEL,gBAAC,UAAQ,CAAC1F,QAAS8c,GAChBpX,EAAE,uC,mrBC5DX,oBAEA,aACA,cAEA,cAWA,UATkB,IAEd,uBAAKlE,UAAW,UAAO,yBACrB,gBAAC,UAAS,CAACA,UAAW,UAAO,uBAC7B,gBAAC,UAAgB,CAACA,UAAW,UAAO,0B,0JCX1C,mBACA,UAAe,W,2JCDf,oBACA,UAAe,W,orBCDf,oBAEA,WACA,WACA,WAEA,WAEA,WAEA,WAEA,cACA,cACA,cACA,cACA,cACA,cAEA,cACA,cACA,cACA,cACA,cAEA,cAmFA,UA7E6E,EAC3E+a,OACEC,QAAU3e,aAAAA,Q,MAGZ,MAAM4J,GAAW,IAAAC,gBACX,IAAQ,IAAA/B,kBAERoX,GAAa,IAAA9Z,cAAaqI,IAC9B,IAAA0R,6BAA4B1R,EAAO,cAAezN,KAG9Cof,EAAuBnd,EAAMG,aAChCI,IACCoH,GACE,IAAAyV,oBACE,cACArf,EACA,kBACAwC,EAAEE,OAAO4c,YAIf,CAACtf,IAGH,OAAKkf,EAKH,gCACE,gBAAC,UAAmB,MACpB,gBAAC,UAAI,KACH,gBAAC,UAAI,KACH,uBAAKvb,UAAW,UAAO,8BACrB,uBAAKA,UAAW,UAAO,6BACrB,uBAAKA,UAAW,UAAO,2BACrB,gBAAC,UAAc,CAAC3D,aAAcA,IAC9B,gBAAC,UAAO,MACR,gBAAC,UAAsB,CAACA,aAAcA,IACtC,gBAAC,UAAO,MACR,gBAAC,UAAe,CAACA,aAAcA,IAC/B,gBAAC,UAAqB,CAACA,aAAcA,KAEvC,uBAAK2D,UAAW,UAAO,4BACrB,gBAAC,UAAQ,CACPA,UAAW,UAAO,0BAClB6B,MAAOqC,EAAE,yBAET,2BACGA,EAAE,+B,IAAiC,IACpC,yBACEvO,KAAK,WACLgmB,QAAmC,QAA1B,EAAAJ,EAAWK,uBAAe,SACnCzc,SAAUsc,MAIhB,uBAAKzb,UAAW,UAAO,wBACrB,gBAAC,UAAe,CAAC3D,aAAcA,OAIrC,gBAAC,UAAU,CACT4D,QAAQ,UACR2B,GAAI,iBAAiBvF,gBAEpB6H,EAAE,6BAzCN,gBAAC,EAAAvC,SAAQ,CAACC,GAAG,Q,orBC1DxB,oBACA,WACA,WAEA,WAEA,WAEA,WAEA,cACA,aAEA,cAwCA,UAlCwB,EAAGvF,aAAAA,M,MACzB,MAAM,EAAE6H,IAAM,IAAAC,kBACR8B,GAAW,IAAAC,eAEXqV,GAAa,IAAA9Z,cAAaqI,IAC9B,IAAA0R,6BAA4B1R,EAAO,cAAezN,KAG9Cwf,EAAavd,EAAMG,aACtB6B,IACC2F,GACE,IAAAyV,oBAAmB,cAAerf,EAAc,cAAeiE,MAGnE,CAACjE,IAGH,OAAKkf,EAKH,gBAAC,UAAQ,CACP1Z,MAAOqC,EAAE,4BACTlE,UAAW,UAAO,2BAElB,gBAAC,UAAW,CACVM,MAA6B,QAAtB,EAAAib,EAAWO,mBAAW,QAAI,UACjC3c,SAAU0c,KAVP,O,2JCrCX,oBACA,UAAe,W,orBCDf,oBACA,WACA,WAEA,WAEA,WAEA,WAEA,cAEA,cAiDA,UA3C8B,EAC5Bxf,aAAAA,M,MAEA,MAAM,EAAE6H,IAAM,IAAAC,kBACR8B,GAAW,IAAAC,eACXqV,GAAa,IAAA9Z,cAAaqI,IAC9B,IAAA0R,6BAA4B1R,EAAO,cAAezN,KAG9C0f,EAAmBzd,EAAMG,aAC5B4b,IACmB,MAAdkB,GAGJtV,GACE,IAAAyV,oBACE,cACArf,EACA,cACAge,MAIN,CAAChe,IAGH,OAAKkf,EAKH,uBAAKvb,UAAW,UAA8B,uBAC5C,gBAAC,UAAc,CACbA,UAAW,UAAO,+BAClBgc,YAAa9X,EAAE,2BACf+X,QAAS,GACTjF,aAAoC,QAAtB,EAAAuE,EAAWlB,mBAAW,QAAI,GACxCjZ,SAAU2a,KAVP,O,orBC7CX,oBAEA,WAEA,cAEA,cAmGA,UA7FwB,EAAG1f,aAAAA,MACzB,MAAO6f,EAAoBC,EAAwBC,IACjD,IAAAC,uBAAsBhgB,EAAc,uBAE/BigB,EAAiBC,EAAqBC,IAC3C,IAAAH,uBAAsBhgB,EAAc,oBAEpCogB,EACAC,EACAC,IACE,IAAAN,uBAAsBhgB,EAAc,yBAEtCugB,EACAC,EACAC,IACE,IAAAT,uBAAsBhgB,EAAc,4BAEtC0gB,EACAC,EACAC,IACE,IAAAZ,uBAAsBhgB,EAAc,0BAEjC6gB,EAAYC,EAAgBC,IAAmB,IAAAf,uBACpDhgB,EACA,eAEKghB,EAAiBC,EAAqBC,IAC3C,IAAAlB,uBAAsBhgB,EAAc,oBAC/BmhB,EAAgBC,EAAoBC,IACzC,IAAArB,uBAAsBhgB,EAAc,kBAEtC,OACE,uBAAK2D,UAAW,UAAwB,iBACtC,gBAAC,UAAU,CACTA,UAAW,UAAO,8BAClB8B,cAAewa,EACfva,kBAAmBwa,EACnBpd,SAAUqd,IAEZ,uBAAKxc,UAAW,UAAO,8BAA4B,QACnD,gBAAC,UAAU,CACTA,UAAW,UAAO,8BAClB8B,cAAeoa,EACfna,kBAAmBoa,EACnBhd,SAAUid,IAEZ,uBAAKpc,UAAW,UAAO,8BAA4B,eACnD,gBAAC,UAAU,CACTA,UAAW,UAAO,8BAClB8B,cAAe8a,EACf7a,kBAAmB8a,EACnB1d,SAAU2d,IAEZ,uBAAK9c,UAAW,UAAO,8BAA4B,YACnD,gBAAC,UAAU,CACTA,UAAW,UAAO,8BAClB8B,cAAeub,EACftb,kBAAmBub,EACnBne,SAAUoe,IAEZ,uBAAKvd,UAAW,UAAO,8BAA4B,UACnD,gBAAC,UAAU,CACTA,UAAW,UAAO,8BAClB8B,cAAe2a,EACf1a,kBAAmB2a,EACnBvd,SAAUwd,IAEZ,uBAAK3c,UAAW,UAAO,8BAA4B,SACnD,gBAAC,UAAU,CACTA,UAAW,UAAO,8BAClB8B,cAAeob,EACfnb,kBAAmBob,EACnBhe,SAAUie,IAEZ,uBAAKpd,UAAW,UAAO,8BAA4B,SACnD,gBAAC,UAAU,CACTA,UAAW,UAAO,8BAClB8B,cAAeib,EACfhb,kBAAmBib,EACnB7d,SAAU8d,IAEZ,uBAAKjd,UAAW,UAAO,8BAA4B,UACnD,gBAAC,UAAU,CACTA,UAAW,UAAO,8BAClB8B,cAAe0b,EACfzb,kBAAmB0b,EACnBte,SAAUue,IAEZ,uBAAK1d,UAAW,UAAO,8BAA4B,a,orBCpGzD,oBACA,WACA,WAEA,WAEA,WACA,WAEA,cAEA,cAwCA,UAlCuB,EAAG3D,aAAAA,M,MACxB,MAAM,EAAE6H,IAAM,IAAAC,kBACR8B,GAAW,IAAAC,eAEXqV,GAAa,IAAA9Z,cAAaqI,IAC9B,IAAA0R,6BAA4B1R,EAAO,cAAezN,KAG9CshB,EAAYrf,EAAMG,aACrBmE,IACmB,MAAd2Y,GAGJtV,GAAS,IAAAyV,oBAAmB,cAAerf,EAAc,OAAQuG,MAEnE,CAACvG,IAGH,OAAKkf,EAKH,2BACE,gBAAC,UAAa,CACZvb,UAAW,UAAO,wBAClBgc,YAAa9X,EAAE,oBACf/C,MAAsB,QAAf,EAAAoa,EAAW3Y,YAAI,QAAI,GAC1BxB,SAAUuc,KATP,O,orBCpCX,oBAEA,cACA,WAEA,cAsBA,UAhB+B,EAC7BthB,aAAAA,MAEA,MAAOuhB,EAAcC,EAAkBC,IACrC,IAAAzB,uBAAsBhgB,EAAc,gBAEtC,OACE,gBAAC,UAAU,CACT2D,UAAW,UAA+B,uBAC1C8B,cAAe8b,EACf7b,kBAAmB8b,EACnB1e,SAAU2e,M,2JCtBhB,oBACA,UAAe,W,orBCDf,oBACA,WACA,WACA,WACA,cAEA,WAEA,WAEA,cACA,cACA,cACA,cAEA,WAEA,aACA,cAqEA,UAnE0B,KACxB,MAAM7X,GAAW,IAAAC,gBACX,EAAEhC,IAAM,IAAAC,kBACRsK,GAAkB,IAAAhN,cAAaqI,IACnC,IAAA0E,4BAA2B1E,EAAO,oBAG7BiU,EAAaC,GAAkB1f,EAAMmB,SAAwB,MAE9Dwe,EAAqB3f,EAAMG,aAAY,KAC3Cuf,EAAe,MACd,IACGE,EAAoB5f,EAAMG,aAAY,KAC1Cuf,EAAe,QACd,IACGG,EAAoB7f,EAAMG,aAAY,KAC1Cuf,EAAe,MACI,MAAfD,GAAuBA,EAAYnjB,OAAS,IAC9CqL,GAAS,IAAAjL,oBAAmB,gBAAiB+iB,IAC7C,UAAQjI,KAAK,mBAAmBiI,QAEjC,CAACA,IAEJ,OACE,gCACE,gBAAC,UAAmB,MACpB,gBAAC,UAAI,KACH,gBAAC,UAAI,KACH,0BACGtP,EAAgBlK,KAAKlI,GACpB,sBAAIpB,IAAKoB,GACP,gBAAC,EAAAgE,KAAI,CAACuB,GAAI,mBAAmBvF,KAC1BA,OAKT,gBAAC,UAAM,CAAC4D,QAAQ,UAAUzB,QAASyf,GAChC/Z,EAAE,sBAEL,gBAAC,UAAK,CACJtE,OAAuB,MAAfme,EACRle,eAAgBqe,GAEhB,yBAAIha,EAAE,gCACN,2BACE,gBAAC,UAAO,CACN4W,WAAS,EACT3Z,MAAO4c,EACP5e,SAAWN,GAAMmf,EAAenf,EAAEE,OAAOoC,UAG7C,2BACE,gBAAC,UAAM,CACLnD,SAAyB,MAAf+f,GAAsC,IAAfA,EACjCvf,QAAS2f,GAERja,EAAE,6B,0JC7EnB,oBACA,UAAe,W,orBCDf,oBAEA,WACA,WAEA,WAEA,WAEA,cACA,cACA,cAEA,cACA,cACA,aAEA,cAqCA,UA/ByB,EACvB6W,OACEC,QAAUoD,eAAAA,QAGZ,MAAM,EAAEla,IAAM,IAAAC,kBAMd,OAJqB,IAAA1C,cAAaqI,IAChC,IAAA0R,6BAA4B1R,EAAO,gBAAiBsU,KAQpD,gCACE,gBAAC,UAAmB,MACpB,gBAAC,UAAI,KACH,gBAAC,UAAI,KACH,uBAAKpe,UAAW,UAAO,yBACrB,gBAAC,UAAgB,CAACoe,eAAgBA,IAClC,gBAAC,UAAgB,CAACA,eAAgBA,IAClC,gBAAC,UAAiB,CAACA,eAAgBA,QAXpC,gBAAC,EAAAzc,SAAQ,CAACC,GAAG,Q,orBCnCxB,oBACA,WACA,WAEA,WAEA,WAEA,WACA,cACA,aAEA,cA6CA,UAvC0B,EAAGwc,eAAAA,M,MAC3B,MAAMnY,GAAW,IAAAC,gBACX,IAAQ,IAAA/B,kBAERka,GAAe,IAAA5c,cAAaqI,IAChC,IAAA0R,6BAA4B1R,EAAO,gBAAiBsU,KAGhDE,EAAgBhgB,EAAMG,aACzB6B,IACC2F,GACE,IAAAyV,oBACE,gBACA0C,EACA,cACA9d,MAIN,CAAC8d,IAGH,OAAKC,EAKH,gBAAC,UAAQ,CACPxc,MAAOqC,EAAE,8BACTlE,UAAW,UAAO,uBAElB,gBAAC,UAAW,CACVM,MAA+B,QAAxB,EAAA+d,EAAaE,mBAAW,QAAI,UACnCpf,SAAUmf,KAVP,O,0JCzCX,oBACA,UAAe,W,orBCDf,oBACA,WAEA,WAEA,WAEA,WAKA,WAEA,cAiDA,UA3CyB,EAAGF,eAAAA,M,MAC1B,MAAMnY,GAAW,IAAAC,eAEXmY,GAAe,IAAA5c,cAAaqI,IAChC,IAAA0R,6BAA4B1R,EAAO,gBAAiBsU,KAGhDI,GAAa,IAAA/c,cAAaqI,IAC9B,IAAA2U,iCACE3U,EACA,gBACAsU,EACA,UAGEM,EAAgBpgB,EAAMG,aAC1B,CAAC4V,EAAmBsK,KAClB1Y,GACE,IAAA2Y,wBACE,gBACAR,EACA,OACA,GAAGA,WAAuB,IAAA5b,SAAQmc,KAClCtK,MAIN,CAAC+J,IAGH,OAAKC,EAKH,gBAAC,UAAU,CACTvc,cAAe0c,EACfzc,kBAAoC,QAAjB,EAAAsc,EAAazb,YAAI,QAAI,KACxCzD,SAAUuf,IAPL,O,orBCnDX,oBACA,WACA,WAEA,WAEA,WAEA,WAEA,cAoCA,UA9ByB,EAAGN,eAAAA,M,MAC1B,MAAMnY,GAAW,IAAAC,gBACX,IAAQ,IAAA/B,kBAERka,GAAe,IAAA5c,cAAaqI,IAChC,IAAA0R,6BAA4B1R,EAAO,gBAAiBsU,KAGhDT,EAAYrf,EAAMG,aACrBmE,IACCqD,GACE,IAAAyV,oBAAmB,gBAAiB0C,EAAgB,OAAQxb,MAGhE,CAACwb,IAGH,OAAKC,EAKH,gBAAC,UAAa,CACZld,MAAyB,QAAlB,EAAAkd,MAAAA,OAAY,EAAZA,EAAczb,YAAI,QAAI,GAC7BoZ,YAAa9X,EAAE,sBACf9C,SAAUuc,IAPL,O,2JClCX,oBACA,UAAe,W,gFCDf,mBAAwBjjB,GACtB,MAAMmkB,EAAMnkB,EAAKokB,YAAY,KAC7B,OAAgB,IAATD,GAAcA,EAAM,GAAKnkB,EAAKE,OAAS,GAAKF,EAAKqkB,UAAUF,EAAM,K,2JCA1E,iBAEA,cAGMG,GAAmB,EAFzB,SAEyBC,qBAAoB,WAE7C,mBACEnV,EAAkB,EAAAoV,gBAClBtpB,GAEA,OAAOopB,EAAiBlV,EAAOlU,K,wICXpB,EAAAupB,cAAgB,GAChB,EAAAC,cAAgB,GAE7B,2BACEC,EACAC,GAGA,OADAA,EAAQC,OAASF,EACVC,GAGT,0BAA+BA,G,MAC7B,OAAsB,QAAd,EAAAA,EAAQC,cAAM,QAAI,GAAK,I,yMCbjC,oBAIA,WAIA,6BACKC,GAOH,MAAQ,GAAoBC,UAAUD,IAGxC,+BAAoCA,GAElC,MAAME,GAAgB,aAAOF,GAAW9oB,GAAkBA,EAAE6oB,QAAU,IAEtE,MAAO,CAACzV,EAAkB,EAAAoV,gBAAiBtpB,IAClC8pB,EAAc5K,QACnB,CAAChL,EAAOwV,IAAYA,EAAQxV,EAAOlU,IACnCkU,K,orBC3BN,oBAEA,WAEA,WACA,WAEA,cAEA,cAEA,cACA,cAcA,UAZuB,IACrB,gBAAC,UAAY,KACX,gBAAC,UAAa,KACZ,gBAAC,EAAA6V,OAAM,CAAC/I,QAAS,WACf,gBAAC,EAAAgJ,YAAW,CAACC,QAAS,EAAAC,cACpB,gBAAC,UAAM,W,orBCnBjB,oBAEA,WAEA,cACA,cACA,cACA,cACA,cACA,cACA,aA+BA,UA7ByB,IACvB,gBAAC,EAAAC,OAAM,KACL,gBAAC,EAAAC,MAAK,CAACtlB,KAAK,IAAIulB,OAAK,EAACvZ,UAAW,YAEjC,gBAAC,EAAAsZ,MAAK,CAACtlB,KAAK,eAAeulB,OAAK,EAACvZ,UAAW,YAE5C,gBAAC,EAAAsZ,MAAK,CAACtlB,KAAK,gBAAgBulB,OAAK,EAACvZ,UAAW,YAC7C,gBAAC,EAAAsZ,MAAK,CACJtlB,KAAK,8BACLulB,OAAK,EACLvZ,UAAW,YAEb,gBAAC,EAAAsZ,MAAK,CACJtlB,KAAK,yCACLulB,OAAK,EACLvZ,UAAW,YAGb,gBAAC,EAAAsZ,MAAK,CAACtlB,KAAK,kBAAkBulB,OAAK,EAACvZ,UAAW,YAC/C,gBAAC,EAAAsZ,MAAK,CACJtlB,KAAK,kCACLulB,OAAK,EACLvZ,UAAW,YAGb,gBAAC,EAAA/E,SAAQ,CAACC,GAAG,Q,6MCrCjB,oBAQMse,EAAc,UAASC,IAAM,UAASA,GAAGC,QAAW,UAC7C,EAAAC,OAPM,WAOsBC,KAAKJ,GAC1C,UAPW,kBAQJI,KAAKJ,GACZ,MARa,SASJI,KAAKJ,GACd,QACA,UAES,EAAAK,QAAkB,EAElB,EAAA5G,wBAAyC,QAAfuG,G,kOCnBvC,oBACA,cAWA,yBACEroB,EACA2oB,EAA6B,OAE7B,OAAI3oB,EAAU+U,UAAY/U,EAAU2U,YAC3B,SAEL3U,EAAU+U,SACL,SAEL/U,EAAU2U,YACL,SAEFgU,GAGT,4BACEC,EACAC,EACAvnB,GAEA,OAAQA,GACN,IAAK,MACH,OAAOunB,EACT,IAAK,oBACH,OAAIA,EAAU/H,OAAOgI,IAA4C,IAAjCF,EAAYzO,QAAQ2O,KAE3CF,EAIFC,EAET,IAAK,SACH,OAAO,aAAMD,EAAaC,GAC5B,IAAK,SACH,OAAO,aAAWD,EAAaC,GACjC,IAAK,SACH,OAAO,aAAWD,EAAaC,GAAWjB,QACxC,aAAWiB,EAAWD,IAK5B,OAAOC,GAGT,sCACED,EACAtnB,GAEA,OAAQA,GACN,IAAK,SACL,IAAK,SACH,OAAOsnB,EAGX,MAAO,K,iECrET,iBAEA,WACA,WAMA,SAAUG,UACF,IAAAC,MAAI,IAAA/qB,iBALZ,4BACQ,IAAAgrB,UAAS,IAAM,EAAArrB,2BAA4BmrB,K,2JCNnD,oBAEA,UAAe,W,orBCFf,oBAEA,WAEA,cAKA,UAH+B,EAAGxiB,SAAAA,KAChC,gBAAC,EAAA2iB,gBAAe,CAACC,KAAM,WAAO5iB,I,2JCPhC,oBACA,WAEA,UAEA,UAAK6iB,IAAI,EAAAC,kBAAkBC,KAAK,CAC9BC,YAAa,KAEbC,GAAI,CAAC,SAAU,eACfC,UAAW,SAEXzlB,UAAW,CACT0lB,GAAI,CACFC,OAAQ,EAAQ,OAChBC,YAAa,EAAQ,SAIzBC,OAAQ,EAAAnB,OAERoB,cAAe,CACbC,aAAa,GAGfC,MAAO,CACLC,MAAM,KAIV,UAAe,W,6LC7Bf,iBAGA,cACA,WAEa,EAAAC,cAAe,IAAAC,0BAAyB,CACnDxlB,SAAU,EAAAylB,0BAKZ,qBACEnY,EACAoY,GAIA,OAFA,UAAKC,eAAeD,EAAU1lB,UAEvB,OAAP,wBACKsN,GACAoY,K,2JCpBP,oBAEA,UAAe,W,2JCAf,iBAEA,WACA,WAEA,cAEA,WAAe,IAAAE,oBAAkB,SAC/BtY,EAAmB,EAAAuY,iBACnBzsB,GAEA,GAAIA,EAAOD,OAAS,EAAA2G,oBAClB,OAAOwN,EAGT,MAAMwY,EAAQ1sB,EAA6BQ,QAK3C,OAFA,UAAK+rB,eAAeG,GAEb,OAAP,wBACKxY,GAAK,CACRtN,SAAU8lB,Q,kGCvBd,iBAEa,EAAAL,yBAA0B,IAAAM,qBACpCzY,GAAqBA,EAAMtN,Y,iHCJ9B,iBAKa,EAAA4lB,mBAAoB,IAAAI,6BAA4B,QAChD,EAAAD,oBAAqB,IAAAE,8BAA6B,S,yFCFlD,EAAAJ,iBAAwC,CACnD7lB,SAAU,MAEZI,OAAOC,OAAO,EAAAwlB,mB,iECPd,iBACA,WAEA,WAAe,IAAAK,4BAA0B,CAAC5Y,EAAOlU,KAC1C,IAAA+sB,2BAA0B/sB,GAIxB,OAAP,wBACKkU,GAAK,CACR8Y,gBAAiB,OALV9Y,K,gECLX,iBACA,WACA,WACA,WAEA,WAAe,IAAA4Y,4BAA0B,CAAC5Y,EAAOlU,EAAQitB,KAEpD,IAAAC,sBAAqBltB,KACrB,IAAAmtB,uBAAsBntB,KACtB,IAAAotB,iCAAgCptB,GAK5B,OAAP,wBACKkU,GAAK,CACR8Y,gBAAiB,CACf1Y,GAAI,CACFxT,EAAGusB,OAAOC,kBACVtqB,EAAGqqB,OAAOC,mBAEZ9Y,GAAI,CACF1T,EAAGusB,OAAOE,kBACVvqB,EAAGqqB,OAAOE,sBAZPrZ,K,iECXX,iBACA,WACA,WACA,UAEA,WAEA,WAAe,IAAAsZ,iBACb,EAAAjE,cACA,IAAAuD,4BAA0B,CAAC5Y,EAAOlU,EAAQitB,KACxC,KAAK,IAAAQ,+BAA8BztB,GACjC,OAAOkU,EAGT,MAAM,WAAE3T,GAAeP,EAAOQ,QAExB4T,EAAa7T,EAAW2e,QAAO,CAAC9K,EAAY7S,KAChD,MAAMX,GAAS,IAAA8sB,uBAAsBT,EAAU1rB,GAC/C,OAAkB,MAAd6S,EACK,CACLE,GAAI,CAAExT,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,GAC7BwR,GAAI,CAAE1T,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,KAG1B,IAAA2qB,gBAAevZ,EAAYxT,KACjCsT,EAAM8Y,iBAET,OAAO,OAAP,wBACK9Y,GAAK,CACR8Y,gBAAiB5Y,S,2JC7BvB,oBAEA,WACA,WAEA,WAEA,WAAe,IAAA0Y,4BAA0B,CAAC5Y,EAAOlU,KAC/C,KAAK,IAAA4tB,+BAA8B5tB,GACjC,OAAOkU,EAGT,MAAM,SAAErT,GAAab,EAAOQ,QAEtB4T,GAAa,aAAOvT,GAAUqe,QAAO,CAAC9K,EAAYxT,IACpC,MAAdwT,EACK,CACLE,GAAI,CAAExT,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,GAC7BwR,GAAI,CAAE1T,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,KAG1B,IAAA2qB,gBAAevZ,EAAYxT,IACjCsT,EAAM8Y,iBAET,OAAO,OAAP,wBACK9Y,GAAK,CACR8Y,gBAAiB5Y,Q,iEC1BrB,iBAEA,WAEA,WAEA,UAEA,WAEA,WAAe,IAAAoZ,iBACb,EAAAjE,cACA,IAAAuD,4BAA0B,CAAC5Y,EAAOlU,EAAQitB,KACxC,KAAK,IAAAY,+BAA8B7tB,GACjC,OAAOkU,EAGT,MAAM,WAAE3T,EAAU,QAAEU,EAAO,QAAEC,GAAYlB,EAAOQ,QAE1C4T,EAAa7T,EAAW2e,QAAO,CAAC9K,EAAY7S,KAChD,MAAMX,GAAS,IAAA8sB,uBAAsBT,EAAU1rB,GAU/C,OARE6S,EADgB,MAAdA,EACW,CACXE,GAAI,CAAExT,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,GAC7BwR,GAAI,CAAE1T,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,KAGlB,IAAA2qB,gBAAevZ,EAAYxT,IAGnC,IAAA+sB,gBAAevZ,EAAY,CAChCtT,EAAGF,EAAOE,EAAIG,EACd+B,EAAGpC,EAAOoC,EAAI9B,MAEfgT,EAAM8Y,iBAET,OAAO,OAAP,wBACK9Y,GAAK,CACR8Y,gBAAiB5Y,S,iECtCvB,gBACA,WAEA,WAEA,WAAe,IAAA0Y,4BAA0B,CAAC5Y,EAAOlU,EAAQitB,KACvD,KAAK,IAAAa,6CAA4C9tB,GAC/C,OAAOkU,EAGT,MAAM,SAAE5S,GAAatB,EAAOQ,QAE5B,OAAO,OAAP,wBACK0T,GAAK,CACR8Y,gBAAiB9Y,EAAM8Y,iBACnB,IAAAW,gBAAezZ,EAAM8Y,gBAAiB1rB,GACtC,CAAEgT,GAAIhT,EAAUkT,GAAIlT,S,2JChB5B,iBAEA,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,cAEA,WAAe,IAAAysB,gBACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,iECzBF,iBAEA,WAEA,WAAe,IAAAjB,4BAA0B,CAAC5Y,EAAOlU,KAC1C,IAAAguB,2BAA0BhuB,GAIxB,OAAP,wBACKkU,GAAK,CACR8Y,gBAAiB,CACf1Y,GAAI,CACFxT,EAAGusB,OAAOC,kBACVtqB,EAAGqqB,OAAOC,mBAEZ9Y,GAAI,CACF1T,EAAGusB,OAAOE,kBACVvqB,EAAGqqB,OAAOE,sBAZPrZ,K,iECNX,iBAEA,WAEA,WAAe,IAAA4Y,4BAA0B,CAAC5Y,EAAOlU,KAC1C,IAAAiuB,oCAAmCjuB,GAIjC,OAAP,wBACKkU,GAAK,CACR8Y,gBAAiB,CACf1Y,GAAI,CACFxT,EAAGusB,OAAOC,kBACVtqB,EAAGqqB,OAAOC,mBAEZ9Y,GAAI,CACF1T,EAAGusB,OAAOE,kBACVvqB,EAAGqqB,OAAOE,sBAZPrZ,K,gECNX,gBACA,WAEA,WAAe,IAAA4Y,4BAA0B,CAAC5Y,EAAOlU,EAAQitB,KAClD,IAAAiB,6BAA4BluB,GAI1B,OAAP,wBACKkU,GAAK,CACR8Y,gBAAiB,CACf1Y,GAAI,CACFxT,EAAGusB,OAAOC,kBACVtqB,EAAGqqB,OAAOC,mBAEZ9Y,GAAI,CACF1T,EAAGusB,OAAOE,kBACVvqB,EAAGqqB,OAAOE,sBAZPrZ,K,gECLX,iBAEA,WAEA,WAEA,WACA,UAEA,WAEA,WAAe,IAAAsZ,iBACb,EAAAjE,cACA,IAAAuD,4BAA0B,CAAC5Y,EAAOlU,EAAQitB,KACxC,KAAK,IAAAkB,8BAA6BnuB,GAChC,OAAOkU,EAGT,MAEME,GAFqB,IAAAlD,4BAA2B+b,GAEhB/N,QAAO,CAAC9K,EAAY7S,KACxD,MAAMX,GAAS,IAAA8sB,uBAAsBT,EAAU1rB,GAC/C,OAAKX,EAIa,MAAdwT,EACK,CACLE,GAAI,CAAExT,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,GAC7BwR,GAAI,CAAE1T,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,KAGxB,IAAA2qB,gBAAevZ,EAAYxT,GAT3BwT,IAWRF,EAAM8Y,iBAET,OAAO,OAAP,wBACK9Y,GAAK,CACR8Y,gBAAiB5Y,S,iECtCvB,iBAEA,WAEA,WACA,UACA,WAEA,WAEA,WAAe,IAAAoZ,iBACb,EAAAjE,cACA,IAAAuD,4BAA0B,CAAC5Y,EAAOlU,EAAQitB,KACxC,KAAK,IAAAmB,+BAA8BpuB,GACjC,OAAOkU,EAGT,MAAM,WAAE3T,GAAeP,EAAOQ,QAK9B,IAAI4T,GAFuB,IAAAlD,4BAA2B+b,GAElB/N,QAAO,CAAC9K,EAAY7S,KACtD,MAAMX,GAAS,IAAA8sB,uBAAsBT,EAAU1rB,GAC/C,OAAKX,EAIa,MAAdwT,EACK,CACLE,GAAI,CAAExT,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,GAC7BwR,GAAI,CAAE1T,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,KAGxB,IAAA2qB,gBAAevZ,EAAYxT,GAT3BwT,IAWRF,EAAM8Y,iBAkBT,OAhBA5Y,EAAa7T,EAAW2e,QAAO,CAAC9K,EAAY7S,KAC1C,MAAMX,GAAS,IAAA8sB,uBAAsBT,EAAU1rB,GAC/C,OAAKX,EAIa,MAAdwT,EACK,CACLE,GAAI,CAAExT,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,GAC7BwR,GAAI,CAAE1T,EAAGF,EAAOE,EAAGkC,EAAGpC,EAAOoC,KAGxB,IAAA2qB,gBAAevZ,EAAYxT,GAT3BwT,IAWRA,GAEI,OAAP,wBACKF,GAAK,CACR8Y,gBAAiB5Y,S,mGCxDvB,iBAEa,EAAAC,0BAA2B,IAAAga,6BACrCna,GAAUA,EAAM8Y,mB,iICHnB,iBAKa,EAAAF,2BAA4B,IAAAF,6BACvC,YACA,UAEW,EAAAyB,4BAA6B,IAAAxB,8BACxC,YACA,W,iGCDW,EAAAyB,yBAA2BtnB,OAAOC,OAJN,CACvC+lB,gBAAiB,Q,2JCPnB,oBAEA,WAEA,WACA,WAEA,WAAe,IAAAuB,2BAAyB,CAACra,EAAOlU,KAC9C,KAAK,IAAAytB,+BAA8BztB,GACjC,OAAOkU,EAGT,MAAM,WAAE3T,GAAeP,EAAOQ,QAE9B,IAAK,MAAMe,KAAahB,EAAY,CAClC,MAAMK,EAASsT,EAAMnD,cAAcxP,GAC9BX,IAGLsT,GAAQ,IAAAsa,2BAA0Bta,EAAOtT,EAAQW,IAGnD,OAAO,OAAP,wBACK2S,GAAK,CACRnD,eAAe,aAAKmD,EAAMnD,cAAexQ,S,iECxB7C,iBAEA,WAEA,WAEA,WAAe,IAAAguB,2BAAyB,CAACra,EAAOlU,KAC9C,KAAK,IAAA4tB,+BAA8B5tB,GACjC,OAAOkU,EAGT,MAAM,SAAErT,GAAab,EAAOQ,QAE5B,IAAK,MAAMe,KAAayF,OAAOsO,KAAKzU,GAAW,CAC7C,MAAMD,EAASC,EAASU,GACxB2S,GAAQ,IAAAua,sBAAqBva,EAAOtT,EAAQW,GAG9C,OAAO,OAAP,wBACK2S,GAAK,CACRnD,cAAe,OAAF,wBACRmD,EAAMnD,eACNlQ,S,2JCtBT,oBAEA,WAEA,WAEA,WACA,WAEA,WAAe,IAAA0tB,2BAAyB,CAACra,EAAOlU,KAC9C,KAAK,IAAA6tB,+BAA8B7tB,GACjC,OAAOkU,EAGT,MAAM,WAAE3T,EAAU,QAAEU,EAAO,QAAEC,GAAYlB,EAAOQ,QAC1CkuB,EAAU,CAAE5tB,EAAGG,EAAS+B,EAAG9B,GAEjC,IAAK,MAAMK,KAAahB,EAAY,CAClC,MAAMK,EAASsT,EAAMnD,cAAcxP,GAC9BX,IAGLsT,GAAQ,IAAAsa,2BAA0Bta,EAAOtT,EAAQW,GACjD2S,GAAQ,IAAAua,sBAAqBva,GAAO,IAAAya,UAAS/tB,EAAQ8tB,GAAUntB,IAGjE,OAAO,OAAP,wBACK2S,GAAK,CACRnD,eAAe,aAAUmD,EAAMnD,eAAe,CAACnQ,EAAQyE,IAChD9E,EAAWiV,SAASnQ,GAGlB,OAAP,wBACKzE,IACA,IAAA+tB,UAAS/tB,EAAQ8tB,IAJb9tB,U,2JC9Bf,iBAEA,cACA,cACA,cACA,cACA,cACA,cACA,cAEA,WAAe,IAAAmtB,gBACb,UACA,UACA,UACA,UACA,UACA,UACA,Y,iECjBF,iBAEA,WACA,WAEA,WAAe,IAAAQ,2BAAyB,CAACra,EAAOlU,KACzC,IAAAguB,2BAA0BhuB,GAIxB,EAAA4uB,wBAHE1a,K,iECPX,iBAEA,WAGA,WAEA,WACA,WACA,WAEA,WAAe,IAAAqa,2BAAyB,CAACra,EAAOlU,KAC9C,KAAK,IAAAiuB,oCAAmCjuB,GACtC,OAAOkU,EAGT,MAAM,WAAEtS,GAAe5B,EAAOQ,QAExBK,EAAW,EAAA6iB,gBAAgB9hB,GACjC,IAAKf,EACH,OAAOqT,EAGT,MAAMnD,EAA2C,GACjD,IAAK,IAAInQ,KAAUC,EACjBkQ,GAAc,WAAYnQ,EAG5BsT,EAAQ,OAAH,wBACA,EAAA0a,yBAAuB,CAC1B7d,cAAAA,IAGF,IAAK,MAAMxP,KAAayF,OAAOsO,KAAKvE,GAAgB,CAClD,MAAMnQ,EAASmQ,EAAcxP,GAC7B2S,GAAQ,IAAAua,sBAAqBva,EAAOtT,EAAQW,GAG9C,OAAO2S,M,iECtCT,iBAIA,UAEA,WACA,WACA,WAEA,WAAe,IAAAqa,2BAAyB,CAACra,EAAOlU,KAC9C,KAAK,IAAAkuB,6BAA4BluB,GAC/B,OAAOkU,EAGTA,EAAQ,EAAA0a,wBAER,MAAM,SAAE/tB,GAAab,EAAOQ,QAEtBuQ,EAA2C,GACjD,IAAK,IAAInQ,KAAUC,EACjBkQ,GAAc,WAAYnQ,EAG5B,IAAK,MAAMW,KAAayF,OAAOsO,KAAKvE,GAAgB,CAClD,MAAMnQ,EAASmQ,EAAcxP,GAC7B2S,GAAQ,IAAAua,sBAAqBva,EAAOtT,EAAQW,GAG9C,OAAO,OAAP,wBACK2S,GAAK,CACRnD,cAAAA,Q,iEC/BJ,gBAEA,WAEA,WAEA,WAAe,IAAAwd,2BAAyB,CAACra,EAAOlU,KAC9C,KAAK,IAAA8tB,6CAA4C9tB,GAC/C,OAAOkU,EAGT,MAAM,UAAE7S,EAAS,SAAEC,EAAUC,UAAW8D,GAAQrF,EAAOQ,QAEjDI,EAAS,+BACVS,GAAS,CACZP,EAAGQ,EAASR,EACZkC,EAAG1B,EAAS0B,IAKd,OAFAkR,GAAQ,IAAAua,sBAAqBva,EAAOtT,EAAQyE,GAErC,OAAP,wBACK6O,GAAK,CACRnD,cAAe,OAAF,wBACRmD,EAAMnD,eAAa,CACtB,CAAC1L,GAAMzE,U,iPCzBb,iBACA,WACA,WAgBMiuB,EAAuB,CAAE/tB,EAAG,GAAIkC,EAAG,IAMzC,SAAgB8rB,EAAyB3b,GAYvC,OAAO4b,EAXG,CACRza,GAAI,CACFxT,EAAGqS,EAAErS,EAAI,EAAAyT,oBACTvR,EAAGmQ,EAAEnQ,EAAI,EAAAuR,qBAEXC,GAAI,CACF1T,EAAGqS,EAAErS,EAAI,EAAAyT,oBACTvR,EAAGmQ,EAAEnQ,EAAI,EAAAuR,uBAwBf,SAAgBwa,EAAyB3jB,GACvC,IAAI,GAAEkJ,EAAE,GAAEE,GAAOpJ,EACjBkJ,GAAK,IAAAqa,UAASra,EAAIua,GAClBra,GAAK,IAAAma,UAASna,EAAIqa,GAElB,IAAIG,EAAKpnB,KAAKkY,OAAOxL,EAAGxT,EAAI,EAAAyT,qBA9CT,IA+Cf0a,EAAKrnB,KAAKkY,OAAOxL,EAAGtR,EAAI,EAAAuR,qBA9CR,IA+ChB2a,EAAKtnB,KAAKkY,OAAOtL,EAAG1T,EAAI,EAAAyT,qBAhDT,IAiDf4a,EAAKvnB,KAAKkY,OAAOtL,EAAGxR,EAAI,EAAAuR,qBAhDR,IAkDpB,MAAM6a,EAAU,GAEhB,IAAIC,GAAW,EACf,MAAMC,EAAS,KACTD,IAGJD,EAAQlP,MAAM,GACdmP,GAAW,IAGTL,EAAK,IACPA,EAAK,EACLM,KAGEJ,EAAK,IACPA,EAAK,EACLI,KAGEN,GAAMO,KACRP,EAAKO,GACLD,KAGEJ,GAAMK,KACRL,EAAKK,GACLD,KAGEL,EAAK,IACPA,EAAK,EACLK,KAGEH,EAAK,IACPA,EAAK,EACLG,KAGEL,GAAMO,KACRP,EAAKO,GACLF,KAGEH,GAAMK,KACRL,EAAKK,GACLF,KAGF,IAAK,IAAIxuB,EAAIkuB,EAAIluB,GAAKouB,EAAIpuB,IACxB,IAAK,IAAIkC,EAAIisB,EAAIjsB,GAAKmsB,EAAInsB,IACxBosB,EAAQlP,KAAKpf,EAAQ,GAAJkC,GAIrB,OAAOosB,EA0DT,SAASK,EAAYC,EAAmBnuB,GACtC,OAAO,OAAP,wBACKmuB,GAAM,CACTnvB,WAAY,IAAImvB,EAAOnvB,WAAYgB,KAIvC,SAASouB,EAAiBD,EAAmBnuB,GAC3C,OAAO,OAAP,wBACKmuB,GAAM,CACTnvB,WAAYmvB,EAAOnvB,WAAW+b,QAAQxb,GAAMA,IAAMS,MA3KzC,EAAAquB,aACX,IAGF,6BAeA,kCACEC,EACA1c,GAEA,MAAM2c,EAAgBhB,EAAyB3b,GACzC4c,EAAuB,GAS7B,OARAD,EAAcE,SAASC,KACA,IAAjBA,EACFF,EAAW7P,QAAQ2P,EAAUK,kBAAkB3vB,YAE/CwvB,EAAW7P,QAAQ2P,EAAUM,cAAcF,GAAa1vB,eAIrDwvB,GAGT,6BAsEA,iCACEF,EACAzkB,GAEA,MAAM0kB,EAAgBf,EAAyB3jB,GACzC2kB,EAAuB,GAS7B,OARAD,EAAcE,SAASC,KACA,IAAjBA,EACFF,EAAW7P,QAAQ2P,EAAUK,kBAAkB3vB,YAE/CwvB,EAAW7P,QAAQ2P,EAAUM,cAAcF,GAAa1vB,eAIrDwvB,GAGT,gCACEF,EACA1c,EACA5R,GAGA,OADsButB,EAAyB3b,GAC1B+L,QAAO,CAAC2Q,EAAWI,KACjB,IAAjBA,GACK,IAAAG,OAAMP,EAAW,qBAAsBH,GAC5CD,EAAYC,EAAQnuB,MAGf,IAAA6uB,OAAMP,EAAW,gBAAiBI,GAAcP,GACrDD,EAAYC,EAAQnuB,MAGvBsuB,IAGL,qCACEA,EACA1c,EACA5R,GAGA,OADsButB,EAAyB3b,GAC1B+L,QAAO,CAAC2Q,EAAWI,KACjB,IAAjBA,GACK,IAAAG,OAAMP,EAAW,qBAAsBH,GAC5CC,EAAiBD,EAAQnuB,MAGpB,IAAA6uB,OAAMP,EAAW,gBAAiBI,GAAcP,GACrDC,EAAiBD,EAAQnuB,MAG5BsuB,K,gOClLL,iBAEA,WAOA,WAEA,WAEA,WAEa,EAAA7e,uBAAwB,IAAAqf,4BAClCnc,GAAUA,EAAMnD,gBAGN,EAAAuf,sBAAuB,IAAAC,gBAClC,EAAAvf,uBACCD,GAAkB/J,OAAOsO,KAAKvE,KAGpB,EAAA2c,sBAAwB,CAACxZ,EAAiB3S,KACrD,IAAAyP,uBAAsBkD,GAAO3S,GAElB,EAAAivB,0BAA2B,IAAAH,4BACtC,CAACnc,EAAyBuc,KACxB,MAAMV,GAAa,IAAAW,wBAAuBxc,EAAOuc,GAE3C1f,EAAgBmD,EAAMnD,cAC5B,IAAK,MAAM1L,KAAO0qB,EAAY,CAC5B,MAAMnvB,EAASmQ,EAAc1L,GACvBtF,EAAO,EAAAkI,iBAAiBrH,EAAOsH,YACrC,IAAKnI,EACH,SAGF,MAAM4wB,GAAM,IAAAC,eAAcH,EAAY7vB,GACtC,IAAI,IAAAiwB,WAAUF,IAAQ5wB,EAAK6d,UACzB,OAAOvY,EAIX,OAAO,QAIE,EAAAyrB,0BAA4B,CACvC5c,EACAuc,EACA7sB,EAAiB,EACjBmtB,GAAkB,KAElB,MAAMC,EAAmB9c,EAAM+c,SAASC,UAAUrwB,SAC5CuK,EAAe,CACnBkJ,GAAI,CACFxT,EAAG2vB,EAAW3vB,EAAI8C,EAClBZ,EAAGytB,EAAWztB,EAAIY,GAEpB4Q,GAAI,CACF1T,EAAG2vB,EAAW3vB,EAAI8C,EAClBZ,EAAGytB,EAAWztB,EAAIY,IAGhBmsB,GAAa,IAAAoB,uBAAsBH,EAAkB5lB,GACrDgmB,EAAS,GACf,IAAK,MAAM7vB,KAAawuB,EAAY,CAClC,MAAMnvB,EAASowB,EAAiBjgB,cAAcxP,GACxCxB,EAAO,EAAAkI,iBAAiBrH,EAAOsH,YACrC,IAAKnI,EACH,SAGF,MAAM4wB,GAAM,IAAAC,eAAcH,EAAY7vB,IAClC,IAAAiwB,WAAUF,KAASI,EAAkB,EAAIhxB,EAAK6d,WAAaha,GAC7DwtB,EAAOlR,KAAK3e,GAIhB,OAAO6vB,GAGI,EAAAC,yBAA2B,CAACnd,EAAiBoK,KACxD,MAAM0S,EAAmB9c,EAAM+c,SAASC,UAAUrwB,SAGlD,OAFmB,IAAAswB,uBAAsBH,EAAkB1S,GAEzChC,QAAQ/a,IACxB,IAAAgU,qBAAoByb,EAAiBjgB,cAAcxP,GAAY+c,O,+GCzFnE,iBAKA,WAIA,SAASgT,EACP1S,GAEA,MAAO,CACL1Q,QAAS,uBAAuB0Q,IAChC1W,WAAY,eACZ0W,OAAAA,EACAxQ,MAAO,GAIX,MAAMmjB,EAAuB,CAC3BD,EAAsB,QACtBA,EAAsB,gBACtBA,EAAsB,aACtBA,EAAsB,UACtBA,EAAsB,YACtBA,EAAsB,SACtBA,EAAsB,eACtBA,EAAsB,QACtBA,EAAsB,aACtBA,EAAsB,kBACtBA,EAAsB,OACtBA,EAAsB,aACtBA,EAAsB,SACtBA,EAAsB,aACtBA,EAAsB,SACtBA,EAAsB,UACtBA,EAAsB,UACtBA,EAAsB,QACtBA,EAAsB,QACtBA,EAAsB,cACtBA,EAAsB,SACtBA,EAAsB,UACtBA,EAAsB,YAGX,EAAArhB,sCAAuC,IAAAsgB,iBACjDrc,IAAoB,IAAAsd,0BAAyBtd,EAAO,mBACpDud,GACQ,IACFF,KACAE,EAAc9iB,KAAK8Z,IAAiB,CACrCxZ,YAAa,GAAGwZ,EAAazb,SAASyb,EAAa7jB,MACnDsD,WAAY,eACZ0W,OAAQ6J,EAAa7jB,GACrBwJ,MAAO,U,kGCvDf,iBACA,WAIA,WACA,WAIMsjB,EAA6C,CACjD,qBAAsB,EAAQ,OAC9B,0BAA2B,EAAQ,OACnC,uBAAwB,EAAQ,OAChC,sBAAuB,EAAQ,OAC/B,qBAAsB,EAAQ,OAC9B,0BAA2B,EAAQ,OACnC,qBAAsB,EAAQ,OAC9B,oBAAqB,EAAQ,OAC7B,sBAAuB,EAAQ,OAC/B,uBAAwB,EAAQ,OAChC,+BAAgC,EAAQ,OACxC,wBAAyB,EAAQ,OACjC,6BAA8B,EAAQ,MACtC,uBAAwB,EAAQ,OAChC,sBAAuB,EAAQ,KAC/B,0BAA2B,EAAQ,MACnC,qBAAsB,EAAQ,OAC9B,2BAA4B,EAAQ,OACpC,uBAAwB,EAAQ,OAChC,4BAA6B,EAAQ,OACrC,sBAAuB,EAAQ,OAC/B,yBAA0B,EAAQ,OAClC,0BAA2B,EAAQ,QAGxB,EAAA/hB,yBAA0B,IAAA4gB,iBACpCrc,IAAoB,IAAAsd,0BAAyBtd,EAAO,mBACpDA,IAAoB,IAAAyd,0BAAyBzd,KAC9C,CAACud,EAAexrB,KACd,MAAM+B,EAAe,iBAChB0pB,GAGL,IAAK,MAAM9S,KAAU6S,EAAe,CAClC,IAAK7S,EAAOzR,OAASlH,EAAU2Y,EAAOzR,MACpC,SAGF,MAAMyb,EAAa3iB,EAAU2Y,EAAOzR,MAC9BykB,EAAU,yBAAyB,EAAAC,OAAOC,KAAKlJ,GAAYmJ,SAC/D,YAEF/pB,EAAgB,iBAAiB4W,EAAOha,MAAQgtB,EAGlD,OAAO5pB,M,+HCxDX,iBAKa,EAAAumB,0BAA2B,IAAA3B,6BACtC,YACA,YAEW,EAAAyD,2BAA4B,IAAAxD,8BACvC,YACA,a,kGCTF,iBAMMmF,EAAgBhrB,OAAOC,OAAO,CAClC1G,WAAY,KAGR0xB,EAAkC,CACtClhB,cAAe,GACfof,cAAe,IAAItpB,MAAM,EAAA+oB,cAAc9nB,KAAKkqB,GAC5C9B,kBAAmB8B,GAGR,EAAApD,wBAA0B5nB,OAAOC,OAAOgrB,I,2JClBrD,iBAEA,cACA,cACA,cACA,cACA,aACA,cACA,cAEA,WAAe,IAAAlE,gBACb,UACA,UACA,UACA,UACA,UACA,UACA,Y,iECjBF,iBACA,WAEA,WAAe,IAAAmE,2BAAyB,CAAChe,EAAOlU,KAC9C,KAAK,IAAAmyB,sCAAqCnyB,GACxC,OAAOkU,EAGT,MAAM,UAAEjS,GAAcjC,EAAOQ,QAE7B,OAAO,OAAP,wBACK0T,GAAK,CACR7R,aAAcJ,Q,iECZlB,iBAEA,WAEA,WAAe,IAAAiwB,2BAAyB,CAAChe,EAAOlU,KAC9C,KAAK,IAAAoyB,4BAA2BpyB,GAC9B,OAAOkU,EAGT,MAAM,YAAE9R,EAAW,aAAEC,GAAiBrC,EAAOQ,QAE7C,OAAO,OAAP,wBACK0T,GAAK,CACRme,sBAAuBhwB,EAAawhB,OAAS,MAAQ,KACrDyO,qBAAsBlwB,EACtBmwB,iBAAkBnwB,EAClBC,aAAAA,Q,2JCdJ,iBACA,WACA,WAEA,WAEA,cAEA,WAEA,WAIA,WACA,WACA,WACA,WAEA,WACA,UASA,mBACE6R,EAAkB,EAAAoV,gBAClBtpB,GAEA,KAAK,IAAAwyB,4BAA2BxyB,GAC9B,OAAOkU,EAGT,MAAM,YAAE9R,EAAW,aAAEC,GAAiBrC,EAAOQ,QAE7C0T,EAoBF,SACEA,EACAlU,GAEA,MAAM,YAAEoC,EAAW,aAAEC,GAAiBrC,EAAOQ,SAEvC,qBAAE8xB,EAAoB,YAAE9kB,GAAgB0G,EAAM+c,SAASC,UAAUuB,MACvE,IAAI,sBAAEJ,GAA0Bne,EAAM+c,SAASC,UAAUuB,MAGzD,GACEH,GACe,WAAf9kB,GACyB,MAAzB6kB,IACA,IAAAxB,YAAU,IAAAD,eAAc0B,EAAsBlwB,IA9CnB,EAgD3B,CACA,MAAMswB,GAAoB,IAAAC,uBACxBze,EACAoe,GAEIM,GAAmB,IAAApC,0BAAyBtc,EAAOwe,GAEzD,GAAIE,EAAkB,CACpB,MAAMC,GAAgB,IAAAC,eAAczwB,EAAc,UAClD6R,GAAQ,aACNA,GACA,IAAA5Q,uBAAsBsvB,EAAkBC,IAE1CR,EAAwB,iBAExBA,EAAwB,cAa5B,OATQ,IAAAjC,OACNlc,EACA,WACA,YACA,QACA,wBACAme,GA7DMU,CAAqB7e,EAAOlU,GAEpC,IAAI,YAAEwN,EAAW,sBAAE6kB,GAA0Bne,EAAM+c,SAASC,UAAUuB,MAetE,OAXEve,EADEme,EA8DN,SACEne,EACAlU,EACAgzB,GAEA,MACO,QADCA,EAQV,SACE9e,EACAlU,GAEA,IAAIizB,EAAc/e,EAAM+c,SAASC,UAAUuB,MAAMF,iBACjD,IAAKU,EACH,OAAO/e,EAGT+e,GAAc,IAAAN,uBAAsBze,EAAO+e,GAC3C,MAAMC,GAAa,IAAAP,uBAAsBze,EAAOlU,EAAOQ,QAAQ4B,aACzDmZ,GAAS,IAAAqV,eAAcqC,EAAaC,GAC1C,OAAO,aAAYhf,GAAO,IAAArR,cAAa0Y,EAAOza,GAAIya,EAAOvY,IAlB9CmwB,CAAkBjf,EAAOlU,GAG7BkU,EAvEGkf,CAAelf,EAAOlU,EAAQqyB,GAyF1C,SACEne,EACAlU,EACAwN,GAEA,MAAM,qBAAE8kB,GAAyBpe,EAAM+c,SAASC,UAAUuB,MAC1D,GAA4B,MAAxBH,EAEF,OAAOpe,EAGT,OAAQ1G,GACN,IAAK,SACH,OAQN,SACE0G,EACAlU,GAEA,MAAM,YAAEoC,GAAgBpC,EAAOQ,SACzB,WAAE0V,GAAehC,EAAM+c,SAASC,UAAUuB,MAC1ChC,GAAa,IAAAkC,uBAAsBze,EAAO9R,GAC1CkT,GAAO,IAAAwb,2BAA0B5c,EAAOuc,EAAYva,GAC1D,OAAO,aAAYhC,GAAO,IAAA5T,uBAAsBgV,IAhBrC+d,CAAcnf,EAAOlU,GAC9B,IAAK,oBACH,OAiBN,SACEkU,EACAlU,GAEA,MAAM,YAAEoC,GAAgBpC,EAAOQ,SACzB,WAAE0V,GAAehC,EAAM+c,SAASC,UAAUuB,MAC1ChC,GAAa,IAAAkC,uBAAsBze,EAAO9R,GAC1CkT,GAAO,IAAAwb,2BAA0B5c,EAAOuc,EAAYva,GAAY,GAEtEhC,GAAQ,aAAYA,GAAO,IAAA5T,uBAAsBgV,IAEjD,MAAMhB,GAAK,IAAAsc,eAAcH,EAAY,CAAE3vB,EAAGoV,EAAYlT,EAAGkT,IACnD1B,GAAK,IAAAma,UAAS8B,EAAY,CAAE3vB,EAAGoV,EAAYlT,EAAGkT,IAC9CrV,GAAW,IAAAyyB,sBAAqB,cAAe,CAAEhf,GAAAA,EAAIE,GAAAA,IAAM8H,QAC9D1b,IACC,MAAM+vB,GAAM,IAAAC,eAAchwB,EAAQ6vB,GAClC,SAAI,IAAAI,WAAUF,IAAQza,MAQ1B,OADQ,aAAYhC,GAAO,IAAAvT,uBAAsBE,IAxCtC0yB,CAAuBrf,EAAOlU,GAGzC,OAAOkU,EAzGGsf,CAAYtf,EAAOlU,EAAQwN,IAG7B,IAAA4iB,OAAMlc,EAAO,WAAY,YAAa,SAAUuf,GAAgB,OAAD,wBAClEA,GAAU,CACblB,iBAAkBnwB,EAClBC,aAAAA,Q,iECvDJ,iBAEA,WACA,WAEA,WAAe,IAAA6vB,2BAAyB,CAAChe,EAAOlU,KACzC,IAAA0zB,2BAA0B1zB,GAIxB,EAAA2zB,+BAHEzf,K,0JCLX,iBACA,WACA,WACA,WAEA,cAEA,WAIA,WACA,WACA,WAEA,UAIA,WAEA,mBACEA,EAAkB,EAAAoV,gBAClBtpB,GAEA,KAAK,IAAA4zB,0BAAyB5zB,GAC5B,OAAOkU,EAGT,MAAM,aAAE7R,EAAY,YAAED,GAAgBpC,EAAOQ,QAI7C,OAFmB0T,EAAM+c,SAASC,UAAUuB,MAEzBJ,uBACjB,IAAK,cACHne,EAmBN,SACEA,EACAlU,GAEA,MAAM,YAAEoC,EAAW,aAAEC,GAAiBrC,EAAOQ,SAEvC,qBAAE8xB,GAAyBpe,EAAM+c,SAASC,UAAUuB,MAC1D,IAAKH,EACH,OAAOpe,EAGT,MAAM2f,GAAoB,IAAAlB,uBAAsBze,EAAOoe,GACjDwB,GAAkB,IAAAnB,uBAAsBze,EAAO9R,GAE/C0T,GAAgB,IAAAjB,oBAAmBgf,EAAmBC,GAEtDC,GAAc,IAAA1C,0BAAyBnd,EAAO4B,GAE9CvS,GAAO,IAAAuvB,eAAczwB,GAC3B,OAAO,aAAY6R,GAAO,IAAA5Q,uBAAsBywB,EAAaxwB,IAtCjDywB,CAAmB9f,EAAOlU,GAClC,MACF,IAAK,YACHkU,EAsCN,SACEA,EACAlU,GAEA,MAAMiR,EACJiD,EAAM+c,SAASC,UAAU+C,UAAUhjB,mBACrC,GAAkC,IAA9BA,EAAmBjM,OACrB,OAAOkP,EAGT,MAAM,YAAE9R,GAAgBpC,EAAOQ,SAEzB,qBAAE8xB,GAAyBpe,EAAM+c,SAASC,UAAUuB,MAC1D,IAAKH,EACH,OAAOpe,EAGT,MAAM2f,GAAoB,IAAAlB,uBAAsBze,EAAOoe,GACjDwB,GAAkB,IAAAnB,uBAAsBze,EAAO9R,GAE/CmZ,GAAS,IAAAqV,eAAckD,EAAiBD,GAE9C,OAAO,aACL3f,GACA,IAAAlT,uBAAsBiQ,EAAoBsK,EAAOza,EAAGya,EAAOvY,IA9DjDkxB,CAAiBhgB,EAAOlU,GAChC,MACF,QACEkU,EA+DN,SACEA,EACAlU,GAEA,MAAM,YAAEoC,EAAW,aAAEC,GAAiBrC,EAAOQ,QAEvCc,GAAW,IAAAqxB,uBAAsBze,EAAO9R,GACxC+xB,GAAc,IAAA3D,0BAAyBtc,EAAO5S,GAE9CiC,GAAO,IAAAuvB,eAAczwB,GAE3B,OAAmB,MAAf8xB,GACK,aAAYjgB,GAAO,IAAA5Q,uBAAsB6wB,EAAa5wB,IAC3C,QAATA,GACF,aAAY2Q,GAAO,IAAA9Q,yBAGrB8Q,EAhFKkgB,CAAclgB,EAAOlU,GAIjC,OAAO,IAAAowB,OAAMlc,EAAO,WAAY,YAAa,SAAUuf,GAAgB,OAAD,wBACjEA,GAAU,CACbpB,sBAAuB,KACvBC,qBAAsB,KACtBC,iBAAkBnwB,EAClBC,aAAAA,Q,iECpDJ,iBAEA,WAEA,WAAe,IAAA6vB,2BAAyB,CAAChe,EAAOlU,KAC9C,KAAK,IAAAq0B,gCAA+Br0B,GAClC,OAAOkU,EAGT,MAAM,OAAEtQ,GAAW5D,EAAOQ,QAE1B,OAAIoD,GAAU,EACLsQ,EAGF,OAAP,wBACKA,GAAK,CACRgC,WAAYtS,Q,iECjBhB,iBACA,WAEA,WAAe,IAAAsuB,2BAAyB,CAAChe,EAAOlU,KAC9C,KAAK,IAAAs0B,0BAAyBt0B,GAC5B,OAAOkU,EAGT,MAAM,KAAEnQ,GAAS/D,EAAOQ,QAExB,OAAO,OAAP,wBACK0T,GAAK,CACR1G,YAAazJ,Q,gGCZjB,iBAEA,WACA,WAKa,EAAA4N,wBAAyB,IAAA4e,iBACnCrc,GAAoBA,EAAM+c,SAASC,UAAUuB,MAAMJ,uBACpD,EAAAkC,sBACA,EAAAC,2BACA,CAACxB,EAAgByB,EAAeZ,IAET,cAAnBb,GACCyB,GACAZ,GAKI,IAAAjD,eAAc6D,EAAeZ,GAH3B,Q,oGClBb,iBAEA,WAEA,WAGa,EAAA9d,2BAA4B,IAAA2e,4BACvC,IAAAnE,iBACGrc,GACgC,eAA/BA,EAAMme,uBACNne,EAAMoe,uBACPpe,GACgC,eAA/BA,EAAMme,uBAA0Cne,EAAMqe,mBACxD,CAACoC,EAAWC,IACND,GAAaC,GACR,IAAA/f,oBAAmB8f,EAAWC,GAE9B,S,gJCjBf,iBAEa,EAAAnnB,qBAAsB,IAAAinB,4BAA2BxgB,GACxB,OAAhCA,EAAMme,uBAIwB,MAA9Bne,EAAMoe,sBAAgCpe,EAAM7R,aAAawhB,OAHpD,UAOF3P,EAAM1G,cAGF,EAAAD,oBAAqB,IAAAmnB,4BAC/BxgB,GAAUA,EAAMgC,aAGN,EAAAC,2BAA8BjC,IAC1B,IAAA3G,oBAAmB2G,GAClBA,EAAM+c,SAASC,UAAU2D,KAAKvwB,Y,mGCrBhD,iBAEa,EAAA2R,0BAA2B,IAAAye,4BACrCxgB,GAAUA,EAAMqe,oB,4HCHnB,iBAGa,EAAAgC,sBAAyBrgB,IACpC,MAAMqe,EAAmBre,EAAM+c,SAASC,UAAUuB,MAAMF,iBACxD,OAAKA,GAGE,IAAAlgB,eACLkgB,EACAre,EAAM+c,SAASC,UAAU2D,KAAK5zB,QAC9BiT,EAAM+c,SAASC,UAAU2D,KAAK3zB,QAC9BgT,EAAM+c,SAASC,UAAU2D,KAAKvwB,YANvB,MAUE,EAAAkwB,0BAA6BtgB,IACxC,MAAMoe,EACJpe,EAAM+c,SAASC,UAAUuB,MAAMH,qBACjC,OAAKA,GAGE,IAAAjgB,eACLigB,EACApe,EAAM+c,SAASC,UAAU2D,KAAK5zB,QAC9BiT,EAAM+c,SAASC,UAAU2D,KAAK3zB,QAC9BgT,EAAM+c,SAASC,UAAU2D,KAAKvwB,YANvB,O,+HCpBX,iBAKa,EAAA4tB,0BAA2B,IAAAtF,6BACtC,YACA,SAEW,EAAA8H,2BAA4B,IAAA7H,8BACvC,YACA,U,yGCVF,MAcMoF,EAAyC,CAC7CzkB,YAAa,UACb0I,WAAY,EACZmc,sBAAuB,KACvBC,qBAAsB,KACtBC,iBAAkB,KAClBlwB,aApBF,SAoBgBshB,oBAGH,EAAAgQ,+BAAiC3sB,OAAOC,OAAOgrB,I,2JCxB5D,iBAEA,cACA,cACA,cACA,cACA,cAEA,cACA,cACA,cAEA,WAAe,IAAAlE,gBACb,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,Y,iECrBF,iBACA,WAEA,UACA,WAEA,WAAe,IAAAP,iBACb,EAAAjE,cACA,IAAAuL,yBAAuB,CAAC5gB,EAAOlU,KAC7B,KAAK,IAAA+0B,2BAA0B/0B,GAC7B,OAAOkU,EAGT,MAAM,aAAEzN,GAAiBzG,EAAOQ,QAEhC,OAAO,OAAP,wBACK,EAAAw0B,uBAAqB,CACxBvuB,aAAAA,S,iECjBN,iBAEA,WAEA,UACA,WAEA,WAAe,IAAA+mB,iBACb,EAAAjE,cACA,IAAAuL,yBAAuB,CAAC5gB,EAAOlU,KACxB,IAAAi1B,oBAAmBj1B,GAIjB,EAAAg1B,sBAHE9gB,M,iECXb,iBAEA,WAEA,UACA,WAEA,WAAe,IAAAsZ,iBACb,EAAAjE,cACA,IAAAuL,yBAAuB,CAAC5gB,EAAOlU,KACxB,IAAAk1B,wBAAuBl1B,GAIrB,EAAAg1B,sBAHE9gB,M,2JCXb,iBACA,cAEA,WAIA,WAEA,UAEA,WAMA,SAAUihB,EAAmBn1B,GAC3B,MAAMo1B,QAA6D,IAAAC,QACjE,EAAAC,yBAEF,GAAgB,MAAZF,EACF,OAGF,MAAMv0B,QAA2D,IAAAw0B,QAC/D,EAAArkB,6BAGI,IAAAia,MACJ,IAAAnF,oBAAmB,cAAesP,EAAU,eAAe,aAAOv0B,KAjBtE,4BACQ,IAAA00B,YAAW,EAAAt1B,qBAAsBk1B,K,2JCdzC,iBAEA,cACA,cACA,cAEA,4BACQ,IAAAK,MAAK,iBACL,IAAAA,MAAK,iBACL,IAAAA,MAAK,a,iECTb,iBAEA,WACA,WACA,WACA,UACA,WACA,WACA,WAEA,WAEMC,EAAmB,CACvB,EAAAp1B,+BACA,EAAAK,+BACA,EAAAK,+BACA,EAAAI,8CACA,EAAAK,2BACA,EAAAE,qCACA,EAAA8B,mCAOF,SAAUkyB,UACF,IAAAzK,MAAI,IAAAnrB,sBALZ,4BACQ,IAAAy1B,YAAWE,EAAkBC,K,2JCvBrC,iBACA,cAEA,cAEA,WAKA,WAEA,UAMA,SAAUC,EAAc31B,G,QACtB,MAAM,aAAEyG,GAAiBzG,EAAOQ,QAE1Bo1B,QAAoC,IAAAP,QAAO,EAAAlR,qBACjD,IAAKyR,EACH,OAGF,MAAMjQ,GAAa,aAAoB,QAAf,EAAAiQ,EAAIC,mBAAW,QAAI,IAAK1iB,GAAMA,EAAEvO,KAAO6B,IAC/D,IAAKkf,EACH,aAGI,IAAAsF,MAAI,IAAAnpB,qBAA0C,QAAtB,EAAA6jB,EAAWmQ,mBAAW,QAAI,KAExD,MAAMhxB,EAAO,iBAAiB2B,eAC1B,UAAQsvB,SAASra,WAAa5W,GAChC,UAAQob,KAAKpb,GArBjB,4BACQ,IAAAywB,YAAW,EAAAhvB,2BAA4BovB,K,gECf/C,iBACA,WAEA,WAAe,IAAAK,+BAA6B,CAAC9hB,EAAOlU,KAClD,KAAK,IAAAytB,+BAA8BztB,GACjC,OAAOkU,EAGT,MAAM,WAAE3T,GAAeP,EAAOQ,QAE9B,OAAO,OAAP,wBACK0T,GAAK,CACRjD,mBAAoBiD,EAAMjD,mBAAmBqL,QAC1Cxb,IAAOP,EAAWiV,SAAS1U,W,2JCblC,iBAEA,aACA,cACA,cACA,cAEA,WAAe,IAAAitB,gBACb,UACA,UACA,UACA,Y,iECTF,iBAEA,WACA,WAEA,WAAe,IAAAiI,+BAA6B,SAC1C9hB,EAA8B,EAAA+hB,4BAC9Bj2B,GAEA,OAAK,IAAAmuB,8BAA6BnuB,GAI3B,OAAP,wBACKkU,GAAK,CACRjD,mBAAoB,KALbiD,M,iECVX,iBACA,WAEA,WACA,WAEA,WAAe,IAAA8hB,+BAA6B,SAC1C9hB,EAA8B,EAAA+hB,4BAC9Bj2B,GAEA,KAAK,IAAAouB,+BAA8BpuB,GACjC,OAAOkU,EAGT,MAAM,WAAE3T,EAAU,KAAEgD,GAASvD,EAAOQ,QACpC,OAAO,OAAP,wBACK0T,GAAK,CACRjD,oBAAoB,IAAAilB,kBAClBhiB,EAAMjD,mBACN1Q,EACAgD,S,2JCpBN,iBAEA,WACA,WAEA,cAEA,mBACE2Q,EAAkB,EAAAoV,gBAClBtpB,GAEA,KAAK,IAAAm2B,kCAAiCn2B,GACpC,OAAOkU,EAGT,MAAMjD,EACJiD,EAAM+c,SAASC,UAAU+C,UAAUhjB,mBAErC,OAAkC,IAA9BA,EAAmBjM,OACdkP,GAGF,aAAYA,GAAO,IAAA5T,uBAAsB2Q,M,gICvBlD,iBAEa,EAAAmlB,0BAA2B,IAAAC,gCACtC,CAACC,EAAyB/0B,IACxB+0B,EAAErlB,mBAAmBuE,SAASjU,KAGrB,EAAA2P,4BAA6B,IAAAmlB,gCACvCC,GAA4BA,EAAErlB,sB,uICTjC,iBAKa,EAAA+kB,8BAA+B,IAAApJ,6BAC1C,YACA,aAEW,EAAAyJ,+BAAgC,IAAAxJ,8BAC3C,YACA,c,oGCHW,EAAAoJ,4BAA8BjvB,OAAOC,OAJN,CAC1CgK,mBAAoB,M,kGCLtB,iBAEa,EAAAqkB,yBAA0B,IAAAiB,0BACpCD,GAAMA,EAAE7vB,gB,2HCHX,iBAKa,EAAAquB,wBAAyB,IAAAlI,6BAA4B,aACrD,EAAA2J,yBACX,IAAA1J,8BAA6B,c,+FCP/B,iBACA,WACA,WAIA,WAIA,WAWMoF,EAAgC,CACpCxrB,aAAc,KACd+vB,OAAQ,EAAAlI,yBACRztB,SAAU,EAAA+tB,wBACV6D,MAAO,EAAAkB,+BACPM,UAAW,EAAAgC,4BACXpB,KAAM,EAAA4B,wBAGK,EAAAzB,sBAAwBhuB,OAAOC,OAAOgrB,I,8nBC9BnD,oBAIA,WAEA,WAKA,WAEA,8BACE,MAAMhxB,GAAU,IAAA4K,aAAY,EAAAsF,uBACtBjQ,GAAU,IAAA2K,aAAY,EAAAuF,uBACtB9M,GAAa,IAAAuH,aAAY,EAAAwF,0BAE/B,OAAO3I,EAAMG,aACVsK,IAAa,IAAAd,eAAcc,EAAGlS,EAASC,EAASoD,IACjD,CAACrD,EAASC,EAASoD,M,2JCpBvB,iBAEA,aACA,cACA,cAEA,WAAe,IAAAypB,gBAAe,UAAY,UAAuB,Y,gECJjE,iBAEA,WACA,WAEA,WAAe,IAAA2I,0BAAwB,SACrCxiB,EAAyB,EAAAuiB,uBACzBz2B,GAEA,KAAK,IAAAktB,sBAAqBltB,GACxB,OAAOkU,EAGT,MAAM,EAAEpT,EAAC,GAAQd,EAAOQ,QAExB,OAAO,OAAP,wBACK0T,GAAK,CACRjT,QAASiT,EAAMjT,QAAUH,EACzBI,QAASgT,EAAMhT,QAAU8B,Q,iEClB7B,iBAEA,WACA,WAEA,WAAe,IAAA0zB,0BAAwB,SACrCxiB,EAAyB,EAAAuiB,uBACzBz2B,GAEA,KAAK,IAAAotB,iCAAgCptB,GACnC,OAAOkU,EAGT,MAAM,OAAE/P,EAAM,MAAED,GAAUlE,EAAOQ,QAEjC,IAAI8D,EAAa4P,EAAM5P,WAKvB,OAJ4B,IAAxB4P,EAAM5C,gBACRhN,EAAasD,KAAKmN,IAAI7Q,EAAOC,GAAU,KAGlC,OAAP,wBACK+P,GAAK,CACR5C,cAAepN,EACfsN,eAAgBrN,EAChBG,WAAAA,Q,2JCxBJ,iBACA,WACA,WAEA,cAEA,WAEA,WACA,WAEA,mBACE4P,EAAkB,EAAAoV,gBAClBtpB,GAEA,KAAK,IAAAmtB,uBAAsBntB,GACzB,OAAOkU,EAGT,MAAM,WAAE5P,GAAetE,EAAOQ,QAExBi0B,GAAgB,IAAAF,uBAAsBrgB,GAE5CA,GAAQ,IAAAkc,OACNlc,EACA,WACA,YACA,OACA,aACA5P,GAGF,MAAMqyB,GAAc,IAAApC,uBAAsBrgB,GAE1C,GAAqB,MAAjBugB,GAAwC,MAAfkC,EAAqB,CAChD,MAAMpb,GAAS,IAAAqV,eAAc6D,EAAekC,GAC5CziB,GAAQ,aAAYA,GAAO,IAAArR,cAAa0Y,EAAOza,GAAIya,EAAOvY,IAG5D,OAAOkR,I,wHCtCT,iBAEA,WAEa,EAAAye,uBAAwB,IAAAiE,2BACnC,CAACN,EAAoBnjB,KACnB,IAAAd,eAAcc,EAAGmjB,EAAEr1B,QAASq1B,EAAEp1B,QAASo1B,EAAEhyB,cAGhC,EAAAqQ,uBAAwB,IAAAiiB,2BACnC,CAACN,EAAoBnjB,KACnB,IAAA0jB,eAAc1jB,EAAGmjB,EAAEr1B,QAASq1B,EAAEp1B,QAASo1B,EAAEhyB,e,mJCd7C,iBAEa,EAAA6M,uBAAwB,IAAAylB,2BAA0BN,GAAMA,EAAEr1B,UAC1D,EAAAmQ,uBAAwB,IAAAwlB,2BAA0BN,GAAMA,EAAEp1B,UAE1D,EAAAmQ,0BAA2B,IAAAulB,2BACrCN,GAAMA,EAAEhyB,c,qICNX,iBAEa,EAAAiN,6BAA8B,IAAAqlB,2BACxCN,GAAMA,EAAEhlB,gBAEE,EAAAG,8BAA+B,IAAAmlB,2BACzCN,GAAMA,EAAE9kB,kB,6HCNX,iBAKa,EAAAklB,yBAA0B,IAAA9J,6BACrC,YACA,QAEW,EAAAgK,0BAA2B,IAAA/J,8BACtC,YACA,S,+FCKW,EAAA4J,uBAAyBzvB,OAAOC,OARN,CACrCqK,cAAe,EACfE,eAAgB,EAChBvQ,QAAS,EACTC,QAAS,EACToD,WAAY,K,sGCXD,EAAAuyB,cAAgB,CAC3B1jB,EACAlS,EACAC,EACAoD,KACG,CACHxD,GAAIqS,EAAErS,EAAIG,EAAU,IAAMqD,EAC1BtB,IAAKmQ,EAAEnQ,EAAI9B,EAAU,IAAMoD,IAGhB,EAAA+N,cAAgB,CAC3Bc,EACAlS,EACAC,EACAoD,KACG,CACHxD,EAAGqS,EAAErS,EAAIwD,EAAa,GAAKrD,EAC3B+B,GAAwC,GAApCmQ,EAAEnQ,EAAIsB,EAAa,GAAKpD,M,0JCnB9B,oBAEA,UAAe,W,iECFf,iBAEA,WAEA,WAAe,IAAA41B,0BAAwB,CAAC5iB,EAAOlU,KACxC,IAAA+2B,kCAAiC/2B,GAI/B,OAAP,wBACKkU,GAAK,CACR8iB,sBAAuBh3B,EAAOQ,QAAQiE,iBAL/ByP,K,wGCNX,iBAEa,EAAAsE,+BAAgC,IAAAye,2BAC1C/iB,GAAUA,EAAM8iB,yB,6HCHnB,iBAKa,EAAAF,yBACX,IAAAlK,6BAA4B,cACjB,EAAAqK,0BACX,IAAApK,8BAA6B,e,+FCAlB,EAAAqK,uBAAyBlwB,OAAOC,OAJN,CACrC+vB,sBAAuB,CAAC,W,omBCL1B,oBACA,WAEA,WAEA,WAWA,qBACE,MAAM3mB,GAAW,IAAAC,eASjB,MAAO,CACLyI,YATiB,IAAAlN,aAAY,EAAAC,2BAU7BqrB,WATgB,IAAAtrB,aAAY,EAAAoY,0BAU5BjL,cAToBtQ,EAAMG,aACzBlD,IACC0K,GAAS,IAAA3K,iBAAgBC,MAE3B,CAAC0K,O,moBCxBL,oBACA,WAGA,WAEA,WAEA,WAEA,WAMA,iCACE5J,EACA2wB,G,MAMA,MAAM/mB,GAAW,IAAAC,eACXqV,GAAa,IAAA9Z,cAAaqI,IAC9B,IAAA0R,6BAA4B1R,EAAO,cAAezN,KAGpD,MAAO,EACL,IAAAoF,cACGqI,IACC,IAAA2U,iCACE3U,EACA,cACAzN,EACA2wB,KAGU,QAAhB,EAAAzR,MAAAA,OAAU,EAAVA,EAAY3Y,YAAI,QAAI,KACpBtE,EAAMG,aACJ,CAAC4V,EAAmBsK,KAClB1Y,GACE,IAAA2Y,wBACE,cACAviB,EACA2wB,EACA,GAAG3wB,KAAgB2wB,MAAe,IAAAxqB,SAAQmc,KAC1CtK,MAIN,CAAChY,O,2JCpDP,iBAEA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cAEA,WAAe,IAAAsnB,gBACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,2JCnBF,oBAEA,WACA,WACA,WAEA,WAEA,WACA,WAEA,WAAe,IAAAsJ,uBAAqB,CAACnjB,EAAOlU,KAC1C,KAAK,IAAAs3B,4BAA2Bt3B,GAC9B,OAAOkU,EAGT,MAAM,WAAEvP,EAAU,GAAEC,EAAE,KAAEE,EAAI,KAAEG,GAASjF,EAAOQ,QAE9C,GAA2B,UAAvB0T,EAAMqjB,cACR,OAAOrjB,EAGT,MAAMgQ,EAAc,EAAAC,oBAAoBqT,MAAMtjB,GAC9C,IAAKgQ,EACH,OAAOhQ,EAGT,MAAMujB,GAAQ,aAAUvT,EAAYvf,IAAc7D,GAAMA,EAAE8D,KAAOA,IACjE,IAAc,GAAV6yB,EAEF,OAAOvjB,EAGT,MAAMwjB,GAAiB,IAAAvX,cACrB+D,EACA,CAACvf,EAAY8yB,KAAU3yB,GACvBG,GAEI0yB,GAAe,IAAAC,eAAcF,GAC7BG,EAAqB,EAAAC,QAAQC,OAAOJ,GAC1C,OAAO,OAAP,wBACKzjB,GAAK,CACRjO,UAAW,OAAF,wBACJiO,EAAMjO,WAAS,CAClB,cAAe4xB,U,iEC5CrB,gBACA,WACA,WACA,WACA,WACA,WAEA,WAAe,IAAAR,uBAAqB,CAACnjB,EAAOlU,KAC1C,KAAK,IAAAg4B,wBAAuBh4B,GAC1B,OAAOkU,EAGT,MAAM,KAAEpP,EAAI,KAAEG,GAASjF,EAAOQ,QAE9B,GAA2B,UAAvB0T,EAAMqjB,cACR,OAAOrjB,EAGT,MAAMgQ,EAAc,EAAAC,oBAAoBqT,MAAMtjB,GAC9C,IAAKgQ,EACH,OAAOhQ,EAGT,MAAMwjB,GAAiB,IAAAvX,cAAa+D,EAAapf,EAAMG,GACjDgzB,GAAgB,IAAAL,eAAcF,GAC9BG,EAAqB,EAAAC,QAAQC,OAAOE,GAC1C,OAAO,OAAP,wBACK/jB,GAAK,CACRjO,UAAW,OAAF,wBACJiO,EAAMjO,WAAS,CAClB,cAAe4xB,U,iEC9BrB,iBACA,WAEA,WAEA,WAKA,WAGA,WAAe,IAAAR,uBAAqB,CAACnjB,EAAOlU,EAAQitB,K,MAClD,KAAK,IAAAiL,4BAA2Bl4B,GAC9B,OAAOkU,EAGT,GAA2B,UAAvBA,EAAMqjB,cACR,OAAOrjB,EAGT,MAAMgQ,EAAc,EAAAC,oBAAoBqT,MAAMtjB,GAC9C,IAAKgQ,EACH,OAAOhQ,EAGT,MAAM,IAAE7O,EAAG,GAAET,GAAO5E,EAAOQ,QAG3B,GAAc,OADC,IAAAolB,6BAA4BqH,EAAU5nB,EAAKT,GAExD,OAAOsP,EAGT,MAAMikB,EAAmC,CACvCvzB,GAAAA,GAGI8yB,EAAc,+BACfxT,GAAW,CACd,CAAC7e,GAAM,IAAqB,QAAhB,EAAA6e,EAAY7e,UAAI,QAAI,GAAK8yB,KAGjCF,GAAgB,IAAAL,eAAcF,GAC9BU,EAAc,EAAAN,QAAQC,OAAOE,GACnC,OAAO,OAAP,wBACK/jB,GAAK,CACRjO,UAAW,OAAF,wBACJiO,EAAMjO,WAAS,CAClB,cAAemyB,U,iECjDrB,iBACA,WAEA,WAAe,IAAAf,uBAAqB,CAACnjB,EAAOlU,KACrC,IAAAq4B,0BAAyBr4B,GAIvB,OAAP,wBACKkU,GAAK,CACRqjB,cAAe,QACfJ,UAAWn3B,EAAOQ,QAAQgF,eANnB0O,K,iECHX,iBAEA,WACA,WAEA,WAAe,IAAAmjB,uBACb,CAACnjB,EAAqBlU,KACpB,KAAK,IAAAs4B,yBAAwBt4B,GAC3B,OAAOkU,EAGT,MAAM,KAAEvO,GAAS3F,EAAOQ,QAExB,OAAO,OAAP,wBACK,EAAA+3B,qBAAmB,CACtBvyB,UAAWL,EAAKqH,KAChBuqB,cAAe,gB,iEClBrB,iBACA,WACA,WAEA,WAEA,WAAe,IAAAF,uBAAqB,CAACnjB,EAAOlU,KACrC,IAAAi1B,oBAAmBj1B,GAIjB,OAAP,wBACK,EAAAu4B,qBAAmB,CACtBvyB,UAAW,cACXuxB,cAAe,SACftxB,UAAW,CACT,cAAe,EAAA6xB,QAAQC,OAAO,SARzB7jB,K,iECNX,iBAEA,WACA,WAEA,WAAe,IAAAmjB,uBACb,CAACnjB,EAAqBlU,KACpB,KAAK,IAAAk1B,wBAAuBl1B,GAC1B,OAAOkU,EAGT,MAAM,UAAElO,EAAS,UAAEC,GAAcjG,EAAOQ,QAExC,OAAO,OAAP,wBACK,EAAA+3B,qBAAmB,CACtBhB,cAAe,SACfvxB,UAAAA,EACAC,UAAAA,Q,2JCnBN,oBAEA,WACA,WACA,WAEA,WAEA,WACA,WAEA,WAAe,IAAAoxB,uBAAqB,CAACnjB,EAAOlU,KAC1C,KAAK,IAAAw4B,gCAA+Bx4B,GAClC,OAAOkU,EAGT,MAAM,WAAEvP,EAAU,GAAEC,EAAE,KAAEE,EAAI,aAAEqB,EAAY,SAAEC,GAAapG,EAAOQ,QAEhE,GAA2B,UAAvB0T,EAAMqjB,cACR,OAAOrjB,EAGT,MAAMgQ,EAAc,EAAAC,oBAAoBqT,MAAMtjB,GAC9C,IAAKgQ,EACH,OAAOhQ,EAGT,MAAMujB,GAAQ,aAAUvT,EAAYvf,IAAc7D,GAAMA,EAAE8D,KAAOA,IACjE,IAAc,GAAV6yB,EAEF,OAAOvjB,EAGT,MAAMwjB,GAAiB,IAAAvX,cACrB+D,EACA,CAACvf,EAAY8yB,KAAU3yB,GACvBqB,GAEIwxB,GAAe,IAAAC,eAAcF,GAC7BG,EAAqB,EAAAC,QAAQC,OAAOJ,GAC1C,OAAO,OAAP,wBACKzjB,GAAK,CACRjO,UAAW,OAAF,wBACJiO,EAAMjO,WAAS,CAClB,cAAe4xB,EACf,CAAC1xB,GAAeC,U,2JC7CtB,iBAEA,cACA,cAEA,4BACQ,IAAAovB,MAAK,iBACL,IAAAA,MAAK,a,iECPb,iBACA,WACA,WAGA,WAIA,WACA,WAMA,SAAUiD,EAAsBz4B,G,MAC9B,MAAM,KAAE2F,GAAS3F,EAAOQ,QAExB,IACE,IAAKmF,EAAKqH,KAAK0rB,SAAS,QACtB,MAAM,IAAIC,MAAM,gDAGlB,MAAM3yB,EAAYL,EAAKqH,KAAK4rB,QAAQ,SAAU,IACxCjsB,QAA4B,IAAAksB,OAAK,IAAMlzB,EAAKkH,gBAG5CisB,QAAmD,IAAAD,OAAK,KAC5D,IAAAE,WAAUpsB,KAGZmsB,EAAIE,gBAEJ,MAAM/yB,EAAwC,GAW9C,SAVM,IAAA4yB,OAAK,IACTI,QAAQC,KACN,IAAAC,SAAQL,EAAI5vB,OAAOyF,KAAI,EAAEyqB,EAAchzB,KAC9BA,EAASizB,MAAM,cAAcvsB,MAAM7H,IACxCgB,EAAUmzB,GAAgBn0B,UAMF,MAA5BgB,EAAU,eACZ,MAAM,IAAI0yB,MAAM,sDAGZ,IAAA1N,MAAI,IAAAllB,gBAAeC,EAAWC,IACpC,MAAOgD,SACD,IAAAgiB,MAAI,IAAA1lB,kBAA0B,QAAT,EAAA0D,EAAEqwB,eAAO,QAAIjZ,OAAOpX,MAvCnD,4BACQ,IAAAssB,YAAW,EAAA9vB,yBAA0BgzB,K,2JCZ7C,iBACA,WACA,cAEA,WACA,WAEA,WACA,WAMA,SAAUc,IACR,MAAMvzB,QAAiC,IAAAqvB,QAAO,EAAAmE,mBAC9C,IAAKxzB,EACH,aAGI,IAAAilB,MAAI,IAAA/qB,iBAEV,MAAMu5B,QAA4B,IAAAZ,MAAKa,GACvC,IACMC,OAAOC,yBACH,IAAAf,MAAKgB,EAAmBJ,EAASzzB,SAEjC,IAAA6yB,MAAKiB,EAAYL,EAASzzB,GAElC,MAAOiD,GAEPiU,QAAQ6c,KAAK,yBAA0B9wB,IAI3C,SAAUywB,IACR,MAAMzzB,QAA8C,IAAAovB,QAClD,EAAA1D,0BAGImH,EAAM,IAAI,UAChB,IAAK,MAAMzzB,KAAO2B,OAAOsO,KAAKrP,GAAY,CACxC,MAAMG,EAAWH,EAAUZ,GAC3ByzB,EAAInzB,KAAKN,EAAKe,EAAU,CAAE4zB,QAAQ,IAOpC,aAJqB,IAAAnB,OAAK,IACxBC,EAAIE,cAAc,CAAEj5B,KAAM,aAAck6B,YAAa,cAMzD,SAAUJ,EACRJ,EACAzzB,GAEA,MAAMk0B,QAAsC,IAAArB,MAAKc,OAAOC,mBAAqB,CAK3EO,cAAen0B,EACfo0B,MAAO,CACL,CACE3V,YAAa,oBACbpc,OAAQ,CACN,kBAAmB,CAAC,aAM5B,IAAK6xB,EACH,OAGF,MAAMG,QAA2C,IAAAxB,MAC/CqB,EAAWI,eAAeld,KAAK8c,UAE3B,IAAArB,MAAKwB,EAASE,MAAMnd,KAAKid,GAAWZ,SACpC,IAAAZ,MAAKwB,EAASG,MAAMpd,KAAKid,IAGjC,SAAUP,EAAWL,EAAqBzzB,GACxC,MAAMy0B,EAAO,IAAI/tB,KAAK,CAAC+sB,GAAU,CAC/B15B,KAAM,qBAGR,IAAA26B,QAAOD,EAAM,GAAGz0B,SA/ElB,4BACQ,IAAA20B,WAAU,EAAAt0B,oBAAqBkzB,K,2XCZvC,oBAGA,WAEA,WAEA,WAQA,WAiBA,IAAIqB,EACAC,EA4DJ,SAAgBjV,EAGd1R,EACA7O,EACAT,G,MAEA,MAAMK,GAAO,IAAAkf,qBAAoBjQ,GACjC,IAAKjP,EACH,OAAO,KAKT,MAAMk0B,EAAUl0B,EAAKI,GACrB,OAAyD,QAAjD,gBAAK8zB,GAAU2B,GAAUA,EAAMl2B,KAAOA,WAAW,QAAI,KAtFlD,EAAAkH,2BAA4B,IAAAivB,wBACtCj6B,GAAMA,EAAEy2B,gBAGE,EAAAtT,0BAA2B,IAAA8W,wBACrCj6B,GAAMA,EAAEq2B,YAGE,EAAAqC,mBAAoB,IAAAuB,wBAAuBj6B,GAAMA,EAAEkF,YAInD,EAAAme,qBAAsB,IAAA4W,wBAAuB7mB,IACxD,GAA4B,WAAxBA,EAAMqjB,cACR,OAAO,KAGT,GAAIqD,GAAkB1mB,EAAMjO,UAC1B,OAAO40B,EAGT,MAAMG,EAAU,EAAAC,4BAA4BzD,MAAMtjB,EAAO,eACzD,GAAe,MAAX8mB,EACF,OAAO,KAGT,MAAME,GAAO,IAAAC,WAAUH,GAAUI,IAC/B,MAAMh1B,EAAW,EAAA60B,4BAA4BzD,MAAMtjB,EAAOknB,GAC1D,GAAgB,MAAZh1B,EAGF,MAAM,IAAIuyB,MAAM,YAAYyC,eAE9B,OAAOh1B,KAMT,OAHAw0B,EAAiB1mB,EAAMjO,UACvB40B,EAAYK,EAELA,KAGT,sCACEhnB,EACA7O,G,MAEA,MAAMJ,GAAO,IAAAkf,qBAAoBjQ,GACjC,IAAKjP,EACH,MAAO,GAGT,MAAMo2B,EAAe,QAAT,EAAAp2B,EAAKI,UAAI,eAAEsJ,KACpB2sB,GAAsCA,EAAS12B,KAElD,OAAW,MAAPy2B,GACK,IAAApf,oBAGFof,GAGT,oCAEEnnB,EAAiB7O,GACjB,MAAMJ,GAAO,IAAAkf,qBAAoBjQ,GACjC,OAAY,MAARjP,GAA6B,MAAbA,EAAKI,IAChB,IAAA4W,oBAEFhX,EAAKI,IAGd,gCAkBA,2CAGE6O,EAAiB7O,EAAeT,EAAY22B,GAC5C,MAAMt2B,EAAO2gB,EAA4B1R,EAAO7O,EAAKT,GACrD,IAAKK,EACH,OAAO,KAGT,MAAMm0B,EAAen0B,EAAKs2B,GAC1B,MAA4B,iBAAjBnC,EACF,MAGF,IAAAoC,yBAAwBtnB,EAAOklB,K,2JC7HxC,iBAGA,WAEa,EAAAzH,0BAA2B,IAAAoJ,wBACrCzE,GAAMA,EAAErwB,YAGE,EAAAu1B,yBAA0B,IAAAT,wBACrC,CAAC7mB,EAAqBklB,KACpB,MAAMhzB,EAAW8N,EAAMjO,UAAUmzB,GACjC,OAAgB,MAAZhzB,EACK,KAEFA,KAIE,EAAA60B,6BAA8B,IAAAF,wBACzC,CAAC7mB,EAAqBklB,IAEJ,MADCllB,EAAMjO,UAAUmzB,GAExB,KAGF,EAAAqC,YAAYC,OAAOxnB,EAAMjO,UAAUmzB,O,uHC1B9C,iBAKa,EAAA/B,sBAAuB,IAAAzK,6BAA4B,WACnD,EAAAmO,uBAAwB,IAAAlO,8BAA6B,Y,4FCQrD,EAAA0L,oBAAsBvxB,OAAOC,OAPN,CAClCjB,UAAW,KACXuxB,cAAe,OACfJ,UAAW,KACXlxB,UAAW,M,2JCXb,iBAEA,cACA,cACA,aACA,cAEA,WAAe,IAAA8nB,gBACb,UACA,UACA,UACA,Y,iLCXF,iBAEA,cACA,cACA,cAEA,iCACQ,IAAAyH,MAAK,iBACL,IAAAA,MAAK,iBACL,IAAAA,MAAK,a,+NCRb,oBAEA,WACA,WAiCA,0CACKmG,GAEH,OAAQjS,GACC,CAACxV,EAAkB,EAAAoV,gBAAiBtpB,KACzC,MAAM47B,GAAW,aAAI1nB,EAAM+c,SAAU0K,GAC/BE,EAAWnS,EAAQkS,EAAU57B,EAAQkU,GAC3C,OAAI0nB,GAAYC,GACP,IAAA1b,cAAajM,EAAO,CAAC,cAAeynB,GAAcE,GAEpD3nB,IAyEb,2CACKynB,GAEH,OACE1Y,IAEA,MAAM6Y,EAAmB,CAACxF,KAAgBzxB,KACxC,MAAMqP,GAAQ,aAAIoiB,EAAErF,SAAU0K,GAC9B,OAAO1Y,EAAS/O,KAAUrP,IAG5B,OADAi3B,EAAYtE,MAAQvU,EACb6Y,K,+FCnIX,iBACA,UACA,WACA,WASa,EAAAC,qBAAgD/0B,OAAOC,OAAO,CACzEmkB,KAAM,EAAAqB,iBACNyE,UAAW,EAAA8D,sBACXgH,WAAY,EAAA9E,uBACZ+E,QAAS,EAAA1D,uB,oGChBX,iBAEA,qBACE2C,EACAgB,GAGA,MAAMC,EAAY,CAChBC,SAAW7wB,IAAe,EAC1B8wB,IAAK,UACLC,QAAS,CAACC,EAAeC,KACvB,MAAMpD,EAAgBoD,EAAuBC,SAC7C,IAAKrD,EACH,MAAM,IAAIT,MAAM,uBAElB,MAAM+D,EAAWR,EAAc9C,GAC/B,OAAO,IAAAuD,OAAMD,EAAU,CAAEE,OAAO,EAAMC,WAAY,CAACV,OAGvD,OAAO,IAAAQ,OAAMzB,EAAM,CAAE0B,OAAO,EAAMC,WAAY,CAACV,MAGjD,yBAA8Bl3B,GAC5B,OAAO,IAAA63B,WAAU73B,K,yaCvBnB,cAEA,iBAMa,EAAAqkB,gBAAsCtiB,OAAOC,OAAO,CAC/DgqB,SAAU,EAAA8K,wB,mGCRZ,iBAiBA,oCAGEgB,GAEA,OAAO,8BAASA,K,orBCvBlB,oBAEA,WAEA,cAKA,UAHgC,EAAGv0B,SAAAA,KACjC,gBAAC,EAAAkP,SAAQ,CAAC1F,MAAO,WAAQxJ,I,8HCH3B,iBACA,WACA,WACA,WACA,WAEa,EAAAw0B,iBAA6B,CACxC,EAAA16B,4BACA,EAAAM,qBACA,EAAAwB,sBACA,EAAAnB,0BACA,EAAApD,4BAGF,2BAAgCG,GAC9B,OAAOA,GAGT,0BAA+BkU,GAC7B,OAAO,OAAP,wBACKA,GAAK,CACR+c,SAAU,OAAF,wBACH/c,EAAM+c,UAAQ,CACjBgL,QAAS,OAAF,wBACF/nB,EAAM+c,SAASgL,SAAO,CACzBh2B,eAAWg3B,U,kHC7BnB,iBAEA,WAKA,8BAAmC/oB,GACjC,MAAMgpB,EA8BR,WACE,MAAMC,EAAYC,aAAaC,QAAQC,GACvC,IAAKH,EACH,MAAO,GAGT,IACE,OAAOI,KAAKZ,MAAMQ,GAClB,SACA,MAAO,IAvCcK,GAEvB,OAAO,OAAP,wBACKtpB,GAAK,CACR+c,SAAU,OAAF,wBACH/c,EAAM+c,UAAQ,CACjB7F,MAAM,eAAclX,EAAM+c,SAAS7F,KAAM8R,EAAe9R,MAAQ,SAOtE,IAAIqS,EAA0B,KAE9B,MAAMC,GAAsB,IAAAtR,0BAAyB,CACnDhB,KAAM,iBAGR,8BAAmClX,GACjC,MAAMgpB,EAAiBQ,EAAoBxpB,GACvCupB,IAAuBP,IAsB7B,SAAwBhpB,GACtBkpB,aAAaO,QAAQL,EAAqBC,KAAKT,UAAU5oB,IApBzD0pB,CAAeV,GACfO,EAAqBP,IAGvB,MAAMI,EAAsB,mB,iECpC5B,iBAEA,WAEA,4BACQ,IAAA9H,MAAK,EAAAqI,gB,2JCLb,iBAMA,cAEA,WACA,WAEA,cAEA,WAEA,WAMA,cA8BM7rB,EA5BN,WACE,MAAM8rB,EACHnE,OAAOoE,sCACNpE,OAAOoE,qCAAqC,CAC1CC,gBAAA,EAAAA,gBACAC,eAAA,EAAAA,eACAjB,iBAAA,EAAAA,oBAEJ,EAAAkB,QAEIC,GAAiB,eAEjBC,GAAe,IAAAC,oBAAmB,EAAA/U,iBAElCtX,GAAQ,iBACZ,UACAosB,EACAN,GAAiB,IAAAQ,iBAAgBH,KAQnC,OALAA,EAAeI,IAAI,WAEnBvsB,EAAM0D,WAAU,KAAM,IAAA8oB,oBAAmBxsB,EAAMmC,cAC/CnC,EAAM3B,UAAS,IAAAjQ,eAER4R,EAGKysB,GACd,UAAezsB,G,iECpDf,SAEA,SACA,U,8FCHa,EAAAypB,YAAc,IAAIiD,YAAY,SAC9B,EAAA5G,QAAU,IAAI6G,a","sources":["webpack://potioncraft-crucible-web/./src/components/Button/Button.module.css?a282","webpack://potioncraft-crucible-web/./src/components/ColorButton/ColorButton.module.css?be06","webpack://potioncraft-crucible-web/./src/components/Divider/Divider.module.css?9c3e","webpack://potioncraft-crucible-web/./src/components/FieldBox/FieldBox.module.css?0c66","webpack://potioncraft-crucible-web/./src/components/Flow/Flow.module.css?c7c3","webpack://potioncraft-crucible-web/./src/components/ImageField/ImageField.module.css?cbc0","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/MapEditorToolbar.module.css?6ae1","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/components/EntitiesDropButton/EntitiesDropButton.module.css?7761","webpack://potioncraft-crucible-web/./src/components/MapEditor/MapEditor.module.css?4c56","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/DragPreview/DragPreview.module.css?695a","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/MapCanvas.module.css?0101","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/MapWidgets/MapWidgets.module.css?039a","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/PanZoomHandler/PanZoomHandler.module.css?8fc8","webpack://potioncraft-crucible-web/./src/components/Menus/Menus.module.css?27a7","webpack://potioncraft-crucible-web/./src/components/Modal/Modal.module.css?d409","webpack://potioncraft-crucible-web/./src/components/Page/Page.module.css?94f5","webpack://potioncraft-crucible-web/./src/components/TextArea/TextArea.module.css?4a29","webpack://potioncraft-crucible-web/./src/components/TextBox/TextBox.module.css?3cb2","webpack://potioncraft-crucible-web/./src/components/TitleBar/TitleBar.module.css?c6e3","webpack://potioncraft-crucible-web/./src/components/Tooltip/Tooltip.module.css?a017","webpack://potioncraft-crucible-web/./src/components/Tree/Tree.module.css?3368","webpack://potioncraft-crucible-web/./src/pages/home/views/NoPackageView/NoPackageView.module.css?3027","webpack://potioncraft-crucible-web/./src/pages/home/views/PackageView/PackageView.module.css?1ff0","webpack://potioncraft-crucible-web/./src/pages/potionbase-mapeditor/components/MapWindow/MapWindow.module.css?c6c6","webpack://potioncraft-crucible-web/./src/pages/potionbase/PotionBasePage.module.css?30d0","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseColor/PotionBaseColor.module.css?d3ff","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseDescription/PotionBaseDescription.module.css?1293","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseIcons/PotionBaseIcons.module.css?1dd7","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseName/PotionBaseName.module.css?2bed","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseTooltipImage/PotionBaseTooltipImage.module.css?6fea","webpack://potioncraft-crucible-web/./src/pages/potioneffect/PotionEffectPage.module.css?7b59","webpack://potioncraft-crucible-web/./src/pages/potioneffect/components/PotionEffectColor/PotionEffectColor.module.css?35ee","webpack://potioncraft-crucible-web/./src/actions/editors/commit-queue.ts","webpack://potioncraft-crucible-web/./src/actions/editors/commit.ts","webpack://potioncraft-crucible-web/./src/actions/initialize.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/entity-delete.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/entity-insert.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/entity-offset.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/entity-prototype-instantiate.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/map-clear.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/map-import-template.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/map-receive.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/modifierkeys-changed.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/mouse-down.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/mouse-move.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/mouse-out.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/mouse-up.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/pan.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/rendered.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/select-clear.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/select-entity.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/selection-delete.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/tool-radius-set.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/tool-set.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/viewport-resize.ts","webpack://potioncraft-crucible-web/./src/actions/map-editor/zoom.ts","webpack://potioncraft-crucible-web/./src/actions/navigation/navtree-expanded-set.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-data-set-byid.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-data-set.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-idobject-new.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-load-error.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-load-file.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-new.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-receive.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-resource-set-byid.ts","webpack://potioncraft-crucible-web/./src/actions/packages/package-save.ts","webpack://potioncraft-crucible-web/./src/actions/potion-bases/map-edit.ts","webpack://potioncraft-crucible-web/./src/actions/set-language.ts","webpack://potioncraft-crucible-web/./src/arrays.ts","webpack://potioncraft-crucible-web/./src/canvas.ts","webpack://potioncraft-crucible-web/./src/components/AbstractFileLoadButton.tsx","webpack://potioncraft-crucible-web/./src/components/AutoPopper.tsx","webpack://potioncraft-crucible-web/./src/components/Button/Button.tsx","webpack://potioncraft-crucible-web/./src/components/Button/LinkButton.tsx","webpack://potioncraft-crucible-web/./src/components/Button/index.ts","webpack://potioncraft-crucible-web/./src/components/ColorButton/ColorButton.tsx","webpack://potioncraft-crucible-web/./src/components/ColorButton/index.ts","webpack://potioncraft-crucible-web/./src/components/CommitTextArea.tsx","webpack://potioncraft-crucible-web/./src/components/CommitTextBox.tsx","webpack://potioncraft-crucible-web/./src/components/DefaultTitlebarContent.tsx","webpack://potioncraft-crucible-web/./src/components/Divider/Divider.tsx","webpack://potioncraft-crucible-web/./src/components/Divider/index.ts","webpack://potioncraft-crucible-web/./src/components/EnsurePackageLoaded.tsx","webpack://potioncraft-crucible-web/./src/components/FieldBox/FieldBox.tsx","webpack://potioncraft-crucible-web/./src/components/FieldBox/index.ts","webpack://potioncraft-crucible-web/./src/components/Flow/Flow.tsx","webpack://potioncraft-crucible-web/./src/components/Flow/index.ts","webpack://potioncraft-crucible-web/./src/components/ImageField/ImageField.tsx","webpack://potioncraft-crucible-web/./src/components/ImageField/index.ts","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/MapEditorToolBar.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/components/BonesDropButton.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/components/EntitiesDropButton/EntitiesDropButton.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/components/EntitiesDropButton/EntitiesDropList.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/components/EntitiesDropButton/index.ts","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/components/PotionEffectsDropButton.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/components/VortexesDropButton.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditorToolbar/index.ts","webpack://potioncraft-crucible-web/./src/components/MapEditor/MapEditor.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/DragPreview/DragPreview.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/DragPreview/index.ts","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/MapCanvas.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/MapWidgets/MapWidgets.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/MapWidgets/index.ts","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/PanZoomHandler/PanZoomHandler.tsx","webpack://potioncraft-crucible-web/./src/components/MapEditor/components/PanZoomHandler/index.ts","webpack://potioncraft-crucible-web/./src/components/MapEditor/index.ts","webpack://potioncraft-crucible-web/./src/components/MapEditor/keymap.ts","webpack://potioncraft-crucible-web/./src/components/Menus/DividerMenuItem.tsx","webpack://potioncraft-crucible-web/./src/components/Menus/Menu.tsx","webpack://potioncraft-crucible-web/./src/components/Menus/MenuCloseContext.tsx","webpack://potioncraft-crucible-web/./src/components/Menus/MenuItem.tsx","webpack://potioncraft-crucible-web/./src/components/Menus/SubMenuItem.tsx","webpack://potioncraft-crucible-web/./src/components/Modal/Modal.tsx","webpack://potioncraft-crucible-web/./src/components/Modal/index.ts","webpack://potioncraft-crucible-web/./src/components/PackageContentTree.tsx","webpack://potioncraft-crucible-web/./src/components/PackageMenuButton.tsx","webpack://potioncraft-crucible-web/./src/components/Page/Page.tsx","webpack://potioncraft-crucible-web/./src/components/Page/index.ts","webpack://potioncraft-crucible-web/./src/components/Popper/Popper.tsx","webpack://potioncraft-crucible-web/./src/components/Popper/PopperChildContext.tsx","webpack://potioncraft-crucible-web/./src/components/Popper/index.ts","webpack://potioncraft-crucible-web/./src/components/TextArea/TextArea.tsx","webpack://potioncraft-crucible-web/./src/components/TextArea/index.ts","webpack://potioncraft-crucible-web/./src/components/TextBox/TextBox.tsx","webpack://potioncraft-crucible-web/./src/components/TextBox/index.ts","webpack://potioncraft-crucible-web/./src/components/TitleBar/TitleBar.tsx","webpack://potioncraft-crucible-web/./src/components/TitleBar/index.ts","webpack://potioncraft-crucible-web/./src/components/Tooltip/Tooltip.tsx","webpack://potioncraft-crucible-web/./src/components/Tree/LinkTreeItem.tsx","webpack://potioncraft-crucible-web/./src/components/Tree/Tree.tsx","webpack://potioncraft-crucible-web/./src/components/Tree/TreeChildContext.tsx","webpack://potioncraft-crucible-web/./src/components/Tree/TreeItem.tsx","webpack://potioncraft-crucible-web/./src/drag-items/new-entity.ts","webpack://potioncraft-crucible-web/./src/entities/consts.ts","webpack://potioncraft-crucible-web/./src/entities/defs/DangerZonePart/DangerZonePart.ts","webpack://potioncraft-crucible-web/./src/entities/defs/DangerZonePart/index.ts","webpack://potioncraft-crucible-web/./src/entities/defs/ExperienceBonus.ts","webpack://potioncraft-crucible-web/./src/entities/defs/PotionEffect.ts","webpack://potioncraft-crucible-web/./src/entities/defs/Vortex.ts","webpack://potioncraft-crucible-web/./src/entities/defs/index.ts","webpack://potioncraft-crucible-web/./src/entities/index.ts","webpack://potioncraft-crucible-web/./src/entities/tiles/index.ts","webpack://potioncraft-crucible-web/./src/fp-set.ts","webpack://potioncraft-crucible-web/./src/geometry.ts","webpack://potioncraft-crucible-web/./src/history.ts","webpack://potioncraft-crucible-web/./src/hooks/use-action.ts","webpack://potioncraft-crucible-web/./src/hooks/use-array-state.ts","webpack://potioncraft-crucible-web/./src/hooks/use-boolean-state.ts","webpack://potioncraft-crucible-web/./src/hooks/use-component-bounds.ts","webpack://potioncraft-crucible-web/./src/hooks/use-native-event.ts","webpack://potioncraft-crucible-web/./src/hooks/use-outside-mouse-event.ts","webpack://potioncraft-crucible-web/./src/hooks/use-selector.ts","webpack://potioncraft-crucible-web/./src/index.tsx","webpack://potioncraft-crucible-web/./src/link-utils.ts","webpack://potioncraft-crucible-web/./src/map-templates/index.ts","webpack://potioncraft-crucible-web/./src/modifier-keys.ts","webpack://potioncraft-crucible-web/./src/pages/home/HomePage.tsx","webpack://potioncraft-crucible-web/./src/pages/home/index.ts","webpack://potioncraft-crucible-web/./src/pages/home/views/LoadErrorView.tsx","webpack://potioncraft-crucible-web/./src/pages/home/views/LoadingPackageView.tsx","webpack://potioncraft-crucible-web/./src/pages/home/views/NoPackageView/NoPackageView.tsx","webpack://potioncraft-crucible-web/./src/pages/home/views/NoPackageView/index.ts","webpack://potioncraft-crucible-web/./src/pages/home/views/PackageView/PackageView.tsx","webpack://potioncraft-crucible-web/./src/pages/home/views/PackageView/index.ts","webpack://potioncraft-crucible-web/./src/pages/ingredients-list/IngredientsListPage.tsx","webpack://potioncraft-crucible-web/./src/pages/ingredients-list/index.ts","webpack://potioncraft-crucible-web/./src/pages/potionbase-list/PotionBaseListPage.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase-list/index.ts","webpack://potioncraft-crucible-web/./src/pages/potionbase-mapeditor/PotionBaseMapEditorPage.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase-mapeditor/components/MapMenuButton.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase-mapeditor/components/MapWindow/MapWindow.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase-mapeditor/components/MapWindow/index.ts","webpack://potioncraft-crucible-web/./src/pages/potionbase-mapeditor/index.ts","webpack://potioncraft-crucible-web/./src/pages/potionbase/PotionBasePage.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseColor/PotionBaseColor.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseColor/index.ts","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseDescription/PotionBaseDescription.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseIcons/PotionBaseIcons.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseName/PotionBaseName.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase/components/PotionBaseTooltipImage/PotionBaseTooltipImage.tsx","webpack://potioncraft-crucible-web/./src/pages/potionbase/index.ts","webpack://potioncraft-crucible-web/./src/pages/potioneffect-list/PotionEffectListPage.tsx","webpack://potioncraft-crucible-web/./src/pages/potioneffect-list/index.ts","webpack://potioncraft-crucible-web/./src/pages/potioneffect/PotionEffectPage.tsx","webpack://potioncraft-crucible-web/./src/pages/potioneffect/components/PotionEffectColor/PotionEffectColor.tsx","webpack://potioncraft-crucible-web/./src/pages/potioneffect/components/PotionEffectColor/index.ts","webpack://potioncraft-crucible-web/./src/pages/potioneffect/components/PotionEffectIcon.tsx","webpack://potioncraft-crucible-web/./src/pages/potioneffect/components/PotionEffectName.tsx","webpack://potioncraft-crucible-web/./src/pages/potioneffect/index.ts","webpack://potioncraft-crucible-web/./src/paths.ts","webpack://potioncraft-crucible-web/./src/reducer/index.ts","webpack://potioncraft-crucible-web/./src/reducer/priorities.ts","webpack://potioncraft-crucible-web/./src/reducer/utils.ts","webpack://potioncraft-crucible-web/./src/root.tsx","webpack://potioncraft-crucible-web/./src/routes.tsx","webpack://potioncraft-crucible-web/./src/runtime-env.ts","webpack://potioncraft-crucible-web/./src/selection-mode.ts","webpack://potioncraft-crucible-web/./src/services/commit-queue/saga/commit-queue.ts","webpack://potioncraft-crucible-web/./src/services/commit-queue/saga/index.ts","webpack://potioncraft-crucible-web/./src/services/i18n/components/I18NProvider.tsx","webpack://potioncraft-crucible-web/./src/services/i18n/i18n.ts","webpack://potioncraft-crucible-web/./src/services/i18n/persist.ts","webpack://potioncraft-crucible-web/./src/services/i18n/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/i18n/reducer/set-language.ts","webpack://potioncraft-crucible-web/./src/services/i18n/selectors/language.ts","webpack://potioncraft-crucible-web/./src/services/i18n/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/i18n/state.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/editor-rendered.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/editor-viewport.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/entity-delete.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/entity-insert.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/entity-offset.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/entity-prototype-instantiate.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/map-clear.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/map-import-template.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/map-receive.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/select-clear.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/reducer/select-entity.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/selector/damage.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/damage/state.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/reducer/entity-delete.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/reducer/entity-insert.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/reducer/entity-offset.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/reducer/map-clear.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/reducer/map-import-template.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/reducer/map-receive.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/reducer/prototype-instantiate.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/regions.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/selectors/entities.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/selectors/prototypes.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/selectors/render-resources.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/entities/state.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/reducer/modifierkeys-changed.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/reducer/mouse-down.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/reducer/mouse-move.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/reducer/mouse-out.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/reducer/mouse-up.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/reducer/tool-radius-set.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/reducer/tool-set.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/selectors/drag-move.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/selectors/drag-select.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/selectors/tools.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/selectors/viewport.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/selectors/world-coords.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/mouse/state.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/reducer/mapeditor-map-edit.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/reducer/package-new.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/reducer/package-receive.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/saga/editor-commit.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/saga/index.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/saga/map-modify.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/saga/mapeditor-map-edit.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selection/reducer/entity-delete.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selection/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selection/reducer/select-clear.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selection/reducer/select-entity.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selection/reducer/selection-delete.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selection/selectors/selection.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selection/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selection/state.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/selectors.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/state.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/hooks/use-client-to-world.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/reducer/pan.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/reducer/viewport-resize.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/reducer/zoom.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/selectors/coordinate-mapping.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/selectors/view.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/selectors/viewport.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/state.ts","webpack://potioncraft-crucible-web/./src/services/map-editor/view/utils.ts","webpack://potioncraft-crucible-web/./src/services/navigation/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/navigation/reducer/navtree-expanded-set.ts","webpack://potioncraft-crucible-web/./src/services/navigation/selectors.ts","webpack://potioncraft-crucible-web/./src/services/navigation/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/navigation/state.ts","webpack://potioncraft-crucible-web/./src/services/package/hooks/use-load-package.ts","webpack://potioncraft-crucible-web/./src/services/package/hooks/use-potionbase-resource.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/index.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/package-data-set-byid.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/package-data-set.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/package-idobject-new.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/package-load-error.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/package-load-file.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/package-new.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/package-receive.ts","webpack://potioncraft-crucible-web/./src/services/package/reducer/package-resource-set-byid.ts","webpack://potioncraft-crucible-web/./src/services/package/saga/index.ts","webpack://potioncraft-crucible-web/./src/services/package/saga/package-load-file.ts","webpack://potioncraft-crucible-web/./src/services/package/saga/package-save.ts","webpack://potioncraft-crucible-web/./src/services/package/selectors/package.ts","webpack://potioncraft-crucible-web/./src/services/package/selectors/resources.ts","webpack://potioncraft-crucible-web/./src/services/package/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/package/state.ts","webpack://potioncraft-crucible-web/./src/services/reducer.ts","webpack://potioncraft-crucible-web/./src/services/saga.ts","webpack://potioncraft-crucible-web/./src/services/state-utils.ts","webpack://potioncraft-crucible-web/./src/services/state.ts","webpack://potioncraft-crucible-web/./src/services/yaml/api.ts","webpack://potioncraft-crucible-web/./src/state/index.ts","webpack://potioncraft-crucible-web/./src/state/utils.ts","webpack://potioncraft-crucible-web/./src/store/components/StoreProvider.tsx","webpack://potioncraft-crucible-web/./src/store/devtool-sanitizer.ts","webpack://potioncraft-crucible-web/./src/store/persist.ts","webpack://potioncraft-crucible-web/./src/store/saga.ts","webpack://potioncraft-crucible-web/./src/store/store.ts","webpack://potioncraft-crucible-web/./src/styles/index.ts","webpack://potioncraft-crucible-web/./src/text-encoding.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button--AisLs\",\"disabled\":\"disabled--v8v84\",\"button--size-small\":\"button--size-small--LL1uc\",\"button--variant-primary\":\"button--variant-primary--2NXnj\",\"button--variant-default\":\"button--variant-default--DXnZG\",\"button--variant-text\":\"button--variant-text--W2TEX\",\"button--variant-menu\":\"button--variant-menu--aFzH4\"};","// extracted by mini-css-extract-plugin\nexport default {\"colorbutton-svg\":\"colorbutton-svg--nh4hD\"};","// extracted by mini-css-extract-plugin\nexport default {\"divider\":\"divider--lKbkM\",\"divider--horizontal\":\"divider--horizontal--B2Vr8\",\"divider--vertical\":\"divider--vertical--lwqfu\",\"divider-line\":\"divider-line--DfWwB\"};","// extracted by mini-css-extract-plugin\nexport default {\"fieldbox\":\"fieldbox--rmVj8\",\"fieldbox-label\":\"fieldbox-label--pny0n\",\"fieldbox-content\":\"fieldbox-content--BKQJp\"};","// extracted by mini-css-extract-plugin\nexport default {\"flow--vertical\":\"flow--vertical--REOIz\"};","// extracted by mini-css-extract-plugin\nexport default {\"imagefield\":\"imagefield--mO_g5\",\"imagefield-upload\":\"imagefield-upload--HqT6h\",\"imagefield--has-image\":\"imagefield--has-image--tq1HW\",\"imagefield-image-container\":\"imagefield-image-container--Ox1pi\"};","// extracted by mini-css-extract-plugin\nexport default {\"map-toolbar\":\"map-toolbar--I9E7w\",\"map-toolbar-entities\":\"map-toolbar-entities--On_Rc\"};","// extracted by mini-css-extract-plugin\nexport default {\"entities-drop-button\":\"entities-drop-button--UK6Mc\",\"entities-drop-list\":\"entities-drop-list--e8Odv\",\"entities-drop-list-item\":\"entities-drop-list-item--ueJbI\"};","// extracted by mini-css-extract-plugin\nexport default {\"map-editor\":\"map-editor--kUf0l\",\"hotkeys-container\":\"hotkeys-container--SGx4q\",\"map-editor-container\":\"map-editor-container--TqInP\",\"map-editor-item\":\"map-editor-item--zUxb3\"};","// extracted by mini-css-extract-plugin\nexport default {\"drag-preview\":\"drag-preview--FZPs4\"};","// extracted by mini-css-extract-plugin\nexport default {\"map-canvas\":\"map-canvas--v5nim\"};","// extracted by mini-css-extract-plugin\nexport default {\"map-widgets\":\"map-widgets--oakLP\"};","// extracted by mini-css-extract-plugin\nexport default {\"pan-zoom-handler\":\"pan-zoom-handler--afGPu\"};","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"menu--TLS_C\",\"menu-item\":\"menu-item--TCx3P\",\"menu-item--disabled\":\"menu-item--disabled--scw6v\",\"menu-item-content\":\"menu-item-content--oAHNE\",\"menu-item-text\":\"menu-item-text--ypKRN\",\"menu-item-secondary\":\"menu-item-secondary--RZxVA\",\"menu-item-icon\":\"menu-item-icon--VLMV_\",\"menu-divider\":\"menu-divider--B1Pmy\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal--hTXcZ\",\"modal-content\":\"modal-content--CRmm7\",\"modal-autofocus\":\"modal-autofocus--ibvEW\"};","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"page--LVMNK\",\"page-content\":\"page-content--m0AM_\",\"package-content\":\"package-content--TH1h2\"};","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"textarea--akhKg\",\"textarea-edge-left\":\"textarea-edge-left--Bbone\",\"textarea-edge-right\":\"textarea-edge-right--iVFwW\",\"textarea-wrapper\":\"textarea-wrapper--LNJqP\",\"textarea-input\":\"textarea-input--A7Nah\"};","// extracted by mini-css-extract-plugin\nexport default {\"textbox-input\":\"textbox-input--u9Oc8\"};","// extracted by mini-css-extract-plugin\nexport default {\"titlebar\":\"titlebar--iQnDM\",\"titlebar-heading\":\"titlebar-heading--CKvDN\",\"titlebar-divider\":\"titlebar-divider--K1ZmQ\",\"titlebar-title\":\"titlebar-title--tRYGh\"};","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip--Km6UU\",\"tooltip-arrow\":\"tooltip-arrow--YCNPE\"};","// extracted by mini-css-extract-plugin\nexport default {\"tree\":\"tree--bfK4V\",\"tree-item\":\"tree-item--uHp4J\",\"tree-item-chevron\":\"tree-item-chevron--NYlbP\",\"tree-item-nochevron\":\"tree-item-nochevron--pp5pJ\",\"tree-item-content\":\"tree-item-content--P2OzT\",\"tree-item-content--selected\":\"tree-item-content--selected--NHhZr\",\"tree-item-label\":\"tree-item-label--NR835\",\"tree-item-children\":\"tree-item-children--gPKj0\"};","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"text--EnZYC\"};","// extracted by mini-css-extract-plugin\nexport default {\"package-editor-content\":\"package-editor-content--9h2wd\",\"package-editor-field\":\"package-editor-field--QEYLj\"};","// extracted by mini-css-extract-plugin\nexport default {\"map-window-container\":\"map-window-container--vwVI2\",\"map-window-editor\":\"map-window-editor--K747t\",\"map-window-toolbar\":\"map-window-toolbar--c5f47\"};","// extracted by mini-css-extract-plugin\nexport default {\"potionbase-editor-content\":\"potionbase-editor-content--l6JRm\",\"potionbase-editor-panels\":\"potionbase-editor-panels--uLTYu\",\"potionbase-editor-left\":\"potionbase-editor-left--hL7kw\",\"potionbase-editor-right\":\"potionbase-editor-right--adMKQ\",\"potion-editor-settings\":\"potion-editor-settings--P9tJt\",\"potion-editor-icons\":\"potion-editor-icons--gtVC0\"};","// extracted by mini-css-extract-plugin\nexport default {\"potionbase-liquidcolor\":\"potionbase-liquidcolor--caDp5\"};","// extracted by mini-css-extract-plugin\nexport default {\"potionbasedescription\":\"potionbasedescription--vED2n\",\"potionbasedescription-input\":\"potionbasedescription-input--stzBi\"};","// extracted by mini-css-extract-plugin\nexport default {\"potionbaseicons\":\"potionbaseicons--TNKqO\",\"potionbaseicons-imagefield\":\"potionbaseicons-imagefield--jGVji\",\"potionbaseicons-imagetext\":\"potionbaseicons-imagetext--OAnBt\"};","// extracted by mini-css-extract-plugin\nexport default {\"potionbasename-input\":\"potionbasename-input--CV82N\"};","// extracted by mini-css-extract-plugin\nexport default {\"potionbasetooltipimage\":\"potionbasetooltipimage--DrlVG\"};","// extracted by mini-css-extract-plugin\nexport default {\"potioneffect-content\":\"potioneffect-content--bh_6r\"};","// extracted by mini-css-extract-plugin\nexport default {\"potioncolor-button\":\"potioncolor-button--MhxPN\"};","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_EDITOR_COMMIT_QUEUE = \"editor-commit-queue\" as const;\r\nexport const editorCommitQueue = () => ({\r\n  type: ACTION_EDITOR_COMMIT_QUEUE,\r\n});\r\nexport type EditorCommitQueueAction = ReturnType<typeof editorCommitQueue>;\r\nexport function isEditorCommitQueueAction(\r\n  action: AnyAction\r\n): action is EditorCommitQueueAction {\r\n  return action.type === ACTION_EDITOR_COMMIT_QUEUE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_EDITOR_COMMIT = \"editor-commit\" as const;\r\nexport const editorCommit = () => ({\r\n  type: ACTION_EDITOR_COMMIT,\r\n});\r\n\r\nexport type EditorCommitAction = ReturnType<typeof editorCommit>;\r\nexport function isEditorCommitAction(\r\n  action: AnyAction\r\n): action is EditorCommitAction {\r\n  return action.type === ACTION_EDITOR_COMMIT;\r\n}\r\n","export const ACTION_INITIALIZE = \"@initialize\" as const;\r\nexport const initialize = () => ({\r\n  type: ACTION_INITIALIZE,\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\n\r\nexport const ACTION_MAPEDITOR_ENTITY_DELETE =\r\n  \"mapeditor-entity-delete\" as const;\r\nexport const mapEditorEntityDelete = (entityKeys: MaybeArray<string>) => ({\r\n  type: ACTION_MAPEDITOR_ENTITY_DELETE,\r\n  payload: {\r\n    entityKeys: asArray(entityKeys),\r\n  },\r\n});\r\nexport type MapEditorEntityDeleteAction = ReturnType<\r\n  typeof mapEditorEntityDelete\r\n>;\r\nexport function isMapEditorEntityDeleteAction(\r\n  action: AnyAction\r\n): action is MapEditorEntityDeleteAction {\r\n  return action.type === ACTION_MAPEDITOR_ENTITY_DELETE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport mapKeys from \"lodash/mapKeys\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\nimport { MapEntity } from \"@/map-config\";\r\n\r\nexport const ACTION_MAPEDITOR_ENTITY_INSERT = \"mapeditor-entity-insert\";\r\nexport const mapEditorEntityInsert = (entity: MaybeArray<MapEntity>) => ({\r\n  type: ACTION_MAPEDITOR_ENTITY_INSERT,\r\n  payload: { entities: mapKeys(asArray(entity), (x) => uuidV4()) },\r\n});\r\nexport type MapEditorEntityInsertAction = ReturnType<\r\n  typeof mapEditorEntityInsert\r\n>;\r\nexport function isMapEditorEntityInsertAction(\r\n  action: AnyAction\r\n): action is MapEditorEntityInsertAction {\r\n  return action.type === ACTION_MAPEDITOR_ENTITY_INSERT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\n\r\nexport const ACTION_MAPEDITOR_ENTITY_OFFSET =\r\n  \"mapeditor-entity-offset\" as const;\r\nexport const mapEditorEntityOffset = (\r\n  entityKeys: MaybeArray<string>,\r\n  offsetX: number,\r\n  offsetY: number\r\n) => ({\r\n  type: ACTION_MAPEDITOR_ENTITY_OFFSET,\r\n  payload: {\r\n    entityKeys: asArray(entityKeys),\r\n    offsetX,\r\n    offsetY,\r\n  },\r\n});\r\nexport type MapEditorEntityOffsetAction = ReturnType<\r\n  typeof mapEditorEntityOffset\r\n>;\r\nexport function isMapEditorEntityOffsetAction(\r\n  action: AnyAction\r\n): action is MapEditorEntityOffsetAction {\r\n  return action.type === ACTION_MAPEDITOR_ENTITY_OFFSET;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { MapEntityPrototype } from \"@/map-config\";\r\n\r\nexport const ACTION_MAPEDITOR_ENTITY_PROTOTYPE_INSTANTIATE =\r\n  \"mapeditor-prototype-instantiate\" as const;\r\nexport const mapEditorEntityPrototypeInstantiate = (\r\n  prototype: MapEntityPrototype,\r\n  worldPos: Point\r\n) => ({\r\n  type: ACTION_MAPEDITOR_ENTITY_PROTOTYPE_INSTANTIATE,\r\n  payload: { prototype, worldPos, entityKey: uuidV4() },\r\n});\r\nexport type MapEditorEntityPrototypeInstantiateAction = ReturnType<\r\n  typeof mapEditorEntityPrototypeInstantiate\r\n>;\r\nexport function isMapEditorEntityPrototypeInstantiateAction(\r\n  action: AnyAction\r\n): action is MapEditorEntityPrototypeInstantiateAction {\r\n  return action.type === ACTION_MAPEDITOR_ENTITY_PROTOTYPE_INSTANTIATE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_MAP_CLEAR = \"mapeditor-map-clear\" as const;\r\nexport const mapEditorMapClear = () => ({\r\n  type: ACTION_MAPEDITOR_MAP_CLEAR,\r\n});\r\nexport type MapEditorMapClearAction = ReturnType<typeof mapEditorMapClear>;\r\nexport function isMapEditorMapClearAction(\r\n  action: AnyAction\r\n): action is MapEditorMapClearAction {\r\n  return action.type === ACTION_MAPEDITOR_MAP_CLEAR;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { TemplatesByName } from \"@/map-templates\";\r\n\r\nexport const ACTION_MAPEDITOR_MAP_IMPORT_TEMPLATE =\r\n  \"mapeditor-map-import-template\" as const;\r\nexport const mapEditorMapImportTemplate = (\r\n  templateId: keyof typeof TemplatesByName\r\n) => ({\r\n  type: ACTION_MAPEDITOR_MAP_IMPORT_TEMPLATE,\r\n  payload: {\r\n    templateId,\r\n  },\r\n});\r\nexport type MapEditorMapImportTemplateAction = ReturnType<\r\n  typeof mapEditorMapImportTemplate\r\n>;\r\nexport function isMapEditorMapImportTemplateAction(\r\n  action: AnyAction\r\n): action is MapEditorMapImportTemplateAction {\r\n  return action.type === ACTION_MAPEDITOR_MAP_IMPORT_TEMPLATE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { MapEntity } from \"@/map-config\";\r\n\r\nexport const ACTION_MAPEDITOR_MAP_RECEIVE = \"mapeditor-map-receive\" as const;\r\nexport const mapEditorMapReceive = (entities: MapEntity[]) => ({\r\n  type: ACTION_MAPEDITOR_MAP_RECEIVE,\r\n  payload: { entities },\r\n});\r\nexport type MapEditorMapReceiveAction = ReturnType<typeof mapEditorMapReceive>;\r\nexport function isMapEditorMapReceiveAction(\r\n  action: AnyAction\r\n): action is MapEditorMapReceiveAction {\r\n  return action.type === ACTION_MAPEDITOR_MAP_RECEIVE;\r\n}\r\n","import { ModifierKeys } from \"@/modifier-keys\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_MODIFIERKEYS_CHANGED =\r\n  \"mapeditor-modifierkeys-changed\" as const;\r\nexport const mapEditorModifierKeysChanged = (modifiers: ModifierKeys) => ({\r\n  type: ACTION_MAPEDITOR_MODIFIERKEYS_CHANGED,\r\n  payload: { modifiers },\r\n});\r\nexport type MapEditorModifierKeysChangedAction = ReturnType<\r\n  typeof mapEditorModifierKeysChanged\r\n>;\r\nexport function isMapEditorModifierKeysChangedAction(\r\n  action: AnyAction\r\n): action is MapEditorModifierKeysChangedAction {\r\n  return action.type === ACTION_MAPEDITOR_MODIFIERKEYS_CHANGED;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nexport const ACTION_MAPEDITOR_MOUSE_DOWN = \"mapeditor-mouse-down\" as const;\r\nexport const mapEditorMouseDown = (\r\n  viewportPos: Point,\r\n  modifierKeys: ModifierKeys\r\n) => ({\r\n  type: ACTION_MAPEDITOR_MOUSE_DOWN,\r\n  payload: { viewportPos, modifierKeys },\r\n});\r\nexport type MapEditorMouseDownAction = ReturnType<typeof mapEditorMouseDown>;\r\nexport function isMapEditorMouseDownAction(\r\n  action: AnyAction\r\n): action is MapEditorMouseDownAction {\r\n  return action.type === ACTION_MAPEDITOR_MOUSE_DOWN;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nexport const ACTION_MAPEDITOR_MOUSE_MOVE = \"mapeditor-mouse-move\" as const;\r\nexport const mapEditorMouseMove = (\r\n  viewportPos: Point,\r\n  modifierKeys: ModifierKeys\r\n) => ({\r\n  type: ACTION_MAPEDITOR_MOUSE_MOVE,\r\n  payload: { viewportPos, modifierKeys },\r\n});\r\nexport type MapEditorMouseMoveAction = ReturnType<typeof mapEditorMouseMove>;\r\nexport function isMapEditorMouseMoveAction(\r\n  action: AnyAction\r\n): action is MapEditorMouseMoveAction {\r\n  return action.type === ACTION_MAPEDITOR_MOUSE_MOVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_MOUSE_OUT = \"mapeditor-mouse-out\" as const;\r\nexport const mapEditorMouseOut = () => ({\r\n  type: ACTION_MAPEDITOR_MOUSE_OUT,\r\n});\r\nexport type MapEditorMouseOutAction = ReturnType<typeof mapEditorMouseOut>;\r\nexport function isMapEditorMouseOutAction(\r\n  action: AnyAction\r\n): action is MapEditorMouseOutAction {\r\n  return action.type === ACTION_MAPEDITOR_MOUSE_OUT;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { Point } from \"@/geometry\";\r\nimport { ModifierKeys } from \"@/modifier-keys\";\r\n\r\nexport const ACTION_MAPEDITOR_MOUSE_UP = \"mapeditor-mouse-up\" as const;\r\nexport const mapEditorMouseUp = (\r\n  viewportPos: Point,\r\n  modifierKeys: ModifierKeys\r\n) => ({\r\n  type: ACTION_MAPEDITOR_MOUSE_UP,\r\n  payload: { viewportPos, modifierKeys },\r\n});\r\nexport type MapEditorMouseUpAction = ReturnType<typeof mapEditorMouseUp>;\r\nexport function isMapEditorMouseUpAction(\r\n  action: AnyAction\r\n): action is MapEditorMouseUpAction {\r\n  return action.type === ACTION_MAPEDITOR_MOUSE_UP;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_PAN = \"mapeditor-pan\" as const;\r\nexport const mapEditorPan = (xOffset: number, yOffset: number) => ({\r\n  type: ACTION_MAPEDITOR_PAN,\r\n  payload: { x: xOffset, y: yOffset },\r\n});\r\nexport type MapEditorPanAction = ReturnType<typeof mapEditorPan>;\r\nexport function isMapEditorPanAction(\r\n  action: AnyAction\r\n): action is MapEditorPanAction {\r\n  return action.type === ACTION_MAPEDITOR_PAN;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_RENDERED = \"mapeditor-rendered\" as const;\r\nexport const mapEditorRendered = () => ({\r\n  type: ACTION_MAPEDITOR_RENDERED,\r\n});\r\nexport function isMapEditorRenderedAction(action: AnyAction): boolean {\r\n  return action.type === ACTION_MAPEDITOR_RENDERED;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_SELECT_CLEAR = \"mapeditor-select-clear\" as const;\r\nexport const mapEditorSelectClear = () => ({\r\n  type: ACTION_MAPEDITOR_SELECT_CLEAR,\r\n});\r\nexport type MapEditorSelectClearAction = ReturnType<\r\n  typeof mapEditorSelectClear\r\n>;\r\nexport function isMapEditorSelectClearAction(\r\n  action: AnyAction\r\n): action is MapEditorSelectClearAction {\r\n  return action.type === ACTION_MAPEDITOR_SELECT_CLEAR;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\nimport { SelectionMode } from \"@/selection-mode\";\r\n\r\nexport const ACTION_MAPEDITOR_SELECT_ENTITY =\r\n  \"mapeditor-select-entity\" as const;\r\nexport const mapEditorSelectEntity = (\r\n  entityKeys: MaybeArray<string>,\r\n  mode: SelectionMode = \"set\"\r\n) => ({\r\n  type: ACTION_MAPEDITOR_SELECT_ENTITY,\r\n  payload: { entityKeys: asArray(entityKeys), mode },\r\n});\r\nexport type MapEditorSelectEntityAction = ReturnType<\r\n  typeof mapEditorSelectEntity\r\n>;\r\nexport function isMapEditorSelectEntityAction(\r\n  action: AnyAction\r\n): action is MapEditorSelectEntityAction {\r\n  return action.type === ACTION_MAPEDITOR_SELECT_ENTITY;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_SELECTION_DELETE =\r\n  \"mapeditor-selection-delete\" as const;\r\nexport const mapEditorSelectionDelete = () => ({\r\n  type: ACTION_MAPEDITOR_SELECTION_DELETE,\r\n});\r\nexport type MapEditorSelectionDeleteAction = ReturnType<\r\n  typeof mapEditorSelectionDelete\r\n>;\r\nexport function isMapEditorSelectionDeleteAction(\r\n  action: AnyAction\r\n): action is MapEditorSelectionDeleteAction {\r\n  return action.type === ACTION_MAPEDITOR_SELECTION_DELETE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_TOOL_RADIUS_SET =\r\n  \"mapeditor-tool-radius-set\" as const;\r\nexport const mapEditorToolRadiusSet = (radius: number) => ({\r\n  type: ACTION_MAPEDITOR_TOOL_RADIUS_SET,\r\n  payload: { radius },\r\n});\r\nexport type MapEditorToolRadiusSetAction = ReturnType<\r\n  typeof mapEditorToolRadiusSet\r\n>;\r\nexport function isMapEditorToolRadiusSetAction(\r\n  action: AnyAction\r\n): action is MapEditorToolRadiusSetAction {\r\n  return action.type === ACTION_MAPEDITOR_TOOL_RADIUS_SET;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { EditorMouseTool } from \"@/services/map-editor/mouse/state\";\r\n\r\nexport const ACTION_MAPEDITOR_TOOL_SET = \"mapeditor-tool-set\" as const;\r\nexport const mapEditorToolSet = (tool: EditorMouseTool) => ({\r\n  type: ACTION_MAPEDITOR_TOOL_SET,\r\n  payload: { tool },\r\n});\r\nexport type MapEditorToolSetAction = ReturnType<typeof mapEditorToolSet>;\r\nexport function isMapEditorToolSetAction(\r\n  action: AnyAction\r\n): action is MapEditorToolSetAction {\r\n  return action.type === ACTION_MAPEDITOR_TOOL_SET;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_VIEWPORT_RESIZE =\r\n  \"mapeditor-viewport-resize\" as const;\r\nexport const mapEditorViewportResize = (width: number, height: number) => ({\r\n  type: ACTION_MAPEDITOR_VIEWPORT_RESIZE,\r\n  payload: { width, height },\r\n});\r\nexport type MapEditorViewportResizeAction = ReturnType<\r\n  typeof mapEditorViewportResize\r\n>;\r\nexport function isMapEditorViewportResizeAction(\r\n  action: AnyAction\r\n): action is MapEditorViewportResizeAction {\r\n  return action.type === ACTION_MAPEDITOR_VIEWPORT_RESIZE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_MAPEDITOR_ZOOM = \"mapeditor-zoom\" as const;\r\nexport const mapEditorZoom = (zoomFactor: number) => ({\r\n  type: ACTION_MAPEDITOR_ZOOM,\r\n  payload: { zoomFactor },\r\n});\r\nexport type MapEditorZoomAction = ReturnType<typeof mapEditorZoom>;\r\nexport function isMapEditorZoomAction(\r\n  action: AnyAction\r\n): action is MapEditorZoomAction {\r\n  return action.type === ACTION_MAPEDITOR_ZOOM;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_NAVTREE_EXPANDEDVALUES_SET =\r\n  \"navtree-expandedvalues-set\" as const;\r\nexport const navtreeExpandedValuesSet = (expandedValues: string[]) => ({\r\n  type: ACTION_NAVTREE_EXPANDEDVALUES_SET,\r\n  payload: { expandedValues },\r\n});\r\nexport type NavtreeExpandedValuesSetAction = ReturnType<\r\n  typeof navtreeExpandedValuesSet\r\n>;\r\nexport function isNavtreeExpandedValuesSetAction(\r\n  action: AnyAction\r\n): action is NavtreeExpandedValuesSetAction {\r\n  return action.type === ACTION_NAVTREE_EXPANDEDVALUES_SET;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport {\r\n  CruciblePackageSectionKey,\r\n  CruciblePackageSections,\r\n} from \"@/services/package/types\";\r\n\r\nexport const ACTION_PACKAGE_DATA_SET_BYID = \"package-data-set-byid\";\r\n\r\nexport function packageDataSetById<\r\n  TSectionKey extends CruciblePackageSectionKey\r\n>(\r\n  sectionKey: TSectionKey,\r\n  id: string,\r\n  data: CruciblePackageSections[TSectionKey][0]\r\n): PackageDataSetByIdAction;\r\nexport function packageDataSetById<\r\n  TSectionKey extends CruciblePackageSectionKey,\r\n  K1 extends keyof CruciblePackageSections[TSectionKey][0]\r\n>(\r\n  sectionKey: TSectionKey,\r\n  id: string,\r\n  k1: K1,\r\n  data: CruciblePackageSections[TSectionKey][0][K1]\r\n): PackageDataSetByIdAction;\r\nexport function packageDataSetById(\r\n  sectionKey: string,\r\n  id: string,\r\n  ...args: string[]\r\n) {\r\n  return {\r\n    type: ACTION_PACKAGE_DATA_SET_BYID,\r\n    payload: {\r\n      sectionKey,\r\n      id,\r\n      path: args.slice(0, args.length - 1),\r\n      data: args[args.length - 1],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface PackageDataSetByIdAction {\r\n  type: typeof ACTION_PACKAGE_DATA_SET_BYID;\r\n  payload: {\r\n    sectionKey: CruciblePackageSectionKey;\r\n    id: string;\r\n    path: string[];\r\n    data: any;\r\n  };\r\n}\r\n\r\nexport function isPackageDataSetByIdAction(\r\n  action: AnyAction\r\n): action is PackageDataSetByIdAction {\r\n  return action.type === ACTION_PACKAGE_DATA_SET_BYID;\r\n}\r\n","import { CruciblePackage } from \"@/services/package/types\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PACKGE_DATA_SET = \"package-data-set\" as const;\r\nexport function packageDataSet<K1 extends keyof CruciblePackage>(\r\n  k1: K1,\r\n  data: CruciblePackage[K1]\r\n): PackageDataSetAction;\r\nexport function packageDataSet<\r\n  K1 extends keyof CruciblePackage,\r\n  K2 extends keyof CruciblePackage[K1]\r\n>(k1: K1, k2: K2, data: CruciblePackage[K1][K2]): PackageDataSetAction;\r\nexport function packageDataSet<\r\n  K1 extends keyof CruciblePackage,\r\n  K2 extends keyof CruciblePackage[K1],\r\n  K3 extends keyof CruciblePackage[K1][K2]\r\n>(\r\n  k1: K1,\r\n  k2: K2,\r\n  k3: K3,\r\n  data: CruciblePackage[K1][K2][K3]\r\n): PackageDataSetAction;\r\nexport function packageDataSet<\r\n  K1 extends keyof CruciblePackage,\r\n  K2 extends keyof CruciblePackage[K1],\r\n  K3 extends keyof CruciblePackage[K1][K2],\r\n  K4 extends keyof CruciblePackage[K1][K2][K3]\r\n>(\r\n  k1: K1,\r\n  k2: K2,\r\n  k3: K3,\r\n  k4: K4,\r\n  data: CruciblePackage[K1][K2][K3][K4]\r\n): PackageDataSetAction;\r\nexport function packageDataSet(...args: any[]): PackageDataSetAction {\r\n  return {\r\n    type: ACTION_PACKGE_DATA_SET,\r\n    payload: {\r\n      path: args.slice(0, args.length - 1),\r\n      data: args[args.length - 1],\r\n    },\r\n  };\r\n}\r\nexport interface PackageDataSetAction {\r\n  type: typeof ACTION_PACKGE_DATA_SET;\r\n  payload: {\r\n    path: string[];\r\n    data: any;\r\n  };\r\n}\r\nexport function isPackageDataSetAction(\r\n  action: AnyAction\r\n): action is PackageDataSetAction {\r\n  return action.type === ACTION_PACKGE_DATA_SET;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { CruciblePackageSectionKey } from \"@/services/package/types\";\r\n\r\nexport const ACTION_PACKAGE_IDOBJECT_NEW = \"package-idobject-new\";\r\nexport const packageIdObjectNew = (\r\n  key: CruciblePackageSectionKey,\r\n  id: string\r\n) => ({\r\n  type: ACTION_PACKAGE_IDOBJECT_NEW,\r\n  payload: { key, id },\r\n});\r\nexport type PackageIdObjectNewAction = ReturnType<typeof packageIdObjectNew>;\r\nexport function isPackageIdObjectNewAction(\r\n  action: AnyAction\r\n): action is PackageIdObjectNewAction {\r\n  return action.type === ACTION_PACKAGE_IDOBJECT_NEW;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACITON_PACKAGE_LOAD_ERROR = \"package-load-error\" as const;\r\nexport const packageLoadError = (errorMessage: string) => ({\r\n  type: ACITON_PACKAGE_LOAD_ERROR,\r\n  payload: { errorMessage },\r\n});\r\nexport type PackageLoadErrorAction = ReturnType<typeof packageLoadError>;\r\nexport function isPackageLoadErrorAction(\r\n  action: AnyAction\r\n): action is PackageLoadErrorAction {\r\n  return action.type === ACITON_PACKAGE_LOAD_ERROR;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PACKAGE_LOAD_FILE = \"package-load-file\" as const;\r\nexport const packageLoadFile = (file: File) => ({\r\n  type: ACTION_PACKAGE_LOAD_FILE,\r\n  payload: { file },\r\n});\r\nexport type PackageLoadFileAction = ReturnType<typeof packageLoadFile>;\r\nexport function isPackageLoadFileAction(\r\n  action: AnyAction\r\n): action is PackageLoadFileAction {\r\n  return action.type === ACTION_PACKAGE_LOAD_FILE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PACKAGE_NEW = \"package-new\" as const;\r\nexport const packageNew = () => ({\r\n  type: ACTION_PACKAGE_NEW,\r\n});\r\nexport type PackageNewAction = ReturnType<typeof packageNew>;\r\nexport function isPackageNewAction(\r\n  action: AnyAction\r\n): action is PackageNewAction {\r\n  return action.type === ACTION_PACKAGE_NEW;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PACKAGE_RECEIVE = \"package-receive\" as const;\r\nexport const packageReceive = (\r\n  packageId: string,\r\n  resources: Record<string, Uint8Array>\r\n) => ({\r\n  type: ACTION_PACKAGE_RECEIVE,\r\n  payload: { packageId, resources },\r\n});\r\nexport type PackageReceiveAction = ReturnType<typeof packageReceive>;\r\nexport function isPackageReceiveAction(\r\n  action: AnyAction\r\n): action is PackageReceiveAction {\r\n  return action.type === ACTION_PACKAGE_RECEIVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport {\r\n  CruciblePackageSectionKey,\r\n  CruciblePackageSections,\r\n} from \"@/services/package/types\";\r\n\r\nexport const ACTION_PACKAGE_RESOURCE_SET_BYID = \"package-resource-set-byid\";\r\n\r\nexport function packageResourceSetById<\r\n  TSectionKey extends CruciblePackageSectionKey,\r\n  K1 extends keyof CruciblePackageSections[TSectionKey][0]\r\n>(\r\n  sectionKey: TSectionKey,\r\n  id: string,\r\n  k1: K1,\r\n  resourceName: string,\r\n  resource: Uint8Array\r\n): PackageResourceSetByIdAction;\r\nexport function packageResourceSetById(\r\n  sectionKey: string,\r\n  id: string,\r\n  ...args: any[]\r\n) {\r\n  return {\r\n    type: ACTION_PACKAGE_RESOURCE_SET_BYID,\r\n    payload: {\r\n      sectionKey,\r\n      id,\r\n      path: args.slice(0, args.length - 2),\r\n      resourceName: args[args.length - 2],\r\n      resource: args[args.length - 1],\r\n    },\r\n  };\r\n}\r\n\r\nexport interface PackageResourceSetByIdAction {\r\n  type: typeof ACTION_PACKAGE_RESOURCE_SET_BYID;\r\n  payload: {\r\n    sectionKey: CruciblePackageSectionKey;\r\n    id: string;\r\n    path: string[];\r\n    resourceName: string;\r\n    resource: Uint8Array;\r\n  };\r\n}\r\n\r\nexport function isPackageResourceSetByIdAction(\r\n  action: AnyAction\r\n): action is PackageResourceSetByIdAction {\r\n  return action.type === ACTION_PACKAGE_RESOURCE_SET_BYID;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_PACKAGE_SAVE = \"package-save\" as const;\r\nexport const packageSave = () => ({\r\n  type: ACTION_PACKAGE_SAVE,\r\n});\r\nexport type PackageSaveAction = ReturnType<typeof packageSave>;\r\nexport function isPackageSaveAction(\r\n  action: AnyAction\r\n): action is PackageSaveAction {\r\n  return action.type === ACTION_PACKAGE_SAVE;\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nexport const ACTION_POTIONBASE_MAP_EDIT = \"potionbase-map-edit\" as const;\r\nexport const potionBaseMapEdit = (potionBaseId: string) => ({\r\n  type: ACTION_POTIONBASE_MAP_EDIT,\r\n  payload: { potionBaseId },\r\n});\r\nexport type PotionBaseMapEditAction = ReturnType<typeof potionBaseMapEdit>;\r\nexport function isPotionBaseMapEditAction(\r\n  action: AnyAction\r\n): action is PotionBaseMapEditAction {\r\n  return action.type === ACTION_POTIONBASE_MAP_EDIT;\r\n}\r\n","export const ACTION_SET_LANGUAGE = \"app/set-language\";\r\nexport const setLanguage = (language: string) => ({\r\n  type: ACTION_SET_LANGUAGE as typeof ACTION_SET_LANGUAGE,\r\n  payload: language\r\n});\r\nexport type SetLanguageAction = ReturnType<typeof setLanguage>;\r\n","export type MaybeArray<T> = T | T[];\r\nexport type ItemOf<T> = T extends Array<infer U> ? U : T;\r\n\r\nexport function asArray<T>(x: MaybeArray<T>): T[] {\r\n  return Array.isArray(x) ? x : [x];\r\n}\r\n\r\nconst _emptyArray = Object.freeze([] as any[]);\r\nexport function emptyFrozenArray<T>(): T[] {\r\n  return _emptyArray as T[];\r\n}\r\n","import { EntityDefsByType } from \"./entities\";\r\nimport { POTION_RADIUS } from \"./entities/consts\";\r\nimport { MapEntity } from \"./map-config\";\r\nimport { RenderResources } from \"./services/map-editor/entities/types\";\r\n\r\nexport function transformToMap(\r\n  ctx: CanvasRenderingContext2D,\r\n  zoomFactor: number,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  handler: () => void\r\n) {\r\n  ctx.save();\r\n  ctx.scale(zoomFactor, zoomFactor);\r\n  ctx.translate(-offsetX + 60, -offsetY + 60);\r\n  ctx.scale(1, -1);\r\n\r\n  handler();\r\n  ctx.restore();\r\n}\r\n\r\nexport function renderPotionStart(ctx: CanvasRenderingContext2D) {\r\n  ctx.beginPath();\r\n  ctx.fillStyle = \"blue\";\r\n  ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n  ctx.fill();\r\n}\r\n\r\nexport function renderEntity(\r\n  ctx: CanvasRenderingContext2D,\r\n  entity: MapEntity,\r\n  isSelected: boolean,\r\n  renderResources: RenderResources\r\n) {\r\n  const type = EntityDefsByType[entity.entityType];\r\n  if (!type) {\r\n    return;\r\n  }\r\n\r\n  ctx.save();\r\n\r\n  ctx.translate(entity.x, entity.y);\r\n  type.render(\r\n    ctx,\r\n    entity,\r\n    (ctx) => {\r\n      if (isSelected) {\r\n        ctx.fillStyle = \"lightblue\";\r\n      }\r\n    },\r\n    renderResources\r\n  );\r\n\r\n  ctx.restore();\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport interface AbstractFileLoadButtonProps {\r\n  disabled?: boolean;\r\n  accept: string;\r\n  onFileLoaded(file: File): void;\r\n  children(props: AbstractLoadButtonRenderProps): React.ReactChild;\r\n  onInteractionComplete?(): void;\r\n}\r\nexport interface AbstractLoadButtonRenderProps {\r\n  disabled: boolean;\r\n  onClick(): void;\r\n}\r\n\r\ntype Props = AbstractFileLoadButtonProps;\r\nconst AbstractFileLoadButton: React.FC<Props> = ({\r\n  disabled = false,\r\n  accept,\r\n  onFileLoaded,\r\n  onInteractionComplete = () => {},\r\n  children,\r\n}) => {\r\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\r\n\r\n  const onClick = React.useCallback(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.click();\r\n    }\r\n  }, [inputRef]);\r\n\r\n  const onFileChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const files = e.target.files;\r\n      if (!files || files.length === 0) {\r\n        onInteractionComplete();\r\n        return;\r\n      }\r\n      const file = files[0];\r\n\r\n      onFileLoaded(file);\r\n      onInteractionComplete();\r\n    },\r\n    [onFileLoaded, onInteractionComplete]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {children({ disabled, onClick })}\r\n      <input\r\n        ref={inputRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept={accept}\r\n        onChange={onFileChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AbstractFileLoadButton;\r\n","import * as React from \"react\";\r\nimport { Options } from \"@popperjs/core\";\r\n\r\nimport Popper from \"./Popper\";\r\nimport { MenuCloseListener } from \"./Menus/MenuCloseContext\";\r\n\r\nexport interface AutoPopperProps {\r\n  content: JSX.Element;\r\n  placement?: Options[\"placement\"];\r\n}\r\n\r\nconst AutoPopper: React.FC<AutoPopperProps> = ({\r\n  content,\r\n  placement,\r\n  children,\r\n}) => {\r\n  const anchorEl = React.useRef<HTMLDivElement | null>(null);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const onClick = React.useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n  const onClose = React.useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <MenuCloseListener onClose={onClose}>\r\n      <div ref={anchorEl} onClick={onClick}>\r\n        {children}\r\n      </div>\r\n      <Popper\r\n        anchorEl={anchorEl.current}\r\n        isOpen={open}\r\n        placement={placement}\r\n        onRequestClose={onClose}\r\n      >\r\n        {open && content}\r\n      </Popper>\r\n    </MenuCloseListener>\r\n  );\r\n};\r\n\r\nexport default AutoPopper;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className?: string;\r\n  variant?: \"default\" | \"primary\" | \"text\" | \"menu\";\r\n  size?: \"default\" | \"small\";\r\n  disabled?: boolean;\r\n}\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  (\r\n    { className, variant = \"default\", size = \"default\", disabled, ...props },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        className={classNames(\r\n          styles[\"button\"],\r\n          (styles as any)[`button--variant-${variant}`],\r\n          (styles as any)[`button--size-${size}`],\r\n          disabled && styles[\"disabled\"],\r\n          className\r\n        )}\r\n        type=\"button\"\r\n        {...props}\r\n      >\r\n        {props.children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\n\r\nexport interface LinkButtonProps\r\n  extends React.AnchorHTMLAttributes<HTMLAnchorElement>,\r\n    LinkProps {\r\n  variant?: \"default\" | \"primary\" | \"text\" | \"menu\";\r\n  size?: \"default\" | \"small\";\r\n}\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst LinkButton = React.forwardRef<HTMLAnchorElement, LinkButtonProps>(\r\n  ({ className, variant = \"default\", size = \"default\", ...props }, ref) => {\r\n    return (\r\n      <Link\r\n        ref={ref}\r\n        className={classNames(\r\n          styles[\"button\"],\r\n          (styles as any)[`button--variant-${variant}`],\r\n          (styles as any)[`button--size-${size}`],\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n);\r\n\r\nexport default LinkButton;\r\n","import Button from \"./Button\";\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport { SketchPicker, ColorResult } from \"react-color\";\r\n\r\nimport Popper from \"../Popper\";\r\n\r\nimport styles from \"./ColorButton.module.css\";\r\n\r\nexport interface ColorButtonProps {\r\n  color: string;\r\n  onChange(color: string): void;\r\n}\r\n\r\nconst ColorButton = ({ color, onChange }: ColorButtonProps) => {\r\n  const svgRef = React.useRef<SVGSVGElement>(null);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [bufferedColor, setBufferedColor] = React.useState<string | null>(null);\r\n\r\n  const onClick = React.useCallback(() => {\r\n    setIsOpen(!isOpen);\r\n  }, [isOpen]);\r\n\r\n  const onRequestClose = React.useCallback(() => {\r\n    setIsOpen(false);\r\n  }, []);\r\n\r\n  const onSketchColorChange = React.useCallback((color: ColorResult) => {\r\n    setBufferedColor(color.hex);\r\n  }, []);\r\n\r\n  const onSketchColorCommit = React.useCallback(\r\n    (color: ColorResult) => {\r\n      setBufferedColor(null);\r\n      onChange(color.hex);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <svg\r\n        width=\"50px\"\r\n        height=\"50px\"\r\n        ref={svgRef}\r\n        className={styles[\"colorbutton-svg\"]}\r\n        onClick={onClick}\r\n      >\r\n        <circle cx={25} cy={25} r={25} fill={bufferedColor ?? color} />\r\n      </svg>\r\n      <Popper\r\n        isOpen={isOpen}\r\n        anchorEl={svgRef.current}\r\n        onRequestClose={onRequestClose}\r\n      >\r\n        <SketchPicker\r\n          color={color}\r\n          onChange={onSketchColorChange}\r\n          onChangeComplete={onSketchColorCommit}\r\n        />\r\n      </Popper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorButton;\r\n","import ColorButton from \"./ColorButton\";\r\nexport default ColorButton;\r\n","import * as React from \"react\";\r\n\r\nimport TextArea, { TextAreaProps } from \"./TextArea\";\r\n\r\nexport interface CommitTextAreaProps extends TextAreaProps {\r\n  onCommit: (value: string) => void;\r\n}\r\n\r\nconst CommitTextArea: React.FC<CommitTextAreaProps> = ({\r\n  value,\r\n  onCommit,\r\n  ...props\r\n}) => {\r\n  const [editingValue, setEditingValue] = React.useState<string | null>(null);\r\n  const onChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n      setEditingValue(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onBlur = React.useCallback(() => {\r\n    if (editingValue != null) {\r\n      setEditingValue(null);\r\n      onCommit(editingValue);\r\n    }\r\n  }, [editingValue]);\r\n  return (\r\n    <TextArea\r\n      {...props}\r\n      value={editingValue ?? value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CommitTextArea;\r\n","import * as React from \"react\";\r\n\r\nimport TextBox, { TextBoxProps } from \"./TextBox\";\r\n\r\nexport interface CommitTextBoxProps extends TextBoxProps {\r\n  onCommit: (value: string) => void;\r\n}\r\n\r\nconst CommitTextBox: React.FC<CommitTextBoxProps> = ({\r\n  value,\r\n  onCommit,\r\n  ...props\r\n}) => {\r\n  const [editingValue, setEditingValue] = React.useState<string | null>(null);\r\n  const onChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setEditingValue(e.target.value);\r\n    },\r\n    []\r\n  );\r\n  const onBlur = React.useCallback(() => {\r\n    if (editingValue != null) {\r\n      setEditingValue(null);\r\n      onCommit(editingValue);\r\n    }\r\n  }, [editingValue]);\r\n  return (\r\n    <TextBox\r\n      {...props}\r\n      value={editingValue ?? value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CommitTextBox;\r\n","import * as React from \"react\";\r\n\r\nimport PackageMenuButton from \"./PackageMenuButton\";\r\n\r\nconst DefaultTitlebarContent = () => {\r\n  return (\r\n    <>\r\n      <PackageMenuButton />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultTitlebarContent;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport styles from \"./Divider.module.css\";\r\n\r\nexport interface DividerProps {\r\n  orientation?: \"horizontal\" | \"vertical\";\r\n}\r\n\r\nconst Divider = ({ orientation = \"horizontal\" }: DividerProps) => (\r\n  <div\r\n    className={classNames(\r\n      styles[\"divider\"],\r\n      orientation == \"horizontal\"\r\n        ? styles[\"divider--horizontal\"]\r\n        : styles[\"divider--vertical\"]\r\n    )}\r\n  >\r\n    <div className={styles[\"divider-line\"]} />\r\n  </div>\r\n);\r\n\r\nexport default Divider;\r\n","import Divider from \"./Divider\";\r\nexport default Divider;\r\n","import * as React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageLoadStatusSelector } from \"@/services/package/selectors/package\";\r\n\r\nconst EnsurePackageLoaded: React.FC = () => {\r\n  const status = useSelector(packageLoadStatusSelector);\r\n  return status == \"loaded\" ? null : <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default EnsurePackageLoaded;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport styles from \"./FieldBox.module.css\";\r\n\r\nexport interface FieldBoxProps {\r\n  className?: string;\r\n  label: string;\r\n  children: React.ReactNode;\r\n}\r\nconst FieldBox = ({ className, label, children }: FieldBoxProps) => (\r\n  <div className={classNames(styles[\"fieldbox\"], className)}>\r\n    <span className={styles[\"fieldbox-label\"]}>{label}</span>\r\n    <div className={styles[\"fieldbox-content\"]}>{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default FieldBox;\r\n","import FieldBox from \"./FieldBox\";\r\nexport default FieldBox;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport styles from \"./Flow.module.css\";\r\n\r\nexport interface FlowProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n}\r\nconst Flow = ({ className, children }: FlowProps) => (\r\n  <div className={classNames(styles[\"flow--vertical\"], className)}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Flow;\r\n","import Flow from \"./Flow\";\r\nexport default Flow;\r\n","import * as React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileUpload } from \"@fortawesome/free-solid-svg-icons\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { extname } from \"@/paths\";\r\n\r\nimport Button from \"../Button\";\r\nimport AbstractFileLoadButton from \"../AbstractFileLoadButton\";\r\n\r\nimport styles from \"./ImageField.module.css\";\r\n\r\nexport interface ImageFieldProps {\r\n  className?: string;\r\n  imageResource: Uint8Array | null;\r\n  imageResourceName: string | null;\r\n  onChange(image: Uint8Array, resourceName: string): void;\r\n}\r\n\r\nconst ImageField = ({\r\n  className,\r\n  imageResource,\r\n  imageResourceName,\r\n  onChange,\r\n}: ImageFieldProps) => {\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const imageUrl = React.useMemo(() => {\r\n    if (imageResource == null || imageResourceName == null) {\r\n      return null;\r\n    }\r\n    return URL.createObjectURL(\r\n      new Blob([imageResource.buffer], {\r\n        type: `image/${extname(imageResourceName)}`,\r\n      })\r\n    );\r\n  }, [imageResource, imageResourceName]);\r\n\r\n  const onFileLoaded = React.useCallback(\r\n    (file: File) => {\r\n      setLoading(true);\r\n      file\r\n        .arrayBuffer()\r\n        .then((buffer) => {\r\n          onChange(new Uint8Array(buffer), file.name);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        styles[\"imagefield\"],\r\n        imageUrl && styles[\"imagefield--has-image\"],\r\n        className\r\n      )}\r\n    >\r\n      <div className={styles[\"imagefield-upload\"]}>\r\n        <AbstractFileLoadButton\r\n          accept=\"image/png\"\r\n          onFileLoaded={onFileLoaded}\r\n          disabled={isLoading}\r\n        >\r\n          {(props) => (\r\n            <Button {...props}>\r\n              <FontAwesomeIcon color=\"inherit\" icon={faFileUpload} />\r\n            </Button>\r\n          )}\r\n        </AbstractFileLoadButton>\r\n      </div>\r\n      {imageUrl && (\r\n        <div className={styles[\"imagefield-image-container\"]}>\r\n          <img src={imageUrl} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageField;\r\n","import ImageField from \"./ImageField\";\r\nexport default ImageField;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { useClickAction } from \"@/hooks/use-action\";\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { mapEditorToolSet } from \"@/actions/map-editor/tool-set\";\r\n\r\nimport {\r\n  currentToolSelector,\r\n  toolRadiusSelector,\r\n} from \"@/services/map-editor/mouse/selectors/tools\";\r\n\r\nimport { mapEditorToolRadiusSet } from \"@/actions/map-editor/tool-radius-set\";\r\n\r\nimport Button from \"../Button\";\r\n\r\nimport PotionEffectsDropButton from \"./components/PotionEffectsDropButton\";\r\nimport BonesDropButton from \"./components/BonesDropButton\";\r\nimport VortexesDropButton from \"./components/VortexesDropButton\";\r\n\r\nimport styles from \"./MapEditorToolbar.module.css\";\r\n\r\nexport interface MapEditorToolBarProps {\r\n  className?: string;\r\n}\r\nconst MapEditorToolBar = ({ className }: MapEditorToolBarProps) => {\r\n  const toolSize = useSelector(toolRadiusSelector);\r\n  const currentTool = useSelector(currentToolSelector);\r\n  const onIncreaseToolSize = useClickAction(\r\n    mapEditorToolRadiusSet,\r\n    toolSize + 0.2\r\n  );\r\n  const onDecreaseToolSize = useClickAction(\r\n    mapEditorToolRadiusSet,\r\n    toolSize - 0.2\r\n  );\r\n  const onPointerClick = useClickAction(mapEditorToolSet, \"pointer\");\r\n  const onEraserClick = useClickAction(mapEditorToolSet, \"eraser\");\r\n  const onBonesClick = useClickAction(mapEditorToolSet, \"paint-danger-zone\");\r\n  return (\r\n    <div className={classNames(styles[\"map-toolbar\"], className)}>\r\n      <Button\r\n        variant={currentTool === \"pointer\" ? \"primary\" : \"default\"}\r\n        onClick={onPointerClick}\r\n      >\r\n        Pointer\r\n      </Button>\r\n      <Button\r\n        variant={currentTool === \"eraser\" ? \"primary\" : \"default\"}\r\n        onClick={onEraserClick}\r\n      >\r\n        Eraser\r\n      </Button>\r\n      <Button\r\n        variant={currentTool === \"paint-danger-zone\" ? \"primary\" : \"default\"}\r\n        onClick={onBonesClick}\r\n      >\r\n        Bones\r\n      </Button>\r\n      Brush Size:\r\n      <Button onClick={onDecreaseToolSize}>-</Button>\r\n      {toolSize.toFixed(1)}\r\n      <Button onClick={onIncreaseToolSize}>+</Button>\r\n      <div className={styles[\"map-toolbar-entities\"]}>\r\n        <PotionEffectsDropButton />\r\n        <BonesDropButton />\r\n        <VortexesDropButton />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapEditorToolBar;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { DangerZonePartMapEntity } from \"@/map-config\";\r\n\r\nimport { SpawnableEntityPrototype } from \"@/services/map-editor/entities/types\";\r\n\r\nimport EntitiesDropButton from \"./EntitiesDropButton\";\r\n\r\nfunction bonePrototype(\r\n  type: string\r\n): SpawnableEntityPrototype<DangerZonePartMapEntity> {\r\n  return {\r\n    i18nKey: `entities.danger_zone_parts.type_names.${type}`,\r\n    entityType: \"DangerZonePart\",\r\n    prefab: type,\r\n    angle: 0,\r\n  };\r\n}\r\n\r\nconst boneItems = [\r\n  bonePrototype(\"Skull1\"),\r\n  bonePrototype(\"Bone1\"),\r\n  bonePrototype(\"Bone2\"),\r\n  bonePrototype(\"Fang1\"),\r\n  bonePrototype(\"Fang2\"),\r\n];\r\n\r\nconst PotionEffectsDropButton = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <EntitiesDropButton entityPrototypes={boneItems}>\r\n      {t(\"entities.danger_zone_parts.noun_titlecase_plural\")}\r\n    </EntitiesDropButton>\r\n  );\r\n};\r\n\r\nexport default PotionEffectsDropButton;\r\n","import * as React from \"react\";\r\n\r\nimport Button from \"@/components/Button\";\r\n\r\nimport EntitiesDropList from \"./EntitiesDropList\";\r\n\r\nimport { useBooleanSetState } from \"@/hooks/use-boolean-state\";\r\n\r\nimport { SpawnableEntityPrototype } from \"@/services/map-editor/entities/types\";\r\n\r\nimport Popper from \"@/components/Popper\";\r\nimport { MenuCloseListener } from \"@/components/Menus/MenuCloseContext\";\r\n\r\nexport interface EntitiesDropButtonProps {\r\n  entityPrototypes: SpawnableEntityPrototype[];\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst EntitiesDropButton = ({\r\n  entityPrototypes,\r\n  children,\r\n}: EntitiesDropButtonProps) => {\r\n  const anchorEl = React.useRef<HTMLButtonElement | null>(null);\r\n\r\n  const [isOpen, setOpen, setClosed] = useBooleanSetState();\r\n\r\n  return (\r\n    <MenuCloseListener onClose={setClosed}>\r\n      <Button variant=\"primary\" ref={anchorEl} onClick={setOpen}>\r\n        {children}\r\n      </Button>\r\n      <Popper\r\n        anchorEl={anchorEl.current}\r\n        isOpen={isOpen}\r\n        placement=\"bottom-start\"\r\n        onRequestClose={setClosed}\r\n      >\r\n        {isOpen && <EntitiesDropList entityPrototypes={entityPrototypes} />}\r\n      </Popper>\r\n    </MenuCloseListener>\r\n  );\r\n};\r\n\r\nexport default EntitiesDropButton;\r\n","import * as React from \"react\";\r\nimport omit from \"lodash/omit\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n  DRAGOBJECT_NEW_ENTITY,\r\n  newEntityDragObject,\r\n} from \"@/drag-items/new-entity\";\r\n\r\nimport { EntityDefsByType } from \"@/entities\";\r\n\r\nimport { useBooleanSetState } from \"@/hooks/use-boolean-state\";\r\n\r\nimport { SpawnableEntityPrototype } from \"@/services/map-editor/entities/types\";\r\nimport { renderResourcesSelector } from \"@/services/map-editor/entities/selectors/render-resources\";\r\n\r\nimport Tooltip from \"@/components/Tooltip/Tooltip\";\r\n\r\nimport styles from \"./EntitiesDropButton.module.css\";\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nexport interface EntitiesDropListProps {\r\n  entityPrototypes: SpawnableEntityPrototype[];\r\n}\r\n\r\nconst PotionEffectDragList = ({ entityPrototypes }: EntitiesDropListProps) => {\r\n  return (\r\n    <ul className={styles[\"entities-drop-list\"]}>\r\n      {entityPrototypes.map((entityPrototype, i) => (\r\n        <PotionEffectDraggableItem key={i} entityPrototype={entityPrototype} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PotionEffectDragList;\r\n\r\ninterface EntityDropListItemProps {\r\n  entityPrototype: SpawnableEntityPrototype;\r\n}\r\n\r\nconst PotionEffectDraggableItem = ({\r\n  entityPrototype,\r\n}: EntityDropListItemProps) => {\r\n  const [selfRef, setSelfRef] = React.useState<HTMLLIElement | null>(null);\r\n  const { entityType, i18nKey, displayName } = entityPrototype;\r\n  const { t } = useTranslation();\r\n  const canvasRef = React.useRef<HTMLCanvasElement | null>(null);\r\n  const [, dragRef] = useDrag({\r\n    type: DRAGOBJECT_NEW_ENTITY,\r\n    item: newEntityDragObject(\r\n      omit(entityPrototype, [\"i18nKey\", \"displayName\"])\r\n    ),\r\n  });\r\n  const [isShowingTooltip, showTooltip, hideTooltip] = useBooleanSetState();\r\n  const renderResources = useSelector(renderResourcesSelector);\r\n\r\n  React.useLayoutEffect(() => {\r\n    const type = EntityDefsByType[entityType];\r\n    const canvas = canvasRef.current;\r\n    if (!canvas || !type) {\r\n      return;\r\n    }\r\n\r\n    const ctx = canvas.getContext(\"2d\")!;\r\n    ctx.scale(30, 30);\r\n    ctx.translate(0.5, 0.55);\r\n    ctx.scale(1, -1);\r\n    type.render(ctx, entityPrototype, () => {}, renderResources);\r\n  }, [entityType, renderResources]);\r\n\r\n  return (\r\n    <li\r\n      className={styles[\"entities-drop-list-item\"]}\r\n      ref={(ref) => {\r\n        dragRef(ref);\r\n        setSelfRef(ref);\r\n      }}\r\n      onMouseOut={hideTooltip}\r\n      onClick={showTooltip}\r\n    >\r\n      <span>\r\n        <canvas ref={canvasRef} width={30} height={30} />\r\n      </span>\r\n      <span>{i18nKey ? t(i18nKey) : displayName}</span>\r\n      <Tooltip anchorEl={selfRef} isOpen={isShowingTooltip}>\r\n        {t(\"entities.message_click_drag_create\")}\r\n      </Tooltip>\r\n    </li>\r\n  );\r\n};\r\n","import EntitiesDropButton from \"./EntitiesDropButton\";\r\nexport default EntitiesDropButton;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { potionEffectEntityPrototypesSelector } from \"@/services/map-editor/entities/selectors/prototypes\";\r\n\r\nimport EntitiesDropButton from \"./EntitiesDropButton\";\r\n\r\nconst PotionEffectsDropButton = () => {\r\n  const effects = useSelector(potionEffectEntityPrototypesSelector);\r\n  const { t } = useTranslation();\r\n  return (\r\n    <EntitiesDropButton entityPrototypes={effects}>\r\n      {t(\"potion_effects.noun_titlecase_plural\")}\r\n    </EntitiesDropButton>\r\n  );\r\n};\r\n\r\nexport default PotionEffectsDropButton;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { VortexMapEntity } from \"@/map-config\";\r\n\r\nimport { SpawnableEntityPrototype } from \"@/services/map-editor/entities/types\";\r\n\r\nimport EntitiesDropButton from \"./EntitiesDropButton\";\r\n\r\nfunction vortexPrototype(\r\n  type: string\r\n): SpawnableEntityPrototype<VortexMapEntity> {\r\n  return {\r\n    i18nKey: `entities.vortexes.type_names.${type}`,\r\n    entityType: \"Vortex\",\r\n    prefab: type,\r\n  };\r\n}\r\n\r\nconst vortexItems = [vortexPrototype(\"Medium\"), vortexPrototype(\"Large\")];\r\n\r\nconst PotionEffectsDropButton = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <EntitiesDropButton entityPrototypes={vortexItems}>\r\n      {t(\"entities.vortexes.noun_titlecase_plural\")}\r\n    </EntitiesDropButton>\r\n  );\r\n};\r\n\r\nexport default PotionEffectsDropButton;\r\n","import MapEditorToolBar from \"./MapEditorToolBar\";\r\nexport default MapEditorToolBar;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { AnyAction } from \"redux\";\r\nimport { HotKeys, ComponentProps } from \"react-hotkeys\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { mapEditorSelectionDelete } from \"@/actions/map-editor/selection-delete\";\r\n\r\nimport PanZoomHandler from \"./components/PanZoomHandler\";\r\nimport MapCanvas from \"./components/MapCanvas\";\r\nimport MapWidgets from \"./components/MapWidgets\";\r\nimport DragPreview from \"./components/DragPreview\";\r\n\r\nimport keymap, { HotkeyHandler, KeymapHandler, KEYMAP_DELETE } from \"./keymap\";\r\n\r\nimport styles from \"./MapEditor.module.css\";\r\n\r\nexport interface MapEditorProps {\r\n  className?: string;\r\n}\r\nconst MapEditor = ({ className }: MapEditorProps) => {\r\n  const dispatch = useDispatch();\r\n  const keyHandlers = React.useMemo(() => {\r\n    function createEventDispatcher(action: AnyAction): HotkeyHandler {\r\n      return (e?: KeyboardEvent) => {\r\n        if (e) {\r\n          if (e.defaultPrevented) {\r\n            return;\r\n          }\r\n          e.preventDefault();\r\n        }\r\n        dispatch(action);\r\n      };\r\n    }\r\n    const keyHandlers: KeymapHandler = {\r\n      [KEYMAP_DELETE]: createEventDispatcher(mapEditorSelectionDelete()),\r\n    };\r\n    return keyHandlers;\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classNames(className, \"map-editor\", styles[\"map-editor\"])}>\r\n      <HotKeys\r\n        keyMap={keymap}\r\n        handlers={keyHandlers}\r\n        component={HotkeysContainer}\r\n      >\r\n        <PanZoomHandler className={styles[\"map-editor-container\"]}>\r\n          <MapCanvas className={styles[\"map-editor-item\"]} />\r\n          <DragPreview className={styles[\"map-editor-item\"]} />\r\n          <MapWidgets className={styles[\"map-editor-item\"]} />\r\n        </PanZoomHandler>\r\n      </HotKeys>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HotkeysContainer: React.FC<ComponentProps> = ({ children, ...props }) => {\r\n  return (\r\n    // Mask ref type.  It is compatible, but HotKey typings are wonky.\r\n    <div {...(props as any)} className={styles[\"hotkeys-container\"]}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapEditor;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport styles from \"./DragPreview.module.css\";\r\n\r\nimport { renderEntity, transformToMap } from \"@/canvas\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { entitiesByKeySelector } from \"@/services/map-editor/entities/selectors/entities\";\r\nimport { selectedEntityKeysSelector } from \"@/services/map-editor/selection/selectors/selection\";\r\nimport {\r\n  editorOffsetXSelector,\r\n  editorOffsetYSelector,\r\n  editorZoomFactorSelector,\r\n} from \"@/services/map-editor/view/selectors/view\";\r\nimport { dragMoveOffsetSelector } from \"@/services/map-editor/mouse/selectors/drag-move\";\r\nimport {\r\n  editorViewportHeightSelector,\r\n  editorViewportWidthSelector,\r\n} from \"@/services/map-editor/view/selectors/viewport\";\r\nimport { renderResourcesSelector } from \"@/services/map-editor/entities/selectors/render-resources\";\r\n\r\nexport interface DragPreviewProps {\r\n  className?: string;\r\n}\r\nconst DragPreview = ({ className }: DragPreviewProps) => {\r\n  const entitiesByKey = useSelector(entitiesByKeySelector);\r\n  const selectedEntityKeys = useSelector(selectedEntityKeysSelector);\r\n  const offsetX = useSelector(editorOffsetXSelector);\r\n  const offsetY = useSelector(editorOffsetYSelector);\r\n  const zoomFactor = useSelector(editorZoomFactorSelector);\r\n  const viewportWidth = useSelector(editorViewportWidthSelector);\r\n  const viewportHeight = useSelector(editorViewportHeightSelector);\r\n  const dragMoveOffset = useSelector(dragMoveOffsetSelector);\r\n  const renderResources = useSelector(renderResourcesSelector);\r\n\r\n  const canvasRef = React.useRef<HTMLCanvasElement | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n\r\n    const ctx = canvasRef.current.getContext(\"2d\")!;\r\n\r\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\r\n    transformToMap(ctx, zoomFactor, offsetX, offsetY, () => {\r\n      if (dragMoveOffset != null) {\r\n        ctx.translate(dragMoveOffset.x, dragMoveOffset.y);\r\n        for (const key of selectedEntityKeys) {\r\n          const entity = entitiesByKey[key];\r\n          renderEntity(ctx, entity, true, renderResources);\r\n        }\r\n      }\r\n    });\r\n  }, [\r\n    entitiesByKey,\r\n    selectedEntityKeys,\r\n    offsetX,\r\n    offsetY,\r\n    zoomFactor,\r\n    dragMoveOffset,\r\n  ]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className={classNames(className, styles[\"drag-preview\"])}\r\n      width={viewportWidth}\r\n      height={viewportHeight}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DragPreview;\r\n","import DragPreview from \"./DragPreview\";\r\nexport default DragPreview;\r\n","import * as React from \"react\";\r\nimport { useDispatch, useStore } from \"react-redux\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\nimport { normalizeRectangle, pointIntersectsRect, Rectangle } from \"@/geometry\";\r\n\r\nimport { renderEntity, renderPotionStart, transformToMap } from \"@/canvas\";\r\n\r\nimport {\r\n  DRAGOBJECT_NEW_ENTITY,\r\n  isNewEntityDragObject,\r\n} from \"@/drag-items/new-entity\";\r\n\r\nimport { LargestEntityRadius } from \"@/entities\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\nimport { useComponentBounds } from \"@/hooks/use-component-bounds\";\r\nimport { mapEditorMouseDown } from \"@/actions/map-editor/mouse-down\";\r\nimport { mapEditorMouseMove } from \"@/actions/map-editor/mouse-move\";\r\nimport { mapEditorMouseUp } from \"@/actions/map-editor/mouse-up\";\r\nimport { mapEditorEntityPrototypeInstantiate } from \"@/actions/map-editor/entity-prototype-instantiate\";\r\nimport { mapEditorModifierKeysChanged } from \"@/actions/map-editor/modifierkeys-changed\";\r\nimport { mapEditorRendered } from \"@/actions/map-editor/rendered\";\r\n\r\nimport {\r\n  editorViewportHeightSelector,\r\n  editorViewportWidthSelector,\r\n} from \"@/services/map-editor/view/selectors/viewport\";\r\nimport { useClientToWorld } from \"@/services/map-editor/view/hooks/use-client-to-world\";\r\nimport { entitiesByKeySelector } from \"@/services/map-editor/entities/selectors/entities\";\r\nimport {\r\n  editorOffsetXSelector,\r\n  editorOffsetYSelector,\r\n  editorZoomFactorSelector,\r\n} from \"@/services/map-editor/view/selectors/view\";\r\nimport { selectedEntityKeysSelector } from \"@/services/map-editor/selection/selectors/selection\";\r\nimport { dragMoveOffsetSelector } from \"@/services/map-editor/mouse/selectors/drag-move\";\r\nimport { editorDamageRectSelector } from \"@/services/map-editor/damage/selector/damage\";\r\nimport { worldToClientSelector } from \"@/services/map-editor/view/selectors/coordinate-mapping\";\r\nimport { renderResourcesSelector } from \"@/services/map-editor/entities/selectors/render-resources\";\r\n\r\nimport styles from \"./MapCanvas.module.css\";\r\n\r\nexport interface MapCanvasProps {\r\n  className?: string;\r\n}\r\n\r\nconst MapCanvas = ({ className }: MapCanvasProps) => {\r\n  const dispatch = useDispatch();\r\n  const store = useStore();\r\n\r\n  const pointerRef = React.useRef<number | null>(null);\r\n  const canvasRef = React.useRef<HTMLCanvasElement | null>(null);\r\n  const canvasBounds = useComponentBounds(canvasRef);\r\n  const viewportWidth = useSelector(editorViewportWidthSelector);\r\n  const viewportHeight = useSelector(editorViewportHeightSelector);\r\n\r\n  const renderResources = useSelector(renderResourcesSelector);\r\n\r\n  const clientToWorld = useClientToWorld();\r\n\r\n  const eventCanvasPoint = React.useCallback(\r\n    (e: React.MouseEvent | MouseEvent) => {\r\n      return {\r\n        x: e.clientX - canvasBounds.left,\r\n        y: e.clientY - canvasBounds.top,\r\n      };\r\n    },\r\n    [canvasBounds]\r\n  );\r\n\r\n  const onMouseEnter = React.useCallback(() => {\r\n    canvasRef.current?.focus();\r\n  }, []);\r\n\r\n  const onPointerDown = React.useCallback(\r\n    (e: React.PointerEvent) => {\r\n      if (pointerRef.current !== null && pointerRef.current !== e.pointerId) {\r\n        return;\r\n      }\r\n      pointerRef.current = e.pointerId;\r\n      e.currentTarget.setPointerCapture(e.pointerId);\r\n\r\n      const modifiers = getModifiers(e);\r\n      const p = eventCanvasPoint(e);\r\n      dispatch(mapEditorMouseDown(p, modifiers));\r\n    },\r\n    [eventCanvasPoint]\r\n  );\r\n\r\n  const onPointerMove = React.useCallback(\r\n    (e: React.PointerEvent) => {\r\n      if (pointerRef.current !== null && pointerRef.current !== e.pointerId) {\r\n        return;\r\n      }\r\n\r\n      const modifiers = getModifiers(e);\r\n      const p = eventCanvasPoint(e);\r\n      dispatch(mapEditorMouseMove(p, modifiers));\r\n    },\r\n    [eventCanvasPoint]\r\n  );\r\n\r\n  const onPointerUp = React.useCallback(\r\n    (e: React.PointerEvent) => {\r\n      if (pointerRef.current !== null && pointerRef.current !== e.pointerId) {\r\n        return;\r\n      }\r\n\r\n      e.currentTarget.releasePointerCapture(e.pointerId);\r\n      pointerRef.current = null;\r\n\r\n      const modifiers = getModifiers(e);\r\n      const p = eventCanvasPoint(e);\r\n      dispatch(mapEditorMouseUp(p, modifiers));\r\n    },\r\n    [eventCanvasPoint]\r\n  );\r\n\r\n  const onKeyDown = React.useCallback((e: React.KeyboardEvent) => {\r\n    const modifiers = getModifiers(e);\r\n    dispatch(mapEditorModifierKeysChanged(modifiers));\r\n    if (e.key === \"Alt\") {\r\n      e.preventDefault();\r\n    }\r\n  }, []);\r\n\r\n  const onKeyUp = React.useCallback((e: React.KeyboardEvent) => {\r\n    const modifiers = getModifiers(e);\r\n    dispatch(mapEditorModifierKeysChanged(modifiers));\r\n    if (e.key === \"Alt\") {\r\n      e.preventDefault();\r\n    }\r\n  }, []);\r\n\r\n  const [_, dropRef] = useDrop(\r\n    {\r\n      accept: DRAGOBJECT_NEW_ENTITY,\r\n      drop: (item, monitor) => {\r\n        if (!isNewEntityDragObject(item)) {\r\n          return;\r\n        }\r\n\r\n        const { prototype } = item.payload;\r\n\r\n        const p = monitor.getClientOffset();\r\n        if (!p) {\r\n          return;\r\n        }\r\n        p.x -= canvasBounds.left;\r\n        p.y -= canvasBounds.top;\r\n        const worldP = clientToWorld(p);\r\n        dispatch(mapEditorEntityPrototypeInstantiate(prototype, worldP));\r\n      },\r\n    },\r\n    [clientToWorld, canvasBounds]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let animationFrame: number | null = null;\r\n\r\n    function render() {\r\n      animationFrame = null;\r\n\r\n      if (!canvasRef.current) {\r\n        return;\r\n      }\r\n\r\n      const state = store.getState();\r\n      const entitiesByKey = entitiesByKeySelector(state);\r\n      const selectedEntityKeys = selectedEntityKeysSelector(state);\r\n      const offsetX = editorOffsetXSelector(state);\r\n      const offsetY = editorOffsetYSelector(state);\r\n      const zoomFactor = editorZoomFactorSelector(state);\r\n      const dragMoveOffset = dragMoveOffsetSelector(state);\r\n      let damageRect = editorDamageRectSelector(state);\r\n\r\n      if (!damageRect) {\r\n        // Nothing to redraw\r\n        return;\r\n      }\r\n\r\n      // Increment the damage rect to account for entity radius that needs to be cleared.\r\n      // TODO: Restrict this to the visible viewport.\r\n      damageRect = {\r\n        p1: {\r\n          x: damageRect.p1.x - LargestEntityRadius,\r\n          y: damageRect.p1.y - LargestEntityRadius,\r\n        },\r\n        p2: {\r\n          x: damageRect.p2.x + LargestEntityRadius,\r\n          y: damageRect.p2.y + LargestEntityRadius,\r\n        },\r\n      };\r\n\r\n      // Increment redraw yet again to redraw entities that were partially cut by the clear\r\n      const redrawRect: Rectangle = {\r\n        p1: {\r\n          x: damageRect.p1.x - LargestEntityRadius,\r\n          y: damageRect.p1.y - LargestEntityRadius,\r\n        },\r\n        p2: {\r\n          x: damageRect.p2.x + LargestEntityRadius,\r\n          y: damageRect.p2.y + LargestEntityRadius,\r\n        },\r\n      };\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\")!;\r\n\r\n      const clearClientP1 = worldToClientSelector(state, damageRect.p1);\r\n      const clearClientP2 = worldToClientSelector(state, damageRect.p2);\r\n      const clearRect = normalizeRectangle(clearClientP1, clearClientP2);\r\n      ctx.clearRect(\r\n        Math.max(0, clearRect.p1.x),\r\n        Math.max(0, clearRect.p1.y),\r\n        Math.min(ctx.canvas.width, clearRect.p2.x - clearRect.p1.x),\r\n        Math.min(ctx.canvas.height, clearRect.p2.y - clearRect.p1.y)\r\n      );\r\n\r\n      transformToMap(ctx, zoomFactor, offsetX, offsetY, () => {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 0.2;\r\n        ctx.setLineDash([2, 2]);\r\n        ctx.moveTo(-60, -60);\r\n        ctx.lineTo(-60, 60);\r\n        ctx.lineTo(60, 60);\r\n        ctx.lineTo(60, -60);\r\n        ctx.lineTo(-60, -60);\r\n        ctx.stroke();\r\n\r\n        renderPotionStart(ctx);\r\n\r\n        let renderCount = 0;\r\n        for (const key of Object.keys(entitiesByKey)) {\r\n          const entity = entitiesByKey[key];\r\n          if (!pointIntersectsRect(entity, redrawRect)) {\r\n            continue;\r\n          }\r\n          const isSelected = selectedEntityKeys.includes(key);\r\n          if (dragMoveOffset != null && isSelected) {\r\n            continue;\r\n          }\r\n          renderCount++;\r\n          renderEntity(ctx, entity, isSelected, renderResources);\r\n        }\r\n      });\r\n\r\n      dispatch(mapEditorRendered());\r\n    }\r\n\r\n    function requestRender() {\r\n      if (animationFrame != null) {\r\n        return;\r\n      }\r\n      animationFrame = requestAnimationFrame(render);\r\n    }\r\n\r\n    const unsubscribe = store.subscribe(requestRender);\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n        animationFrame = null;\r\n      }\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      tabIndex={-1}\r\n      className={classNames(className, styles[\"map-canvas\"])}\r\n      ref={(ref) => {\r\n        canvasRef.current = ref;\r\n        dropRef(ref);\r\n      }}\r\n      width={viewportWidth}\r\n      height={viewportHeight}\r\n      onMouseEnter={onMouseEnter}\r\n      onPointerDown={onPointerDown}\r\n      onPointerMove={onPointerMove}\r\n      onPointerUp={onPointerUp}\r\n      onKeyDown={onKeyDown}\r\n      onKeyUp={onKeyUp}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MapCanvas;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { viewportMousePosSelector } from \"@/services/map-editor/mouse/selectors/viewport\";\r\nimport {\r\n  currentToolSelector,\r\n  toolViewportRadiusSelector,\r\n} from \"@/services/map-editor/mouse/selectors/tools\";\r\nimport { dragSelectionRectSelector } from \"@/services/map-editor/mouse/selectors/drag-select\";\r\n\r\nimport styles from \"./MapWidgets.module.css\";\r\n\r\nexport interface MapWidgetsProps {\r\n  className?: string;\r\n}\r\n\r\nconst MapWidgets = ({ className }: MapWidgetsProps) => {\r\n  const selectionRect = useSelector(dragSelectionRectSelector);\r\n  const mousePos = useSelector(viewportMousePosSelector);\r\n  const toolRadius = useSelector(toolViewportRadiusSelector);\r\n  const tool = useSelector(currentToolSelector);\r\n\r\n  return (\r\n    <svg\r\n      className={classNames(className, styles[\"map-widgets\"])}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n    >\r\n      {selectionRect && (\r\n        <rect\r\n          x={selectionRect.p1.x}\r\n          y={selectionRect.p1.y}\r\n          width={selectionRect.p2.x - selectionRect.p1.x}\r\n          height={selectionRect.p2.y - selectionRect.p1.y}\r\n          stroke=\"lightblue\"\r\n          strokeWidth={3}\r\n          opacity={0.5}\r\n          strokeDasharray=\"6,6\"\r\n        />\r\n      )}\r\n      {mousePos && (tool === \"eraser\" || tool === \"paint-danger-zone\") && (\r\n        <circle\r\n          cx={mousePos.x}\r\n          cy={mousePos.y}\r\n          r={toolRadius}\r\n          stroke=\"lightblue\"\r\n          opacity={0.5}\r\n          strokeWidth={3}\r\n        />\r\n      )}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MapWidgets;\r\n","import MapWidgets from \"./MapWidgets\";\r\nexport default MapWidgets;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getModifiers } from \"@/modifier-keys\";\r\n\r\nimport { useComponentBounds } from \"@/hooks/use-component-bounds\";\r\nimport { useNativeEvent } from \"@/hooks/use-native-event\";\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { editorZoomFactorSelector } from \"@/services/map-editor/view/selectors/view\";\r\n\r\nimport { mapEditorViewportResize } from \"@/actions/map-editor/viewport-resize\";\r\nimport { mapEditorZoom } from \"@/actions/map-editor/zoom\";\r\nimport { mapEditorPan } from \"@/actions/map-editor/pan\";\r\n\r\nimport style from \"./PanZoomHandler.module.css\";\r\n\r\nexport interface PanZoomHandlerProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ZOOM_FACTOR = 1.07;\r\nexport const PAN_FACTOR = 0.5;\r\n\r\nconst PanZoomHandler = ({ className, children }: PanZoomHandlerProps) => {\r\n  const dispatch = useDispatch();\r\n  const zoomFactor = useSelector(editorZoomFactorSelector);\r\n\r\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\r\n  const containerBounds = useComponentBounds(containerRef);\r\n\r\n  React.useLayoutEffect(() => {\r\n    dispatch(\r\n      mapEditorViewportResize(containerBounds.width, containerBounds.height)\r\n    );\r\n  }, [containerBounds.width, containerBounds.height]);\r\n\r\n  const onWheel = React.useCallback(\r\n    (e: WheelEvent) => {\r\n      const target = containerRef.current;\r\n      if (!target || e.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      const modifiers = getModifiers(e);\r\n\r\n      if (modifiers.ctrlMetaKey) {\r\n        const nextZoom =\r\n          e.deltaY < 0 ? zoomFactor * ZOOM_FACTOR : zoomFactor / ZOOM_FACTOR;\r\n        dispatch(mapEditorZoom(nextZoom));\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      } else if (modifiers.shiftKey) {\r\n        dispatch(mapEditorPan((e.deltaY * PAN_FACTOR) / zoomFactor, 0));\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      } else {\r\n        dispatch(mapEditorPan(0, (e.deltaY * PAN_FACTOR) / zoomFactor));\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    },\r\n    [zoomFactor]\r\n  );\r\n\r\n  // React listens to the root listener for all events,\r\n  //  and chrome assumes the root event listener for mouse events\r\n  //  never wants to preventDefault.\r\n  // We need to take a local event listener and mark it as not passive.\r\n  // https://github.com/facebook/react/issues/14856\r\n  useNativeEvent(containerRef, \"wheel\", onWheel, { passive: false });\r\n\r\n  return (\r\n    <div\r\n      className={classNames(className, style[\"pan-zoom-handler\"])}\r\n      ref={containerRef}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PanZoomHandler;\r\n","import PanZoomHandler from \"./PanZoomHandler\";\r\nexport default PanZoomHandler;\r\n","import MapEditor from \"./MapEditor\";\r\nexport * from \"./MapEditor\";\r\nexport default MapEditor;\r\n","export const KEYMAP_DELETE = \"keymap:MapEditor/Delete\" as const;\r\n\r\nconst keymap = {\r\n  [KEYMAP_DELETE]: [\"backspace\", \"del\"],\r\n};\r\nexport default keymap;\r\n\r\nexport type KeymapKeys = keyof typeof keymap;\r\nexport type HotkeyHandler = (keyEvent?: KeyboardEvent) => void;\r\nexport type KeymapHandler = Record<KeymapKeys, HotkeyHandler>;\r\n","import * as React from \"react\";\r\n\r\nimport styles from \"./Menus.module.css\";\r\n\r\nconst DividerMenuItem: React.FC = () => {\r\n  return <div className={styles[\"menu-divider\"]} />;\r\n};\r\n\r\nexport default DividerMenuItem;\r\n","import * as React from \"react\";\r\n\r\nimport styles from \"./Menus.module.css\";\r\n\r\nconst Menu: React.FC = ({ children }) => {\r\n  return <ul className={styles[\"menu\"]}>{children}</ul>;\r\n};\r\n\r\nexport default Menu;\r\n","import * as React from \"react\";\r\n\r\nfunction noop() {\r\n  /* Do nothing */\r\n}\r\n\r\nconst MenuCloseContext = React.createContext<() => void>(noop);\r\n\r\nexport function useMenuCloseContext() {\r\n  return React.useContext(MenuCloseContext);\r\n}\r\n\r\nexport interface MenuCloseListenerProps {\r\n  onClose?(): void;\r\n  children?: React.ReactNode;\r\n}\r\nexport const MenuCloseListener = ({\r\n  onClose: onCloseProp,\r\n  children,\r\n}: MenuCloseListenerProps) => {\r\n  const onCloseChain = useMenuCloseContext();\r\n  const onClose = React.useCallback(() => {\r\n    if (onCloseProp) onCloseProp();\r\n    if (onCloseChain) onCloseChain();\r\n  }, [onCloseProp, onCloseChain]);\r\n\r\n  return (\r\n    <MenuCloseContext.Provider value={onClose}>\r\n      {children}\r\n    </MenuCloseContext.Provider>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport styles from \"./Menus.module.css\";\r\nimport { useMenuCloseContext } from \"./MenuCloseContext\";\r\n\r\nexport interface MenuItemProps {\r\n  autoDismissMenu?: boolean;\r\n  disabled?: boolean;\r\n  secondary?: string;\r\n  onClick?(e: React.MouseEvent<HTMLElement>): void;\r\n}\r\nconst MenuItem: React.FC<MenuItemProps> = ({\r\n  autoDismissMenu = true,\r\n  disabled,\r\n  onClick,\r\n  secondary,\r\n  children,\r\n}) => {\r\n  const requestMenuClose = useMenuCloseContext();\r\n  const onItemClick = React.useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      if (onClick) {\r\n        onClick(e);\r\n      }\r\n      if (autoDismissMenu) requestMenuClose();\r\n    },\r\n    [autoDismissMenu, requestMenuClose, onClick]\r\n  );\r\n  return (\r\n    <li\r\n      className={classNames(\r\n        styles[\"menu-item\"],\r\n        disabled && styles[\"menu-item--disabled\"]\r\n      )}\r\n      onClick={onItemClick}\r\n    >\r\n      <a className={styles[\"menu-item-content\"]}>\r\n        <span className={styles[\"menu-item-text\"]}>{children}</span>\r\n        {secondary && (\r\n          <span className={styles[\"menu-item-secondary\"]}>{secondary}</span>\r\n        )}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport AutoPopper from \"@/components/AutoPopper\";\r\n\r\nimport styles from \"./Menus.module.css\";\r\n\r\nexport interface SubMenuItemProps {\r\n  disabled?: boolean;\r\n  secondary?: string;\r\n  content: JSX.Element;\r\n}\r\nconst SubMenuItem: React.FC<SubMenuItemProps> = ({\r\n  disabled,\r\n  secondary,\r\n  content,\r\n  children,\r\n}) => {\r\n  return (\r\n    <li\r\n      className={classNames(\r\n        styles[\"menu-item\"],\r\n        disabled && styles[\"menu-item--disabled\"]\r\n      )}\r\n    >\r\n      <AutoPopper placement=\"right-start\" content={content}>\r\n        <a className={styles[\"menu-item-content\"]}>\r\n          <span className={styles[\"menu-item-text\"]}>{children}</span>\r\n          {secondary && (\r\n            <span className={styles[\"menu-item-secondary\"]}>{secondary}</span>\r\n          )}\r\n          <svg className={styles[\"menu-item-icon\"]} width={12} height={12}>\r\n            <path d=\"M0,0 l6,6 l-6,6 z\" fill=\"black\" strokeWidth={0} />\r\n          </svg>\r\n        </a>\r\n      </AutoPopper>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SubMenuItem;\r\n","import cls from \"classnames\";\r\nimport * as React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { FocusOn, AutoFocusInside } from \"react-focus-on\";\r\n\r\nimport styles from \"./Modal.module.css\";\r\n\r\nexport interface ModalProps {\r\n  className?: string;\r\n  isOpen: boolean;\r\n  onRequestClose?(): void;\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({\r\n  className,\r\n  isOpen,\r\n  onRequestClose,\r\n  children,\r\n}) => {\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <div className={cls(\"modal\", styles[\"modal\"])}>\r\n      <FocusOn onClickOutside={onRequestClose} onEscapeKey={onRequestClose}>\r\n        <div className={cls(styles[\"modal-content\"], className)}>\r\n          <AutoFocusInside className={styles[\"modal-autofocus\"]}>\r\n            {children}\r\n          </AutoFocusInside>\r\n        </div>\r\n      </FocusOn>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from \"./Modal\";\r\nexport default Modal;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageIdObjectIdsSelector } from \"@/services/package/selectors/package\";\r\nimport { navtreeExpandedValuesSelector } from \"@/services/navigation/selectors\";\r\n\r\nimport { navtreeExpandedValuesSet } from \"@/actions/navigation/navtree-expanded-set\";\r\n\r\nimport Tree from \"./Tree/Tree\";\r\nimport LinkTreeItem from \"./Tree/LinkTreeItem\";\r\n\r\nexport interface PackageContentTreeProps {\r\n  className?: string;\r\n}\r\n\r\nconst PackageContentTree = ({ className }: PackageContentTreeProps) => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const navtreeExpandedValues = useSelector(navtreeExpandedValuesSelector);\r\n  const onExpandedValuesChanged = React.useCallback((values: string[]) => {\r\n    dispatch(navtreeExpandedValuesSet(values));\r\n  }, []);\r\n\r\n  const ingredientIds = useSelector((state) =>\r\n    packageIdObjectIdsSelector(state, \"ingredients\")\r\n  );\r\n  const potionBaseIds = useSelector((state) =>\r\n    packageIdObjectIdsSelector(state, \"potionBases\")\r\n  );\r\n  const potionEffectIds = useSelector((state) =>\r\n    packageIdObjectIdsSelector(state, \"potionEffects\")\r\n  );\r\n  return (\r\n    <Tree\r\n      className={className}\r\n      expandedValues={navtreeExpandedValues}\r\n      onExpandedValuesChanged={onExpandedValuesChanged}\r\n    >\r\n      <LinkTreeItem value=\"home\" to=\"/\" label={t(\"package.noun_titlecase\")}>\r\n        {/* <LinkTreeItem\r\n          value=\"ingredients\"\r\n          to=\"/ingredients\"\r\n          label={t(\"ingredient.noun_titlecase_plural\")}\r\n        >\r\n          {ingredientIds.map((id) => (\r\n            <LinkTreeItem\r\n              value={`ingredients/${id}`}\r\n              key={id}\r\n              label={id}\r\n              to={`/ingredients/${id}`}\r\n            />\r\n          ))}\r\n        </LinkTreeItem> */}\r\n        <LinkTreeItem\r\n          value=\"potion-bases\"\r\n          to=\"/potion-bases\"\r\n          label={t(\"potion_base.noun_titlecase_plural\")}\r\n        >\r\n          {potionBaseIds.map((id) => (\r\n            <LinkTreeItem\r\n              value={`potion-bases/${id}`}\r\n              key={id}\r\n              label={id}\r\n              to={`/potion-bases/${id}`}\r\n            />\r\n          ))}\r\n        </LinkTreeItem>\r\n        <LinkTreeItem\r\n          value=\"potion-effects\"\r\n          to=\"/potion-effects\"\r\n          label={t(\"potion_effect.noun_titlecase_plural\")}\r\n        >\r\n          {potionEffectIds.map((id) => (\r\n            <LinkTreeItem\r\n              value={`potion-effects/${id}`}\r\n              key={id}\r\n              label={id}\r\n              to={`/potion-effects/${id}`}\r\n            />\r\n          ))}\r\n        </LinkTreeItem>\r\n      </LinkTreeItem>\r\n    </Tree>\r\n  );\r\n};\r\n\r\nexport default PackageContentTree;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { packageSave } from \"@/actions/packages/package-save\";\r\nimport { packageNew } from \"@/actions/packages/package-new\";\r\n\r\nimport { useAction } from \"@/hooks/use-action\";\r\n\r\nimport useLoadPackage from \"@/services/package/hooks/use-load-package\";\r\n\r\nimport Menu from \"@/components/Menus/Menu\";\r\nimport MenuItem from \"@/components/Menus/MenuItem\";\r\nimport { useMenuCloseContext } from \"@/components/Menus/MenuCloseContext\";\r\nimport AbstractFileLoadButton from \"@/components/AbstractFileLoadButton\";\r\n\r\nimport AutoPopper from \"./AutoPopper\";\r\nimport Button from \"./Button\";\r\n\r\nconst PackageMenuButton = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <AutoPopper content={<PackageMenu />} placement=\"bottom-start\">\r\n      <Button variant=\"menu\">{t(\"package.noun_titlecase\")}</Button>\r\n    </AutoPopper>\r\n  );\r\n};\r\n\r\nconst PackageMenu = () => {\r\n  const { t } = useTranslation();\r\n  const { loadStatus, onLoadPackage } = useLoadPackage();\r\n  const requestMenuClose = useMenuCloseContext();\r\n  const onNew = useAction(packageNew);\r\n  const onSave = useAction(packageSave);\r\n  return (\r\n    <Menu>\r\n      <MenuItem onClick={onNew}>{t(\"package.new\")}</MenuItem>\r\n      <AbstractFileLoadButton\r\n        disabled={loadStatus == \"loading\"}\r\n        accept=\".zip\"\r\n        onFileLoaded={onLoadPackage}\r\n        onInteractionComplete={requestMenuClose}\r\n      >\r\n        {({ disabled, onClick }) => (\r\n          <MenuItem\r\n            autoDismissMenu={false}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n          >\r\n            {t(\"package.load\")}\r\n          </MenuItem>\r\n        )}\r\n      </AbstractFileLoadButton>\r\n      <MenuItem onClick={onSave}>{t(\"package.save\")}</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default PackageMenuButton;\r\n","import * as React from \"react\";\r\n\r\nimport DefaultTitlebarContent from \"../DefaultTitlebarContent\";\r\nimport Divider from \"../Divider\";\r\nimport PackageContentTree from \"../PackageContentTree\";\r\nimport TitleBar from \"../TitleBar\";\r\n\r\nimport styles from \"./Page.module.css\";\r\n\r\nexport interface PageProps {\r\n  titlebarContent?: React.ReactNode;\r\n  showContentTree?: boolean;\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({\r\n  titlebarContent,\r\n  showContentTree = true,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className={styles[\"page\"]}>\r\n      <TitleBar>\r\n        <DefaultTitlebarContent />\r\n        {titlebarContent}\r\n      </TitleBar>\r\n      <Divider />\r\n      <div className={styles[\"page-content\"]}>\r\n        {showContentTree && (\r\n          <>\r\n            <PackageContentTree className={styles[\"package-content\"]} />\r\n            <Divider orientation=\"vertical\" />\r\n          </>\r\n        )}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import Page from \"./Page\";\r\nexport default Page;\r\n","import * as React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport { Options, VirtualElement } from \"@popperjs/core\";\r\nimport { usePopper } from \"react-popper\";\r\n\r\nimport { useOutsideMouseEvent } from \"@/hooks/use-outside-mouse-event\";\r\nimport { useArrayState } from \"@/hooks/use-array-state\";\r\n\r\nimport {\r\n  PopperChildContextProvider,\r\n  usePopperChild,\r\n} from \"./PopperChildContext\";\r\n\r\nexport interface PopperProps {\r\n  anchorEl: Element | VirtualElement | null;\r\n  placement?: Options[\"placement\"];\r\n  isOpen: boolean;\r\n  onRequestClose?(): void;\r\n}\r\n\r\nconst noop = () => {\r\n  /*no op*/\r\n};\r\n\r\nconst Popper: React.FC<PopperProps> = ({\r\n  isOpen,\r\n  anchorEl,\r\n  placement = \"auto\",\r\n  onRequestClose = noop,\r\n  children,\r\n}) => {\r\n  const [popperRef, setPopperRef] = React.useState<HTMLDivElement | null>(null);\r\n  const { attributes, styles } = usePopper(\r\n    isOpen ? anchorEl : null,\r\n    popperRef,\r\n    {\r\n      placement,\r\n    }\r\n  );\r\n\r\n  // Register us as a child of a parent popper, if any is present.\r\n  usePopperChild(popperRef);\r\n\r\n  const [popperChildren, registerPopperChild, unregisterPopperChild] =\r\n    useArrayState<HTMLElement>();\r\n\r\n  // Close when a click happens on the outside.\r\n  // We still want to handle this even if we are a child, as the user\r\n  // may have clicked on a parent popper which should close us.\r\n  const insideRefs = React.useMemo(\r\n    () => [popperRef, ...popperChildren],\r\n    [popperChildren, popperRef]\r\n  );\r\n  useOutsideMouseEvent(insideRefs, onRequestClose);\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <PopperChildContextProvider\r\n      registerPopperChild={registerPopperChild}\r\n      unregisterPopperChild={unregisterPopperChild}\r\n    >\r\n      <div ref={setPopperRef} style={styles.popper} {...attributes.popper}>\r\n        {children}\r\n      </div>\r\n    </PopperChildContextProvider>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Popper;\r\n","import * as React from \"react\";\r\n\r\nexport interface PopperChildContext {\r\n  registerPopperChild(element: HTMLElement): void;\r\n  unregisterPopperChild(element: HTMLElement): void;\r\n}\r\n\r\nfunction noop() {\r\n  // no op.\r\n}\r\nconst noopPopperChildContext: PopperChildContext = {\r\n  registerPopperChild: noop,\r\n  unregisterPopperChild: noop,\r\n};\r\n\r\nexport const PopperChildContext =\r\n  React.createContext<PopperChildContext | null>(null);\r\n\r\nexport const usePopperChildContext = () => React.useContext(PopperChildContext);\r\n\r\nexport const PopperChildContextProvider: React.FC<PopperChildContext> = ({\r\n  registerPopperChild: contextRegister,\r\n  unregisterPopperChild: contextUnregister,\r\n  children,\r\n}) => {\r\n  const parent = usePopperChildContext();\r\n  const parentRegister = parent?.registerPopperChild;\r\n  const parentUnregister = parent?.unregisterPopperChild;\r\n\r\n  const registerPopperChild = React.useCallback(\r\n    (element: HTMLElement) => {\r\n      if (parentRegister) {\r\n        parentRegister(element);\r\n      }\r\n      contextRegister(element);\r\n    },\r\n    [contextRegister, parentRegister]\r\n  );\r\n\r\n  const unregisterPopperChild = React.useCallback(\r\n    (element: HTMLElement) => {\r\n      contextUnregister(element);\r\n      if (parentUnregister) {\r\n        parentUnregister;\r\n      }\r\n    },\r\n    [contextUnregister, parentUnregister]\r\n  );\r\n\r\n  const providedContext = React.useMemo(\r\n    () => ({\r\n      registerPopperChild,\r\n      unregisterPopperChild,\r\n    }),\r\n    [registerPopperChild, unregisterPopperChild]\r\n  );\r\n\r\n  return (\r\n    <PopperChildContext.Provider value={providedContext}>\r\n      {children}\r\n    </PopperChildContext.Provider>\r\n  );\r\n};\r\n\r\nexport function usePopperChild(element: HTMLElement | null) {\r\n  const popperContext =\r\n    React.useContext(PopperChildContext) ?? noopPopperChildContext;\r\n\r\n  // We do not want to trigger the effect when\r\n  //  the context changes, as the context will change\r\n  //  as a result of calling register and unregister.\r\n  // As a result, we will not function right if somehow our\r\n  //  element transfers to a different popup chain without re-rendering.\r\n  const ctxRef = React.useRef(popperContext);\r\n  React.useEffect(() => {\r\n    ctxRef.current = popperContext;\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (element) {\r\n      ctxRef.current.registerPopperChild(element);\r\n      return () => ctxRef.current.unregisterPopperChild(element);\r\n    }\r\n  }, [element]);\r\n}\r\n","export * from \"./Popper\";\r\nimport Popper from \"./Popper\";\r\nexport default Popper;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport TextAreaAutosize from \"react-textarea-autosize\";\r\n\r\nimport styles from \"./TextArea.module.css\";\r\n\r\n// TextAreaAutosize does something weird with the style props.\r\nexport type TextAreaProps = Omit<\r\n  React.TextareaHTMLAttributes<HTMLTextAreaElement>,\r\n  \"style\"\r\n> & {\r\n  minRows?: number;\r\n  maxRows?: number;\r\n};\r\n\r\nconst TextArea = (props: TextAreaProps) => (\r\n  <div className={classNames(styles[\"textarea\"], props.className)}>\r\n    <span className={styles[\"textarea-edge-left\"]} />\r\n    <span className={styles[\"textarea-edge-right\"]} />\r\n    <div className={styles[\"textarea-wrapper\"]}>\r\n      <TextAreaAutosize {...props} className={styles[\"textarea-input\"]} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default TextArea;\r\n","import TextArea from \"./TextArea\";\r\nexport * from \"./TextArea\";\r\nexport default TextArea;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport styles from \"./TextBox.module.css\";\r\n\r\nexport type TextBoxProps = Omit<\r\n  React.InputHTMLAttributes<HTMLInputElement>,\r\n  \"type\"\r\n>;\r\n\r\nconst TextBox = (props: TextBoxProps) => (\r\n  <input\r\n    {...props}\r\n    className={classNames(styles[\"textbox-input\"], props.className)}\r\n    type=\"text\"\r\n  />\r\n);\r\n\r\nexport default TextBox;\r\n","import TextBox from \"./TextBox\";\r\nexport * from \"./TextBox\";\r\nexport default TextBox;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport styles from \"./TitleBar.module.css\";\r\n\r\nexport interface TitleBarProps {\r\n  className?: string;\r\n  title?: string;\r\n}\r\nconst TitleBar: React.FC<TitleBarProps> = ({ className, title, children }) => {\r\n  return (\r\n    <div className={classNames(styles.titlebar, className)}>\r\n      <span className={styles[\"titlebar-heading\"]}>Crucible</span>\r\n      <div className={styles[\"titlebar-divider\"]} />\r\n      {title && <div className={styles[\"titlebar-title\"]}>{title}</div>}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import TitleBar from \"./TitleBar\";\r\nexport default TitleBar;\r\n","import * as React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { Options, VirtualElement } from \"@popperjs/core\";\r\nimport { usePopper } from \"react-popper\";\r\n\r\nexport interface PopperProps {\r\n  className?: string;\r\n  anchorEl: Element | VirtualElement | null;\r\n  placement?: Options[\"placement\"];\r\n  isOpen: boolean;\r\n}\r\n\r\nimport styles from \"./Tooltip.module.css\";\r\n\r\nconst Tooltip: React.FC<PopperProps> = ({\r\n  className,\r\n  isOpen,\r\n  anchorEl,\r\n  placement = \"auto\",\r\n  children,\r\n}) => {\r\n  const [popperRef, setPopperRef] = React.useState<HTMLDivElement | null>(null);\r\n  const [arrowRef, setArrowRef] = React.useState<HTMLDivElement | null>(null);\r\n\r\n  const { attributes, styles: popperStyles } = usePopper(\r\n    isOpen ? anchorEl : null,\r\n    popperRef,\r\n    {\r\n      placement,\r\n      modifiers: [\r\n        {\r\n          name: \"arrow\",\r\n          options: {\r\n            element: arrowRef,\r\n          },\r\n        },\r\n        {\r\n          name: \"offset\",\r\n          options: {\r\n            offset: [0, 8],\r\n          },\r\n        },\r\n      ],\r\n    }\r\n  );\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <div\r\n      ref={setPopperRef}\r\n      className={classNames(styles[\"tooltip\"], className)}\r\n      style={popperStyles.popper}\r\n      role=\"tooltip\"\r\n      {...attributes.popper}\r\n    >\r\n      {children}\r\n      <div\r\n        ref={setArrowRef}\r\n        data-popper-arrow\r\n        className={styles[\"tooltip-arrow\"]}\r\n        style={popperStyles.arrow}\r\n        {...attributes.arrow}\r\n      />\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import * as React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport { useLinkClicked } from \"@/link-utils\";\r\n\r\nimport TreeItem, { TreeItemProps } from \"./TreeItem\";\r\n\r\nexport interface LinkTreeItemProps extends TreeItemProps {\r\n  to: string;\r\n}\r\n\r\nconst LinkTreeItem: React.FC<LinkTreeItemProps> = ({\r\n  value,\r\n  to,\r\n  label,\r\n  children,\r\n}) => {\r\n  const { pathname } = useLocation();\r\n  const onClick = useLinkClicked(to);\r\n  return (\r\n    <TreeItem\r\n      value={value}\r\n      label={label}\r\n      selected={pathname == to}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </TreeItem>\r\n  );\r\n};\r\n\r\nexport default LinkTreeItem;\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { TreeChildContext } from \"./TreeChildContext\";\r\n\r\nimport styles from \"./Tree.module.css\";\r\n\r\nexport interface TreeProps {\r\n  expandedValues: string[];\r\n  onExpandedValuesChanged(expandedValues: string[]): void;\r\n  className?: string;\r\n  id?: string;\r\n}\r\n\r\nconst Tree: React.FC<TreeProps> = ({\r\n  className,\r\n  id,\r\n  expandedValues,\r\n  onExpandedValuesChanged,\r\n  children,\r\n}) => {\r\n  const context = React.useMemo(\r\n    () => ({\r\n      expandedValues,\r\n      setExpandedValues: onExpandedValuesChanged,\r\n    }),\r\n    [expandedValues, onExpandedValuesChanged]\r\n  );\r\n\r\n  return (\r\n    <TreeChildContext.Provider value={context}>\r\n      <ul id={id} className={classNames(\"tree\", styles[\"tree\"], className)}>\r\n        {children}\r\n      </ul>\r\n    </TreeChildContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Tree;\r\n","import * as React from \"react\";\r\n\r\nimport { emptyFrozenArray } from \"@/arrays\";\r\n\r\nexport interface TreeChildContext {\r\n  expandedValues: string[];\r\n  setExpandedValues(values: string[]): void;\r\n}\r\n\r\nfunction noop() {}\r\n\r\nexport const TreeChildContext = React.createContext<TreeChildContext>({\r\n  expandedValues: emptyFrozenArray<string>(),\r\n  setExpandedValues: noop,\r\n});\r\n\r\nexport function useTreeChildContext() {\r\n  return React.useContext(TreeChildContext);\r\n}\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronRight,\r\n  faChevronDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Tree from \"./Tree\";\r\n\r\nimport styles from \"./Tree.module.css\";\r\nimport { useTreeChildContext } from \"./TreeChildContext\";\r\n\r\nexport interface TreeItemProps {\r\n  id?: string;\r\n  className?: string;\r\n  value: string;\r\n  label: React.ReactNode;\r\n  selected?: boolean;\r\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\nconst TreeItem: React.FC<TreeItemProps> = ({\r\n  id,\r\n  label,\r\n  value,\r\n  selected,\r\n  onClick,\r\n  children,\r\n}) => {\r\n  const { expandedValues, setExpandedValues } = useTreeChildContext();\r\n\r\n  const isExpanded = expandedValues.indexOf(value) !== -1;\r\n\r\n  const onChevronClick = React.useCallback(\r\n    (e: React.MouseEvent<SVGSVGElement>) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      const isExpanded = expandedValues.indexOf(value) !== -1;\r\n      e.preventDefault();\r\n      if (isExpanded) {\r\n        setExpandedValues(expandedValues.filter((v) => v !== value));\r\n      } else {\r\n        setExpandedValues([...expandedValues, value]);\r\n      }\r\n    },\r\n    [expandedValues, setExpandedValues, value]\r\n  );\r\n\r\n  const onLabelClick = React.useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      const isExpanded = expandedValues.indexOf(value) !== -1;\r\n      if (!isExpanded) {\r\n        setExpandedValues([...expandedValues, value]);\r\n      }\r\n      if (onClick) {\r\n        onClick(e);\r\n      }\r\n    },\r\n    [onClick, expandedValues, value]\r\n  );\r\n  return (\r\n    <li id={id} className={classNames(\"tree-item\", styles[\"tree-item\"])}>\r\n      <div\r\n        className={classNames(\r\n          styles[\"tree-item-content\"],\r\n          selected && styles[\"tree-item-content--selected\"]\r\n        )}\r\n      >\r\n        {children ? (\r\n          <FontAwesomeIcon\r\n            className={styles[\"tree-item-chevron\"]}\r\n            fixedWidth\r\n            color=\"inherit\"\r\n            icon={isExpanded ? faChevronDown : faChevronRight}\r\n            onClick={onChevronClick}\r\n          />\r\n        ) : (\r\n          <div className={styles[\"tree-item-nochevron\"]} />\r\n        )}\r\n        <div className={styles[\"tree-item-label\"]} onClick={onLabelClick}>\r\n          {label}\r\n        </div>\r\n      </div>\r\n      {isExpanded && children && (\r\n        <Tree\r\n          expandedValues={expandedValues}\r\n          onExpandedValuesChanged={setExpandedValues}\r\n          className={styles[\"tree-item-children\"]}\r\n        >\r\n          {children}\r\n        </Tree>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TreeItem;\r\n","import { MapEntityPrototype } from \"@/map-config\";\r\n\r\nexport const DRAGOBJECT_NEW_ENTITY = \"entity-new\" as const;\r\nexport const newEntityDragObject = (prototype: MapEntityPrototype) => ({\r\n  type: DRAGOBJECT_NEW_ENTITY,\r\n  payload: { prototype },\r\n});\r\nexport type NewEntityDragObject = ReturnType<typeof newEntityDragObject>;\r\nexport function isNewEntityDragObject(item: any): item is NewEntityDragObject {\r\n  return item.type === DRAGOBJECT_NEW_ENTITY;\r\n}\r\n","export const POTION_RADIUS = 0.79;\r\n\r\nexport const VORTEX_MEDIUM = 1.25;\r\nexport const VORTEX_LARGE = 1.65;\r\n","import { DangerZonePartMapEntity } from \"@/map-config\";\r\n\r\nimport { EntityDef } from \"../../types\";\r\n\r\nfunction makeImg(src: string): HTMLImageElement {\r\n  const img = new Image();\r\n  img.onerror = console.error.bind(console);\r\n  img.src = src;\r\n  return img;\r\n}\r\n\r\nconst DangerZoneImages: Record<string, HTMLImageElement> = {\r\n  Bone1: makeImg(require(\"./Bone1.png\")),\r\n  Bone2: makeImg(require(\"./Bone2.png\")),\r\n  Fang1: makeImg(require(\"./Fang1.png\")),\r\n  Fang2: makeImg(require(\"./Fang2.png\")),\r\n  Skull1: makeImg(require(\"./Skull1.png\")),\r\n};\r\n\r\n// TODO: Use bones as mask\r\n/*\r\n    // ctx.save();\r\n    // ctx.scale(1, -1);\r\n    // const maskW = mask.width / 95;\r\n    // const maskH = mask.height / 95;\r\n    // ctx.translate(-maskW / 2, -maskH / 2);\r\n    // ctx.drawImage(mask, 0, 0, maskW, maskH);\r\n    // ctx.restore();\r\n\r\n    ctx.fillStyle = \"red\";\r\n    tweakStyles(ctx);\r\n\r\n    // ctx.save();\r\n    // ctx.beginPath();\r\n    // // Clip a bit outside the potion radius to get the bottle opening\r\n    // ctx.arc(0, 0, POTION_RADIUS + 0.01, 0, 2 * Math.PI);\r\n    // ctx.rect(-0.28, POTION_RADIUS - 0.01, 0.56, 0.28);\r\n    // ctx.clip();\r\n\r\n    // const oldComposite = ctx.globalCompositeOperation;\r\n    // ctx.globalCompositeOperation = \"source-in\";\r\n    // // Flood a section bigger than our expected draw to paint the whole mask\r\n    // ctx.fillRect(\r\n    //   -POTION_RADIUS * 3,\r\n    //   -POTION_RADIUS * 3,\r\n    //   POTION_RADIUS * 6,\r\n    //   POTION_RADIUS * 6\r\n    // );\r\n    // ctx.globalCompositeOperation = oldComposite;\r\n    // ctx.restore();\r\n*/\r\n\r\nconst DangerZonePartDef: EntityDef<DangerZonePartMapEntity> = {\r\n  hitRadius: 0.2,\r\n  render(\r\n    ctx: CanvasRenderingContext2D,\r\n    entity: DangerZonePartMapEntity,\r\n    tweakStyles: (ctx: CanvasRenderingContext2D) => void\r\n  ) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n\r\n    ctx.fillStyle = \"gray\";\r\n\r\n    tweakStyles(ctx);\r\n\r\n    ctx.rotate(degreesToRadians(entity.angle));\r\n\r\n    switch (entity.prefab) {\r\n      case \"Fang1\":\r\n        // 0.1226418, 0.400135\r\n        ctx.fillRect(-0.06, -0.02, 0.12, 0.4);\r\n        break;\r\n      case \"Fang2\":\r\n        // 0.1371522, 0.2445218\r\n        ctx.fillRect(-0.065, -0.12, 0.13, 0.24);\r\n        break;\r\n      case \"Bone1\":\r\n        // 0.1287996, 0.6983229\r\n        ctx.fillRect(-0.06, -0.345, 0.12, 0.69);\r\n        break;\r\n      case \"Bone2\":\r\n        // 0.1529365, 0.7249526\r\n        ctx.fillRect(-0.07, -0.36, 0.14, 0.72);\r\n        break;\r\n      case \"Skull1\":\r\n      default:\r\n        ctx.arc(0, 0, 0.24, 0, 2 * Math.PI);\r\n        break;\r\n    }\r\n    ctx.fill();\r\n\r\n    const img = DangerZoneImages[entity.prefab];\r\n    if (img) {\r\n      const w = img.width / 130;\r\n      const h = img.height / 130;\r\n      ctx.scale(1, -1);\r\n      ctx.translate(-w / 2, -h / 2);\r\n      ctx.drawImage(img, 0, 0, w, h);\r\n    }\r\n    ctx.restore();\r\n  },\r\n};\r\nexport default DangerZonePartDef;\r\n\r\nfunction degreesToRadians(degress: number): number {\r\n  return (degress * Math.PI) / 180;\r\n}\r\n","import DangerZonePartDef from \"./DangerZonePart\";\r\nexport default DangerZonePartDef;\r\n","import { ExperienceBonusMapEntity } from \"@/map-config\";\r\n\r\nimport { EntityDef } from \"../types\";\r\n\r\nconst ExperienceBonusDef: EntityDef<ExperienceBonusMapEntity> = {\r\n  hitRadius: 0.3,\r\n  render(\r\n    ctx: CanvasRenderingContext2D,\r\n    entity: ExperienceBonusMapEntity,\r\n    tweakStyles: (ctx: CanvasRenderingContext2D) => void\r\n  ) {\r\n    ctx.beginPath();\r\n    ctx.fillStyle = \"green\";\r\n    tweakStyles(ctx);\r\n    ctx.arc(0, 0, 0.3, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  },\r\n};\r\nexport default ExperienceBonusDef;\r\n","import { PotionEffectMapEntity } from \"@/map-config\";\r\nimport { RenderResources } from \"@/services/map-editor/entities/types\";\r\n\r\nimport { POTION_RADIUS } from \"../consts\";\r\nimport { EntityDef } from \"../types\";\r\n\r\ninterface ResourceCacheItem {\r\n  image: HTMLImageElement;\r\n  data: string;\r\n}\r\nconst resourceCache: Record<string, ResourceCacheItem> = {};\r\nfunction resourceToImage(\r\n  resourceId: string,\r\n  content: string\r\n): HTMLImageElement {\r\n  if (resourceCache[resourceId] && resourceCache[resourceId].data === content) {\r\n    return resourceCache[resourceId].image;\r\n  }\r\n\r\n  const img = new Image();\r\n  img.onerror = console.error.bind(console);\r\n  img.src = content;\r\n  resourceCache[resourceId] = {\r\n    image: img,\r\n    data: content,\r\n  };\r\n  return img;\r\n}\r\n\r\nfunction tryGetResourceImage(\r\n  effectId: string,\r\n  renderResources: RenderResources\r\n): HTMLImageElement | null {\r\n  const key = `potionEffect::${effectId}`;\r\n  if (!renderResources[key]) {\r\n    return null;\r\n  }\r\n  return resourceToImage(key, renderResources[key]);\r\n}\r\n\r\nconst PotionEffectDef: EntityDef<PotionEffectMapEntity> = {\r\n  hitRadius: POTION_RADIUS,\r\n  render(\r\n    ctx: CanvasRenderingContext2D,\r\n    entity: PotionEffectMapEntity,\r\n    tweakStyles: (ctx: CanvasRenderingContext2D) => void,\r\n    renderResources: RenderResources\r\n  ) {\r\n    ctx.save();\r\n\r\n    ctx.fillStyle = \"red\";\r\n    tweakStyles(ctx);\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, POTION_RADIUS, 0, 2 * Math.PI);\r\n    ctx.rect(-0.2, POTION_RADIUS - 0.04, 0.4, 0.24);\r\n    ctx.fill();\r\n\r\n    const img = tryGetResourceImage(entity.effect, renderResources);\r\n    if (img) {\r\n      const w = img.width / 30;\r\n      const h = img.height / 30;\r\n      ctx.scale(1, -1);\r\n      ctx.translate(-w / 2, -h / 2);\r\n      ctx.drawImage(img, 0, 0, w, h);\r\n    }\r\n\r\n    ctx.restore();\r\n  },\r\n};\r\nexport default PotionEffectDef;\r\n","import { VortexMapEntity } from \"@/map-config\";\r\nimport { VORTEX_LARGE, VORTEX_MEDIUM } from \"../consts\";\r\n\r\nimport { EntityDef } from \"../types\";\r\n\r\nconst VortexDef: EntityDef<VortexMapEntity> = {\r\n  hitRadius: VORTEX_LARGE,\r\n  render(\r\n    ctx: CanvasRenderingContext2D,\r\n    entity: VortexMapEntity,\r\n    tweakStyles: (ctx: CanvasRenderingContext2D) => void\r\n  ) {\r\n    ctx.beginPath();\r\n    ctx.fillStyle = \"gray\";\r\n    tweakStyles(ctx);\r\n    const size = entity.prefab == \"Medium\" ? VORTEX_MEDIUM : VORTEX_LARGE;\r\n    ctx.arc(0, 0, size, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  },\r\n};\r\nexport default VortexDef;\r\n","import { MapEntity } from \"@/map-config\";\r\n\r\nimport { EntityDef } from \"../types\";\r\n\r\nimport DangerZonePartDef from \"./DangerZonePart\";\r\nimport ExperienceBonusDef from \"./ExperienceBonus\";\r\nimport PotionEffectDef from \"./PotionEffect\";\r\nimport VortexDef from \"./Vortex\";\r\n\r\nexport const EntityDefsByType: Record<MapEntity[\"entityType\"], EntityDef> = {\r\n  DangerZonePart: DangerZonePartDef,\r\n  ExperienceBonus: ExperienceBonusDef,\r\n  PotionEffect: PotionEffectDef,\r\n  Vortex: VortexDef,\r\n};\r\n","import values from \"lodash/values\";\r\n\r\nexport * from \"./types\";\r\nexport * from \"./defs\";\r\n\r\nimport { EntityDefsByType } from \"./defs\";\r\nexport const LargestEntityRadius = values(EntityDefsByType).reduce(\r\n  (x, def) => Math.max(x, def.hitRadius),\r\n  0\r\n);\r\n","import {\r\n  calcSize,\r\n  normalizeRectangle,\r\n  Point,\r\n  pointIntersectsRect,\r\n  Rectangle,\r\n} from \"@/geometry\";\r\nimport { MapEntity } from \"@/map-config\";\r\n\r\ninterface TileData {\r\n  padding: { x: number; y: number };\r\n  entities: MapEntity[];\r\n}\r\n\r\nconst TileDataByType: Record<string, TileData> = {\r\n  \"danger-zone\": require(\"./danger-zone.json\"),\r\n};\r\n\r\nexport function generateTileEntities(\r\n  tileType: string,\r\n  rect: Rectangle\r\n): MapEntity[] {\r\n  const data = TileDataByType[tileType];\r\n  if (!data) {\r\n    return [];\r\n  }\r\n  return tileEntities(data, rect);\r\n}\r\n\r\nfunction tileEntities(tileData: TileData, rect: Rectangle): MapEntity[] {\r\n  rect = normalizeRectangle(rect);\r\n  const { entities: tileEntities, padding: tilePadding } = tileData;\r\n  const tileBounds: Rectangle = {\r\n    p1: {\r\n      x: tileEntities.reduce((x, e) => Math.min(x, e.x), 0) - tilePadding.x / 2,\r\n      y: tileEntities.reduce((y, e) => Math.min(y, e.y), 0) - tilePadding.y / 2,\r\n    },\r\n    p2: {\r\n      x: tileEntities.reduce((x, e) => Math.max(x, e.x), 0) + tilePadding.x / 2,\r\n      y: tileEntities.reduce((y, e) => Math.max(y, e.y), 0) + tilePadding.y / 2,\r\n    },\r\n  };\r\n\r\n  const tileSize = calcSize(tileBounds);\r\n\r\n  const entities: MapEntity[] = [];\r\n\r\n  for (\r\n    let tileXOrdinal = Math.floor(rect.p1.x / tileSize.width);\r\n    tileXOrdinal <= Math.ceil(rect.p2.x / tileSize.width);\r\n    tileXOrdinal++\r\n  ) {\r\n    for (\r\n      let tileYOrdinal = Math.floor(rect.p1.y / tileSize.height);\r\n      tileYOrdinal <= Math.ceil(rect.p2.y / tileSize.height);\r\n      tileYOrdinal++\r\n    ) {\r\n      for (let i = 0; i < tileEntities.length; i++) {\r\n        const tileEntity = tileEntities[i];\r\n        const p: Point = {\r\n          x: tileEntity.x + tileSize.width * tileXOrdinal,\r\n          y: tileEntity.y + tileSize.height * tileYOrdinal,\r\n        };\r\n        if (!pointIntersectsRect(p, rect)) {\r\n          continue;\r\n        }\r\n        entities.push({\r\n          ...tileEntity,\r\n          ...p,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return entities;\r\n}\r\n","export type ValueSetter<T> = T | ((old: T) => T);\r\n\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  T extends Target[P1]\r\n>(target: Target, p1: P1, value: ValueSetter<T>): Target;\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  P2 extends keyof Target[P1],\r\n  T extends Target[P1][P2]\r\n>(target: Target, p1: P1, p2: P2, value: ValueSetter<T>): Target;\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  P2 extends keyof Target[P1],\r\n  P3 extends keyof Target[P1][P2],\r\n  T extends Target[P1][P2][P3]\r\n>(target: Target, p1: P1, p2: P2, p3: P3, value: ValueSetter<T>): Target;\r\nexport function fpSet<\r\n  Target extends Record<string, any> | any[],\r\n  P1 extends keyof Target,\r\n  P2 extends keyof Target[P1],\r\n  P3 extends keyof Target[P1][P2],\r\n  P4 extends keyof Target[P1][P2][P3],\r\n  T extends Target[P1][P2][P3][P4]\r\n>(\r\n  target: Target,\r\n  p1: P1,\r\n  p2: P2,\r\n  p3: P3,\r\n  p4: P4,\r\n  value: ValueSetter<T>\r\n): Target;\r\nexport function fpSet(...args: any[]): any {\r\n  const target = args[0];\r\n  const path = args.slice(1, args.length - 1).map(String);\r\n  const value = args[args.length - 1];\r\n  return fpSetByArray(target, path, value);\r\n}\r\n\r\nexport function fpSetByArray<T extends Record<string, any>>(\r\n  target: T,\r\n  path: (string | number)[],\r\n  value: ValueSetter<any>\r\n): T {\r\n  if (path.length === 0) {\r\n    if (typeof value === \"function\") {\r\n      return value(target);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  const firstPaths = path.slice(0, path.length - 1).map(String);\r\n  const lastPath = path[path.length - 1];\r\n\r\n  const newData = clone(target);\r\n\r\n  let rollingTarget: any = newData;\r\n\r\n  for (const seg of firstPaths) {\r\n    rollingTarget[seg] = clone(rollingTarget[seg]);\r\n    rollingTarget = rollingTarget[seg];\r\n  }\r\n\r\n  if (typeof value === \"function\") {\r\n    rollingTarget[lastPath] = value(rollingTarget[lastPath]);\r\n  } else {\r\n    rollingTarget[lastPath] = value;\r\n  }\r\n\r\n  return newData;\r\n}\r\n\r\nfunction clone<T extends Record<string, unknown> | any[]>(obj: T): T {\r\n  if (Array.isArray(obj)) {\r\n    return obj.slice() as T;\r\n  }\r\n  return Object.assign({}, obj);\r\n}\r\n","export interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\nexport const ZeroPoint = Object.freeze({ x: 0, y: 0 });\r\n\r\nexport interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Rectangle {\r\n  p1: Point;\r\n  p2: Point;\r\n}\r\n\r\nexport const ZeroRect = Object.freeze({ p1: ZeroPoint, p2: ZeroPoint });\r\n\r\nexport function pointAdd(p1: Point, p2: Point): Point {\r\n  return {\r\n    x: p1.x + p2.x,\r\n    y: p1.y + p2.y,\r\n  };\r\n}\r\n\r\nexport function pointSubtract(p1: Point, p2: Point): Point {\r\n  return {\r\n    x: p1.x - p2.x,\r\n    y: p1.y - p2.y,\r\n  };\r\n}\r\n\r\nexport function magnitude(v: Point): number {\r\n  return Math.sqrt(v.x * v.x + v.y * v.y);\r\n}\r\n\r\nexport function normalizeRectangle(p1: Point, p2: Point): Rectangle;\r\nexport function normalizeRectangle(r: Rectangle): Rectangle;\r\nexport function normalizeRectangle(...args: any[]): Rectangle {\r\n  let p1: Point;\r\n  let p2: Point;\r\n  if (args.length === 1) {\r\n    const r = args[0] as Rectangle;\r\n    p1 = r.p1;\r\n    p2 = r.p2;\r\n  } else {\r\n    p1 = args[0] as Point;\r\n    p2 = args[1] as Point;\r\n  }\r\n  return {\r\n    p1: {\r\n      x: Math.min(p1.x, p2.x),\r\n      y: Math.min(p1.y, p2.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(p1.x, p2.x),\r\n      y: Math.max(p1.y, p2.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function addPointToRect(r: Rectangle, p: Point): Rectangle {\r\n  return {\r\n    p1: {\r\n      x: Math.min(r.p1.x, p.x),\r\n      y: Math.min(r.p1.y, p.y),\r\n    },\r\n    p2: {\r\n      x: Math.max(r.p2.x, p.x),\r\n      y: Math.max(r.p2.y, p.y),\r\n    },\r\n  };\r\n}\r\n\r\nexport function pointIntersectsRect(p: Point, r: Rectangle): boolean {\r\n  r = normalizeRectangle(r);\r\n\r\n  if (r.p1.x > p.x || r.p2.x < p.x) {\r\n    return false;\r\n  }\r\n\r\n  if (r.p1.y > p.y || r.p2.y < p.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function calcSize(r: Rectangle): Size {\r\n  r = normalizeRectangle(r);\r\n  return {\r\n    width: r.p2.x - r.p1.x,\r\n    height: r.p2.y - r.p1.y,\r\n  };\r\n}\r\n","import { createHashHistory } from \"history\";\r\n\r\nconst history = createHashHistory();\r\nexport default history;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nexport function useAction(actionCreator: () => AnyAction): () => AnyAction;\r\nexport function useAction<Args>(\r\n  actionCreator: (...args: Args[]) => AnyAction\r\n): () => AnyAction;\r\nexport function useAction<A0, Args>(\r\n  actionCreator: (a0: A0, ...args: Args[]) => AnyAction,\r\n  a0: A0\r\n): () => AnyAction;\r\nexport function useAction(\r\n  actionCreator: (...args: any[]) => AnyAction,\r\n  ...preBind: any[]\r\n): () => AnyAction {\r\n  const dispatch = useDispatch();\r\n  return React.useCallback(() => {\r\n    const action = actionCreator(...preBind);\r\n    if (action) {\r\n      dispatch(action);\r\n    }\r\n  }, [dispatch, actionCreator, ...preBind]) as any;\r\n}\r\n\r\nexport function useClickAction(\r\n  actionCreator: (...args: any[]) => AnyAction,\r\n  ...preBind: any[]\r\n): (e: React.MouseEvent) => AnyAction {\r\n  const dispatch = useDispatch();\r\n  return React.useCallback(\r\n    (e: React.MouseEvent) => {\r\n      if (e.defaultPrevented) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      const action = actionCreator(...preBind);\r\n      if (action) {\r\n        dispatch(action);\r\n      }\r\n    },\r\n    [dispatch, actionCreator, ...preBind]\r\n  ) as any;\r\n}\r\n","import * as React from \"react\";\r\nimport difference from \"lodash/difference\";\r\n\r\nexport type UseArrayState<T> = [\r\n  items: T[],\r\n  addItem: (value: T) => void,\r\n  removeItem: (value: T) => void,\r\n  setItems: (items: T[]) => void\r\n];\r\n\r\nexport function useArrayState<T>(defaultValue: T[] = []): UseArrayState<T> {\r\n  const [items, setItems] = React.useState(defaultValue);\r\n  const addItem = React.useCallback(\r\n    (item: T) => {\r\n      setItems([...items, item]);\r\n    },\r\n    [items]\r\n  );\r\n  const removeItem = React.useCallback(\r\n    (item: T) => {\r\n      setItems(difference(items, [item]));\r\n    },\r\n    [items]\r\n  );\r\n\r\n  return [items, addItem, removeItem, setItems];\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useBooleanSetState(\r\n  defaultState: boolean = false\r\n): [boolean, () => void, () => void] {\r\n  const [state, setState] = React.useState(defaultState);\r\n\r\n  const setTrue = React.useCallback(() => setState(true), []);\r\n  const setFalse = React.useCallback(() => setState(false), []);\r\n\r\n  return [state, setTrue, setFalse];\r\n}\r\n","import * as React from \"react\";\r\n\r\ninterface UseComponentBounds {\r\n  left: number;\r\n  top: number;\r\n  right: number;\r\n  bottom: number;\r\n  width: number;\r\n  height: number;\r\n}\r\nexport function useComponentBounds(ref: React.RefObject<HTMLElement | null>) {\r\n  const [size, setSize] = React.useState<UseComponentBounds>({\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    const observer = new ResizeObserver(() => {\r\n      const el = ref.current;\r\n      if (!el) {\r\n        return;\r\n      }\r\n      const b = el.getBoundingClientRect();\r\n      setSize({\r\n        top: b.top,\r\n        left: b.left,\r\n        right: b.right,\r\n        bottom: b.bottom,\r\n        width: b.width,\r\n        height: b.height,\r\n      });\r\n    });\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [ref]);\r\n\r\n  return size;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function useNativeEvent<\r\n  T extends GlobalEventHandlers,\r\n  K extends keyof GlobalEventHandlersEventMap\r\n>(\r\n  ref: React.RefObject<T | null>,\r\n  type: K,\r\n  listener: (\r\n    this: GlobalEventHandlers,\r\n    ev: GlobalEventHandlersEventMap[K]\r\n  ) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n) {\r\n  React.useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    // De-reference the target so we remove from the right element.\r\n    const listenTarget = ref.current;\r\n\r\n    listenTarget.addEventListener(type, listener, options);\r\n    return () => {\r\n      listenTarget.removeEventListener(type, listener, options);\r\n    };\r\n  }, [type, listener, ref, options]);\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { asArray, MaybeArray } from \"@/arrays\";\r\n\r\nexport function useOutsideMouseEvent(\r\n  element: MaybeArray<HTMLElement | null>,\r\n  onOutsideEvent: () => void,\r\n  when = true\r\n) {\r\n  const onEvent = React.useCallback(\r\n    (e: MouseEvent | TouchEvent) => {\r\n      const elements = asArray(element).filter(isTruthy);\r\n      if (!elements.length) {\r\n        return;\r\n      }\r\n\r\n      if (elements.every((element) => !element.contains(e.target as any))) {\r\n        onOutsideEvent();\r\n      }\r\n    },\r\n    [element, onOutsideEvent]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (!when) {\r\n      return;\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", onEvent);\r\n    document.addEventListener(\"touchstart\", onEvent);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", onEvent);\r\n      document.removeEventListener(\"touchstart\", onEvent);\r\n    };\r\n  }, [onEvent, when]);\r\n}\r\n\r\nfunction isTruthy<T>(x: T | null | undefined): x is T {\r\n  return Boolean(x);\r\n}\r\n","import { AppState } from \"@/state\";\r\nimport { useSelector as realUseSelector } from \"react-redux\";\r\n\r\nexport function useSelector<T>(selector: (state: AppState) => T) {\r\n  return realUseSelector((state) => selector(state as AppState));\r\n}\r\n","import \"@/styles\";\r\n\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport Root from \"./root\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nif (rootEl) {\r\n  ReactDOM.render(<Root />, rootEl);\r\n}\r\n","import history from \"@/history\";\r\nimport { isModifierPressed } from \"@/modifier-keys\";\r\nimport React from \"react\";\r\n\r\nexport function useLinkClicked(\r\n  to: string,\r\n  target?: string,\r\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void\r\n) {\r\n  return React.useCallback(\r\n    (event: React.MouseEvent<HTMLElement>) => {\r\n      if (onClick) {\r\n        onClick(event);\r\n      }\r\n\r\n      if (\r\n        !event.defaultPrevented && // onClick prevented default\r\n        event.button === 0 && // ignore everything but left clicks\r\n        (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\r\n        !isModifierPressed(event) // ignore clicks with modifier keys\r\n      ) {\r\n        event.preventDefault();\r\n\r\n        history.push(to);\r\n      }\r\n    },\r\n    [to, target, onClick]\r\n  );\r\n}\r\n","const oil = require(\"./oil.json\");\r\nconst water = require(\"./water.json\");\r\n\r\nexport const TemplatesByName = {\r\n  oil,\r\n  water,\r\n};\r\n\r\nexport type TemplateName = keyof typeof TemplatesByName;\r\n","import { keyboardModifierUseMeta } from \"./runtime-env\";\r\n\r\nexport const MODIFIER_KEYS_NONE = Object.freeze<ModifierKeys>({});\r\n\r\nexport interface ModifierKeys {\r\n  ctrlMetaKey?: boolean;\r\n  shiftKey?: boolean;\r\n  altKey?: boolean;\r\n}\r\n\r\nexport interface MouseEventModifierKeys {\r\n  ctrlKey: boolean;\r\n  altKey: boolean;\r\n  shiftKey: boolean;\r\n  metaKey: boolean;\r\n}\r\nexport function getModifiers(e: MouseEventModifierKeys): ModifierKeys {\r\n  const { ctrlKey, altKey, shiftKey, metaKey } = e;\r\n  return {\r\n    // Mac reserves ctrl for system use, apps use meta.\r\n    ctrlMetaKey: keyboardModifierUseMeta ? metaKey : ctrlKey,\r\n    altKey,\r\n    shiftKey,\r\n  };\r\n}\r\n\r\nexport function isModifierPressed(event: React.MouseEvent<any>) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\nimport { packageLoadStatusSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport NoPackageView from \"./views/NoPackageView\";\r\nimport LoadingPackageView from \"./views/LoadingPackageView\";\r\nimport PackageView from \"./views/PackageView\";\r\nimport LoadErrorView from \"./views/LoadErrorView\";\r\n\r\nconst HomePage: React.FC = () => {\r\n  const loadingState = useSelector(packageLoadStatusSelector);\r\n  return (\r\n    <>\r\n      {loadingState == \"idle\" && <NoPackageView />}\r\n      {loadingState == \"loading\" && <LoadingPackageView />}\r\n      {loadingState == \"loaded\" && <PackageView />}\r\n      {loadingState == \"error\" && <LoadErrorView />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import HomePage from \"./HomePage\";\r\nexport default HomePage;\r\n","import * as React from \"react\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport Page from \"@/components/Page\";\r\n\r\nimport { packageLoadErrorSelector } from \"@/services/package/selectors/package\";\r\n\r\nconst LoadErrorView = () => {\r\n  const error = useSelector(packageLoadErrorSelector);\r\n  return (\r\n    <Page showContentTree={false}>\r\n      <code>{error}</code>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoadErrorView;\r\n","import * as React from \"react\";\r\n\r\nimport Page from \"@/components/Page\";\r\n\r\nconst NoPackageView = () => {\r\n  return <Page showContentTree={false}>Loading package.</Page>;\r\n};\r\n\r\nexport default NoPackageView;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport Page from \"@/components/Page\";\r\n\r\nimport styles from \"./NoPackageView.module.css\";\r\n\r\nconst NoPackageView = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Page showContentTree={false}>\r\n      <div className={styles[\"text\"]}>{t(\"package.message_no_package\")}</div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NoPackageView;\r\n","import NoPackageView from \"./NoPackageView\";\r\nexport default NoPackageView;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageDataSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport Page from \"@/components/Page\";\r\nimport Flow from \"@/components/Flow\";\r\nimport CommitTextBox from \"@/components/CommitTextBox\";\r\nimport CommitTextArea from \"@/components/CommitTextArea\";\r\n\r\nimport { packageDataSet } from \"@/actions/packages/package-data-set\";\r\n\r\nimport styles from \"./PackageView.module.css\";\r\n\r\nconst PackageView = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const packageData = useSelector(packageDataSelector);\r\n\r\n  const onSetPackageName = React.useCallback((name: string) => {\r\n    dispatch(packageDataSet(\"name\", name));\r\n  }, []);\r\n  const onSetPackageAuthor = React.useCallback((author: string) => {\r\n    dispatch(packageDataSet(\"author\", author));\r\n  }, []);\r\n  const onSetPackageDescription = React.useCallback((description: string) => {\r\n    dispatch(packageDataSet(\"description\", description));\r\n  }, []);\r\n\r\n  return (\r\n    <Page>\r\n      <Flow className={styles[\"package-editor-content\"]}>\r\n        <div className={styles[\"package-editor-field\"]}>\r\n          <label>{t(\"package.name\")}</label>\r\n          <CommitTextBox\r\n            value={packageData?.name ?? \"\"}\r\n            onCommit={onSetPackageName}\r\n          />\r\n        </div>\r\n        <div className={styles[\"package-editor-field\"]}>\r\n          <label>{t(\"package.author\")}</label>\r\n          <CommitTextBox\r\n            value={packageData?.author ?? \"\"}\r\n            onCommit={onSetPackageAuthor}\r\n          />\r\n        </div>\r\n        <div className={styles[\"package-editor-field\"]}>\r\n          <label>{t(\"package.description\")}</label>\r\n          <CommitTextArea\r\n            value={packageData?.description ?? \"\"}\r\n            onCommit={onSetPackageDescription}\r\n          />\r\n        </div>\r\n      </Flow>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PackageView;\r\n","import PackageView from \"./PackageView\";\r\nexport default PackageView;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { packageIdObjectNew } from \"@/actions/packages/package-idobject-new\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport EnsurePackageLoaded from \"@/components/EnsurePackageLoaded\";\r\nimport Page from \"@/components/Page\";\r\nimport Flow from \"@/components/Flow\";\r\nimport Button from \"@/components/Button\";\r\n\r\nimport { packageIdObjectIdsSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport Modal from \"@/components/Modal\";\r\nimport TextBox from \"@/components/TextBox\";\r\n\r\nconst IngredientsListPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const ingredientIds = useSelector((state) =>\r\n    packageIdObjectIdsSelector(state, \"ingredients\")\r\n  );\r\n\r\n  const [newIngredientId, setNewIngredientId] = React.useState<string | null>(\r\n    null\r\n  );\r\n\r\n  const onRequestNewIngredient = React.useCallback(() => {\r\n    setNewIngredientId(\"\");\r\n  }, []);\r\n  const onNewIngredient = React.useCallback(() => {\r\n    if (newIngredientId != null && newIngredientId.length > 0) {\r\n      setNewIngredientId(null);\r\n      dispatch(packageIdObjectNew(\"ingredients\", newIngredientId));\r\n    }\r\n  }, [newIngredientId]);\r\n\r\n  return (\r\n    <>\r\n      <EnsurePackageLoaded />\r\n      <Page>\r\n        <Flow>\r\n          <ul>\r\n            {ingredientIds.map((potionBaseId) => (\r\n              <li key={potionBaseId}>\r\n                <Link to={`/ingredients/${potionBaseId}`}>{potionBaseId}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          {/* <Button onClick={onRequestNewIngredient}>{t(\"ingredient.new\")}</Button>\r\n        <Modal isOpen={newIngredientId != null}>\r\n          <p>{t(\"potion_base.new_id_prompt\")}</p>\r\n          <div>\r\n            <TextBox\r\n              autoFocus\r\n              value={newIngredientId!}\r\n              onChange={(e) => setNewIngredientId(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              disabled={newIngredientId == null || newIngredientId == \"\"}\r\n              onClick={onNewIngredient}\r\n            >\r\n              {t(\"potion_base.new\")}\r\n            </Button>\r\n          </div>\r\n        </Modal> */}\r\n        </Flow>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientsListPage;\r\n","import IngredientsListPage from \"./IngredientsListPage\";\r\nexport default IngredientsListPage;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"@/history\";\r\n\r\nimport { packageIdObjectNew } from \"@/actions/packages/package-idobject-new\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport Page from \"@/components/Page\";\r\nimport Flow from \"@/components/Flow\";\r\nimport Button from \"@/components/Button\";\r\nimport EnsurePackageLoaded from \"@/components/EnsurePackageLoaded\";\r\n\r\nimport { packageIdObjectIdsSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport Modal from \"@/components/Modal\";\r\nimport TextBox from \"@/components/TextBox\";\r\n\r\nconst PotionBaseListPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const potionBaseIds = useSelector((state) =>\r\n    packageIdObjectIdsSelector(state, \"potionBases\")\r\n  );\r\n\r\n  const [newPotionId, setNewPotionId] = React.useState<string | null>(null);\r\n\r\n  const onRequestNewPotionBase = React.useCallback(() => {\r\n    setNewPotionId(\"\");\r\n  }, []);\r\n  const onCancelNewPotionBase = React.useCallback(() => {\r\n    setNewPotionId(null);\r\n  }, []);\r\n  const onNewPotionBase = React.useCallback(() => {\r\n    if (newPotionId != null && newPotionId.length > 0) {\r\n      setNewPotionId(null);\r\n      dispatch(packageIdObjectNew(\"potionBases\", newPotionId));\r\n      history.push(`/potion-bases/${newPotionId}`);\r\n    }\r\n  }, [newPotionId]);\r\n\r\n  return (\r\n    <>\r\n      <EnsurePackageLoaded />\r\n      <Page>\r\n        <Flow>\r\n          <ul>\r\n            {potionBaseIds.map((potionBaseId) => (\r\n              <li key={potionBaseId}>\r\n                <Link to={`/potion-bases/${potionBaseId}`}>{potionBaseId}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Button variant=\"primary\" onClick={onRequestNewPotionBase}>\r\n            {t(\"potion_base.new\")}\r\n          </Button>\r\n          <Modal\r\n            isOpen={newPotionId != null}\r\n            onRequestClose={onCancelNewPotionBase}\r\n          >\r\n            <p>{t(\"potion_base.new_id_prompt\")}</p>\r\n            <div>\r\n              <TextBox\r\n                autoFocus\r\n                value={newPotionId!}\r\n                onChange={(e) => setNewPotionId(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button\r\n                disabled={newPotionId == null || newPotionId == \"\"}\r\n                onClick={onNewPotionBase}\r\n              >\r\n                {t(\"potion_base.new\")}\r\n              </Button>\r\n            </div>\r\n          </Modal>\r\n        </Flow>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PotionBaseListPage;\r\n","import PotionBaseListPage from \"./PotionBaseListPage\";\r\nexport default PotionBaseListPage;\r\n","import * as React from \"react\";\r\nimport { RouteChildrenProps } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport history from \"@/history\";\r\n\r\nimport { potionBaseMapEdit } from \"@/actions/potion-bases/map-edit\";\r\n\r\nimport EnsurePackageLoaded from \"@/components/EnsurePackageLoaded\";\r\nimport Page from \"@/components/Page\";\r\n\r\nimport MapWindow from \"./components/MapWindow\";\r\nimport MapMenuButton from \"./components/MapMenuButton\";\r\n\r\nexport interface PotionBaseMapEditorPageParams {\r\n  potionBaseId: string;\r\n}\r\n\r\nconst PotionBaseMapEditorPage: React.FC<\r\n  RouteChildrenProps<PotionBaseMapEditorPageParams>\r\n> = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { potionBaseId } = match?.params ?? {};\r\n\r\n  React.useEffect(() => {\r\n    if (potionBaseId) {\r\n      dispatch(potionBaseMapEdit(potionBaseId));\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, [potionBaseId]);\r\n\r\n  return (\r\n    <>\r\n      <EnsurePackageLoaded />\r\n      <Page titlebarContent={<MapMenuButton />}>\r\n        <MapWindow />\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PotionBaseMapEditorPage;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useClickAction } from \"@/hooks/use-action\";\r\n\r\nimport Menu from \"@/components/Menus/Menu\";\r\nimport MenuItem from \"@/components/Menus/MenuItem\";\r\nimport SubMenuItem from \"@/components/Menus/SubMenuItem\";\r\nimport DividerMenuItem from \"@/components/Menus/DividerMenuItem\";\r\nimport AutoPopper from \"@/components/AutoPopper\";\r\nimport Button from \"@/components/Button\";\r\n\r\nimport { mapEditorMapClear } from \"@/actions/map-editor/map-clear\";\r\nimport { mapEditorMapImportTemplate } from \"@/actions/map-editor/map-import-template\";\r\n\r\nconst MapMenuButton = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <AutoPopper content={<MapMenu />} placement=\"bottom-start\">\r\n      <Button variant=\"menu\">{t(\"map.toolbar_menu_item\")}</Button>\r\n    </AutoPopper>\r\n  );\r\n};\r\n\r\nexport default MapMenuButton;\r\n\r\nconst MapMenu = () => {\r\n  const { t } = useTranslation();\r\n  const onMapClear = useClickAction(mapEditorMapClear);\r\n  return (\r\n    <Menu>\r\n      <SubMenuItem content={<MapImportMenu />}>{t(\"map.import\")}</SubMenuItem>\r\n      <DividerMenuItem />\r\n      <MenuItem onClick={onMapClear}>{t(\"map.clear\")}</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MapImportMenu = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Menu>\r\n      <SubMenuItem content={<MapImportTemplateMenu />}>\r\n        {t(\"map.import_template\")}\r\n      </SubMenuItem>\r\n      <MenuItem disabled={true}>{t(\"map.import_file\")}</MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MapImportTemplateMenu = () => {\r\n  const { t } = useTranslation();\r\n  const onNewWaterMap = useClickAction(mapEditorMapImportTemplate, \"water\");\r\n  const onNewOilMap = useClickAction(mapEditorMapImportTemplate, \"oil\");\r\n  return (\r\n    <Menu>\r\n      <MenuItem onClick={onNewWaterMap}>\r\n        {t(\"potioncraft:bases.water_titlecase\")}\r\n      </MenuItem>\r\n      <MenuItem onClick={onNewOilMap}>\r\n        {t(\"potioncraft:bases.oil_titlecase\")}\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport MapEditor from \"@/components/MapEditor\";\r\nimport MapEditorToolBar from \"@/components/MapEditorToolbar\";\r\n\r\nimport styles from \"./MapWindow.module.css\";\r\n\r\nconst MapWindow = () => {\r\n  return (\r\n    <div className={styles[\"map-window-container\"]}>\r\n      <MapEditor className={styles[\"map-window-editor\"]} />\r\n      <MapEditorToolBar className={styles[\"map-window-toolbar\"]} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapWindow;\r\n","import MapWindow from \"./MapWindow\";\r\nexport default MapWindow;\r\n","import PotionBaseMapEditorPage from \"./PotionBaseMapEditorPage\";\r\nexport default PotionBaseMapEditorPage;\r\n","import * as React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageDataSetById } from \"@/actions/packages/package-data-set-byid\";\r\n\r\nimport { packageIdObjectDataSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport EnsurePackageLoaded from \"@/components/EnsurePackageLoaded\";\r\nimport Page from \"@/components/Page\";\r\nimport Flow from \"@/components/Flow\";\r\nimport FieldBox from \"@/components/FieldBox\";\r\nimport LinkButton from \"@/components/Button/LinkButton\";\r\nimport Divider from \"@/components/Divider\";\r\n\r\nimport PotionBaseName from \"./components/PotionBaseName/PotionBaseName\";\r\nimport PotionBaseTooltipImage from \"./components/PotionBaseTooltipImage/PotionBaseTooltipImage\";\r\nimport PotionBaseDescription from \"./components/PotionBaseDescription/PotionBaseDescription\";\r\nimport PotionBaseIcons from \"./components/PotionBaseIcons/PotionBaseIcons\";\r\nimport PotionBaseColor from \"./components/PotionBaseColor\";\r\n\r\nimport styles from \"./PotionBasePage.module.css\";\r\n\r\ninterface PotionBaseRouteParams {\r\n  potionBaseId: string;\r\n}\r\n\r\nconst PotionBasePage: React.FC<RouteComponentProps<PotionBaseRouteParams>> = ({\r\n  match: {\r\n    params: { potionBaseId },\r\n  },\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const potionBase = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionBases\", potionBaseId)\r\n  );\r\n\r\n  const onSetUnlockedOnStart = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      dispatch(\r\n        packageDataSetById(\r\n          \"potionBases\",\r\n          potionBaseId,\r\n          \"unlockedOnStart\",\r\n          e.target.checked\r\n        )\r\n      );\r\n    },\r\n    [potionBaseId]\r\n  );\r\n\r\n  if (!potionBase) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <EnsurePackageLoaded />\r\n      <Page>\r\n        <Flow>\r\n          <div className={styles[\"potionbase-editor-content\"]}>\r\n            <div className={styles[\"potionbase-editor-panels\"]}>\r\n              <div className={styles[\"potionbase-editor-left\"]}>\r\n                <PotionBaseName potionBaseId={potionBaseId} />\r\n                <Divider />\r\n                <PotionBaseTooltipImage potionBaseId={potionBaseId} />\r\n                <Divider />\r\n                <PotionBaseColor potionBaseId={potionBaseId} />\r\n                <PotionBaseDescription potionBaseId={potionBaseId} />\r\n              </div>\r\n              <div className={styles[\"potionbase-editor-right\"]}>\r\n                <FieldBox\r\n                  className={styles[\"potion-editor-settings\"]}\r\n                  label={t(\"potion_base.settings\")}\r\n                >\r\n                  <div>\r\n                    {t(\"potion_base.unlock_on_start\")}:{\" \"}\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={potionBase.unlockedOnStart ?? false}\r\n                      onChange={onSetUnlockedOnStart}\r\n                    />\r\n                  </div>\r\n                </FieldBox>\r\n                <div className={styles[\"potion-editor-icons\"]}>\r\n                  <PotionBaseIcons potionBaseId={potionBaseId} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <LinkButton\r\n              variant=\"primary\"\r\n              to={`/potion-bases/${potionBaseId}/map-editor`}\r\n            >\r\n              {t(\"potion_base.edit_map\")}\r\n            </LinkButton>\r\n          </div>\r\n        </Flow>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PotionBasePage;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageIdObjectDataSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport { packageDataSetById } from \"@/actions/packages/package-data-set-byid\";\r\n\r\nimport FieldBox from \"@/components/FieldBox\";\r\nimport ColorButton from \"@/components/ColorButton\";\r\n\r\nimport styles from \"./PotionBaseColor.module.css\";\r\n\r\nexport interface PotionBaseColorProps {\r\n  potionBaseId: string;\r\n}\r\n\r\nconst PotionBaseColor = ({ potionBaseId }: PotionBaseColorProps) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const potionBase = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionBases\", potionBaseId)\r\n  );\r\n\r\n  const onSetColor = React.useCallback(\r\n    (color: string) => {\r\n      dispatch(\r\n        packageDataSetById(\"potionBases\", potionBaseId, \"liquidColor\", color)\r\n      );\r\n    },\r\n    [potionBaseId]\r\n  );\r\n\r\n  if (!potionBase) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <FieldBox\r\n      label={t(\"potion_base.liquid_color\")}\r\n      className={styles[\"potionbase-liquidcolor\"]}\r\n    >\r\n      <ColorButton\r\n        color={potionBase.liquidColor ?? \"#FFFFFF\"}\r\n        onChange={onSetColor}\r\n      />\r\n    </FieldBox>\r\n  );\r\n};\r\n\r\nexport default PotionBaseColor;\r\n","import PotionBaseColor from \"./PotionBaseColor\";\r\nexport default PotionBaseColor;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageDataSetById } from \"@/actions/packages/package-data-set-byid\";\r\n\r\nimport { packageIdObjectDataSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport CommitTextArea from \"@/components/CommitTextArea\";\r\n\r\nimport styles from \"./PotionBaseDescription.module.css\";\r\n\r\nexport interface PotionBaseDescriptionProps {\r\n  potionBaseId: string;\r\n}\r\n\r\nconst PotionBaseDescription = ({\r\n  potionBaseId,\r\n}: PotionBaseDescriptionProps) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const potionBase = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionBases\", potionBaseId)\r\n  );\r\n\r\n  const onSetDescription = React.useCallback(\r\n    (description: string) => {\r\n      if (potionBase == null) {\r\n        return;\r\n      }\r\n      dispatch(\r\n        packageDataSetById(\r\n          \"potionBases\",\r\n          potionBaseId,\r\n          \"description\",\r\n          description\r\n        )\r\n      );\r\n    },\r\n    [potionBaseId]\r\n  );\r\n\r\n  if (!potionBase) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"potionbasedescription\"]}>\r\n      <CommitTextArea\r\n        className={styles[\"potionbasedescription-input\"]}\r\n        placeholder={t(\"potion_base.description\")}\r\n        minRows={10}\r\n        defaultValue={potionBase.description ?? \"\"}\r\n        onCommit={onSetDescription}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PotionBaseDescription;\r\n","import * as React from \"react\";\r\n\r\nimport { usePotionBaseResource } from \"@/services/package/hooks/use-potionbase-resource\";\r\n\r\nimport ImageField from \"@/components/ImageField\";\r\n\r\nimport styles from \"./PotionBaseIcons.module.css\";\r\n\r\nexport interface PotionbaseIconsProps {\r\n  potionBaseId: string;\r\n}\r\n\r\nconst PotionBaseIcons = ({ potionBaseId }: PotionbaseIconsProps) => {\r\n  const [ingredientListIcon, ingredientListIconName, onSetIngredientListIcon] =\r\n    usePotionBaseResource(potionBaseId, \"ingredientListIcon\");\r\n\r\n  const [menuButtonImage, menuButtonImageName, onSetMenuButtonImage] =\r\n    usePotionBaseResource(potionBaseId, \"menuButtonImage\");\r\n  const [\r\n    menuButtonHoverImage,\r\n    menuButtonHoverImageName,\r\n    onSetMenuButtonHoverImage,\r\n  ] = usePotionBaseResource(potionBaseId, \"menuButtonHoverImage\");\r\n  const [\r\n    menuButtonSelectedImage,\r\n    menuButtonSelectedImageName,\r\n    onSetMenuButtonSelectedImage,\r\n  ] = usePotionBaseResource(potionBaseId, \"menuButtonSelectedImage\");\r\n  const [\r\n    menuButtonLockedImage,\r\n    menuButtonLockedImageName,\r\n    onSetMenuButtonLockedImage,\r\n  ] = usePotionBaseResource(potionBaseId, \"menuButtonLockedImage\");\r\n\r\n  const [ladleImage, ladleImageName, onSetLadleImage] = usePotionBaseResource(\r\n    potionBaseId,\r\n    \"ladleImage\"\r\n  );\r\n  const [recipeStepImage, recipeStepImageName, onSetRecipeStepImage] =\r\n    usePotionBaseResource(potionBaseId, \"recipeStepImage\");\r\n  const [mapOriginImage, mapOriginImageName, onSetMapOriginImage] =\r\n    usePotionBaseResource(potionBaseId, \"mapOriginImage\");\r\n\r\n  return (\r\n    <div className={styles[\"potionbaseicons\"]}>\r\n      <ImageField\r\n        className={styles[\"potionbaseicons-imagefield\"]}\r\n        imageResource={menuButtonImage}\r\n        imageResourceName={menuButtonImageName}\r\n        onChange={onSetMenuButtonImage}\r\n      />\r\n      <div className={styles[\"potionbaseicons-imagetext\"]}>Menu</div>\r\n      <ImageField\r\n        className={styles[\"potionbaseicons-imagefield\"]}\r\n        imageResource={ingredientListIcon}\r\n        imageResourceName={ingredientListIconName}\r\n        onChange={onSetIngredientListIcon}\r\n      />\r\n      <div className={styles[\"potionbaseicons-imagetext\"]}>Ingredients</div>\r\n      <ImageField\r\n        className={styles[\"potionbaseicons-imagefield\"]}\r\n        imageResource={menuButtonSelectedImage}\r\n        imageResourceName={menuButtonSelectedImageName}\r\n        onChange={onSetMenuButtonSelectedImage}\r\n      />\r\n      <div className={styles[\"potionbaseicons-imagetext\"]}>Selected</div>\r\n      <ImageField\r\n        className={styles[\"potionbaseicons-imagefield\"]}\r\n        imageResource={recipeStepImage}\r\n        imageResourceName={recipeStepImageName}\r\n        onChange={onSetRecipeStepImage}\r\n      />\r\n      <div className={styles[\"potionbaseicons-imagetext\"]}>Recipe</div>\r\n      <ImageField\r\n        className={styles[\"potionbaseicons-imagefield\"]}\r\n        imageResource={menuButtonHoverImage}\r\n        imageResourceName={menuButtonHoverImageName}\r\n        onChange={onSetMenuButtonHoverImage}\r\n      />\r\n      <div className={styles[\"potionbaseicons-imagetext\"]}>Hover</div>\r\n      <ImageField\r\n        className={styles[\"potionbaseicons-imagefield\"]}\r\n        imageResource={ladleImage}\r\n        imageResourceName={ladleImageName}\r\n        onChange={onSetLadleImage}\r\n      />\r\n      <div className={styles[\"potionbaseicons-imagetext\"]}>Ladle</div>\r\n      <ImageField\r\n        className={styles[\"potionbaseicons-imagefield\"]}\r\n        imageResource={menuButtonLockedImage}\r\n        imageResourceName={menuButtonLockedImageName}\r\n        onChange={onSetMenuButtonLockedImage}\r\n      />\r\n      <div className={styles[\"potionbaseicons-imagetext\"]}>Locked</div>\r\n      <ImageField\r\n        className={styles[\"potionbaseicons-imagefield\"]}\r\n        imageResource={mapOriginImage}\r\n        imageResourceName={mapOriginImageName}\r\n        onChange={onSetMapOriginImage}\r\n      />\r\n      <div className={styles[\"potionbaseicons-imagetext\"]}>Origin</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PotionBaseIcons;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageDataSetById } from \"@/actions/packages/package-data-set-byid\";\r\nimport { packageIdObjectDataSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport CommitTextBox from \"@/components/CommitTextBox\";\r\n\r\nimport styles from \"./PotionBaseName.module.css\";\r\n\r\nexport interface PotionBaseNameProps {\r\n  potionBaseId: string;\r\n}\r\n\r\nconst PotionBaseName = ({ potionBaseId }: PotionBaseNameProps) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const potionBase = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionBases\", potionBaseId)\r\n  );\r\n\r\n  const onSetName = React.useCallback(\r\n    (name: string) => {\r\n      if (potionBase == null) {\r\n        return;\r\n      }\r\n      dispatch(packageDataSetById(\"potionBases\", potionBaseId, \"name\", name));\r\n    },\r\n    [potionBaseId]\r\n  );\r\n\r\n  if (!potionBase) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CommitTextBox\r\n        className={styles[\"potionbasename-input\"]}\r\n        placeholder={t(\"potion_base.name\")}\r\n        value={potionBase.name ?? \"\"}\r\n        onCommit={onSetName}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PotionBaseName;\r\n","import * as React from \"react\";\r\n\r\nimport ImageField from \"@/components/ImageField\";\r\nimport { usePotionBaseResource } from \"@/services/package/hooks/use-potionbase-resource\";\r\n\r\nimport styles from \"./PotionBaseTooltipImage.module.css\";\r\n\r\nexport interface PotionBaseTooltipImageProps {\r\n  potionBaseId: string;\r\n}\r\n\r\nconst PotionBaseTooltipImage = ({\r\n  potionBaseId,\r\n}: PotionBaseTooltipImageProps) => {\r\n  const [tooltipImage, tooltipImageName, onSetTooltipImage] =\r\n    usePotionBaseResource(potionBaseId, \"tooltipImage\");\r\n\r\n  return (\r\n    <ImageField\r\n      className={styles[\"potionbasetooltipimage\"]}\r\n      imageResource={tooltipImage}\r\n      imageResourceName={tooltipImageName}\r\n      onChange={onSetTooltipImage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PotionBaseTooltipImage;\r\n","import PotionBasePage from \"./PotionBasePage\";\r\nexport default PotionBasePage;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"@/history\";\r\n\r\nimport { packageIdObjectNew } from \"@/actions/packages/package-idobject-new\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport Page from \"@/components/Page\";\r\nimport Flow from \"@/components/Flow\";\r\nimport Button from \"@/components/Button\";\r\nimport EnsurePackageLoaded from \"@/components/EnsurePackageLoaded\";\r\n\r\nimport { packageIdObjectIdsSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport Modal from \"@/components/Modal\";\r\nimport TextBox from \"@/components/TextBox\";\r\n\r\nconst PotionEffectsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const potionEffectIds = useSelector((state) =>\r\n    packageIdObjectIdsSelector(state, \"potionEffects\")\r\n  );\r\n\r\n  const [newEffectId, setNewEffectId] = React.useState<string | null>(null);\r\n\r\n  const onRequestNewEffect = React.useCallback(() => {\r\n    setNewEffectId(\"\");\r\n  }, []);\r\n  const onCancelNewEffect = React.useCallback(() => {\r\n    setNewEffectId(null);\r\n  }, []);\r\n  const onNewPotionEffect = React.useCallback(() => {\r\n    setNewEffectId(null);\r\n    if (newEffectId != null && newEffectId.length > 0) {\r\n      dispatch(packageIdObjectNew(\"potionEffects\", newEffectId));\r\n      history.push(`/potion-effects/${newEffectId}`);\r\n    }\r\n  }, [newEffectId]);\r\n\r\n  return (\r\n    <>\r\n      <EnsurePackageLoaded />\r\n      <Page>\r\n        <Flow>\r\n          <ul>\r\n            {potionEffectIds.map((potionBaseId) => (\r\n              <li key={potionBaseId}>\r\n                <Link to={`/potion-effects/${potionBaseId}`}>\r\n                  {potionBaseId}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Button variant=\"primary\" onClick={onRequestNewEffect}>\r\n            {t(\"potion_effect.new\")}\r\n          </Button>\r\n          <Modal\r\n            isOpen={newEffectId != null}\r\n            onRequestClose={onCancelNewEffect}\r\n          >\r\n            <p>{t(\"potion_effect.new_id_prompt\")}</p>\r\n            <div>\r\n              <TextBox\r\n                autoFocus\r\n                value={newEffectId!}\r\n                onChange={(e) => setNewEffectId(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button\r\n                disabled={newEffectId == null || newEffectId == \"\"}\r\n                onClick={onNewPotionEffect}\r\n              >\r\n                {t(\"potion_effect.new\")}\r\n              </Button>\r\n            </div>\r\n          </Modal>\r\n        </Flow>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PotionEffectsPage;\r\n","import PotionBaseListPage from \"./PotionEffectListPage\";\r\nexport default PotionBaseListPage;\r\n","import * as React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageIdObjectDataSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport EnsurePackageLoaded from \"@/components/EnsurePackageLoaded\";\r\nimport Page from \"@/components/Page\";\r\nimport Flow from \"@/components/Flow\";\r\n\r\nimport PotionEffectName from \"./components/PotionEffectName\";\r\nimport PotionEffectIcon from \"./components/PotionEffectIcon\";\r\nimport PotionEffectColor from \"./components/PotionEffectColor\";\r\n\r\nimport styles from \"./PotionEffectPage.module.css\";\r\n\r\ninterface PotionEffectPageParams {\r\n  potionEffectId: string;\r\n}\r\n\r\nconst PotionEffectPage = ({\r\n  match: {\r\n    params: { potionEffectId },\r\n  },\r\n}: RouteComponentProps<PotionEffectPageParams>) => {\r\n  const { t } = useTranslation();\r\n\r\n  const potionEffect = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionEffects\", potionEffectId)\r\n  );\r\n\r\n  if (!potionEffect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <EnsurePackageLoaded />\r\n      <Page>\r\n        <Flow>\r\n          <div className={styles[\"potioneffect-content\"]}>\r\n            <PotionEffectName potionEffectId={potionEffectId} />\r\n            <PotionEffectIcon potionEffectId={potionEffectId} />\r\n            <PotionEffectColor potionEffectId={potionEffectId} />\r\n          </div>\r\n        </Flow>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PotionEffectPage;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageDataSetById } from \"@/actions/packages/package-data-set-byid\";\r\n\r\nimport { packageIdObjectDataSelector } from \"@/services/package/selectors/package\";\r\nimport FieldBox from \"@/components/FieldBox\";\r\nimport ColorButton from \"@/components/ColorButton\";\r\n\r\nimport styles from \"./PotionEffectColor.module.css\";\r\n\r\nexport interface PotionEffectColorProps {\r\n  potionEffectId: string;\r\n}\r\n\r\nconst PotionEffectColor = ({ potionEffectId }: PotionEffectColorProps) => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const potionEffect = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionEffects\", potionEffectId)\r\n  );\r\n\r\n  const onColorChange = React.useCallback(\r\n    (color: string) => {\r\n      dispatch(\r\n        packageDataSetById(\r\n          \"potionEffects\",\r\n          potionEffectId,\r\n          \"potionColor\",\r\n          color\r\n        )\r\n      );\r\n    },\r\n    [potionEffectId]\r\n  );\r\n\r\n  if (!potionEffect) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <FieldBox\r\n      label={t(\"potion_effect.potion_color\")}\r\n      className={styles[\"potioncolor-button\"]}\r\n    >\r\n      <ColorButton\r\n        color={potionEffect.potionColor ?? \"#FFFFFF\"}\r\n        onChange={onColorChange}\r\n      />\r\n    </FieldBox>\r\n  );\r\n};\r\n\r\nexport default PotionEffectColor;\r\n","import PotionEffectColor from \"./PotionEffectColor\";\r\nexport default PotionEffectColor;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { extname } from \"@/paths\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport {\r\n  packageIdObjectDataSelector,\r\n  packageIdObjectResourceSelector,\r\n} from \"@/services/package/selectors/package\";\r\n\r\nimport { packageResourceSetById } from \"@/actions/packages/package-resource-set-byid\";\r\n\r\nimport ImageField from \"@/components/ImageField\";\r\n\r\nexport interface PotionEffectIconProps {\r\n  potionEffectId: string;\r\n}\r\n\r\nconst PotionEffectIcon = ({ potionEffectId }: PotionEffectIconProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const potionEffect = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionEffects\", potionEffectId)\r\n  );\r\n\r\n  const effectIcon = useSelector((state) =>\r\n    packageIdObjectResourceSelector(\r\n      state,\r\n      \"potionEffects\",\r\n      potionEffectId,\r\n      \"icon\"\r\n    )\r\n  );\r\n  const setEffectIcon = React.useCallback(\r\n    (image: Uint8Array, imageName: string) => {\r\n      dispatch(\r\n        packageResourceSetById(\r\n          \"potionEffects\",\r\n          potionEffectId,\r\n          \"icon\",\r\n          `${potionEffectId}/icon.${extname(imageName)}`,\r\n          image\r\n        )\r\n      );\r\n    },\r\n    [potionEffectId]\r\n  );\r\n\r\n  if (!potionEffect) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ImageField\r\n      imageResource={effectIcon}\r\n      imageResourceName={potionEffect.name ?? null}\r\n      onChange={setEffectIcon}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PotionEffectIcon;\r\n","import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageIdObjectDataSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport { packageDataSetById } from \"@/actions/packages/package-data-set-byid\";\r\n\r\nimport CommitTextBox from \"@/components/CommitTextBox\";\r\n\r\nexport interface PotionEffectNameProps {\r\n  potionEffectId: string;\r\n}\r\n\r\nconst PotionEffectName = ({ potionEffectId }: PotionEffectNameProps) => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const potionEffect = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionEffects\", potionEffectId)\r\n  );\r\n\r\n  const onSetName = React.useCallback(\r\n    (name: string) => {\r\n      dispatch(\r\n        packageDataSetById(\"potionEffects\", potionEffectId, \"name\", name)\r\n      );\r\n    },\r\n    [potionEffectId]\r\n  );\r\n\r\n  if (!potionEffect) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <CommitTextBox\r\n      value={potionEffect?.name ?? \"\"}\r\n      placeholder={t(\"potion_effect.name\")}\r\n      onCommit={onSetName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PotionEffectName;\r\n","import PotionEffectPage from \"./PotionEffectPage\";\r\nexport default PotionEffectPage;\r\n","export function extname(path: string): string {\r\n  const idx = path.lastIndexOf(\".\");\r\n  return idx === -1 || idx + 1 == path.length ? \"\" : path.substring(idx + 1);\r\n}\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport servicesReducer from \"@/services/reducer\";\r\nimport { finalizeReducerList } from \"./utils\";\r\n\r\nconst finalizedReducer = finalizeReducerList(servicesReducer);\r\n\r\nexport default function reducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  return finalizedReducer(state, action);\r\n}\r\n","import { AppReducer } from \"./types\";\r\n\r\nexport const PRIORITY_PRE = -10;\r\nexport const PRIORITY_POST = 10;\r\n\r\nexport function reducerPriority(\r\n  priority: number,\r\n  reducer: AppReducer\r\n): AppReducer {\r\n  reducer.weight = priority;\r\n  return reducer;\r\n}\r\n\r\nexport function priorityBefore(reducer: AppReducer) {\r\n  return (reducer.weight ?? 0) - 1;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport sortBy from \"lodash/sortBy\";\r\n\r\nimport { MaybeArray } from \"@/arrays\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport { AppReducer } from \"./types\";\r\n\r\nexport function concatReducers(\r\n  ...reducers: MaybeArray<AppReducer>[]\r\n): AppReducer[] {\r\n  // Previously, this was reduceReducers and generated a reducer\r\n  //  that invokes each child reducer.\r\n  // However, we need to be able to order reducers across services,\r\n  //  so we must now aggregate a list of reducers and do a final ordering\r\n  //  step after all are collected.\r\n  return ([] as AppReducer[]).concat(...reducers);\r\n}\r\n\r\nexport function finalizeReducerList(reducers: AppReducer[]): AppReducer {\r\n  // Order the list by weight ascending.\r\n  const finalizedList = sortBy(reducers, (x: AppReducer) => x.weight || 0);\r\n\r\n  return (state: AppState = defaultAppState, action: AnyAction) => {\r\n    return finalizedList.reduce(\r\n      (state, reducer) => reducer(state, action),\r\n      state\r\n    );\r\n  };\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { Router } from \"react-router-dom\";\r\n\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nimport I18NProvider from \"@/services/i18n/components/I18NProvider\";\r\n\r\nimport StoreProvider from \"@/store/components/StoreProvider\";\r\n\r\nimport history from \"@/history\";\r\nimport Routes from \"@/routes\";\r\n\r\nconst Root: React.FC = () => (\r\n  <I18NProvider>\r\n    <StoreProvider>\r\n      <Router history={history}>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <Routes />\r\n        </DndProvider>\r\n      </Router>\r\n    </StoreProvider>\r\n  </I18NProvider>\r\n);\r\n\r\nexport default Root;\r\n","import * as React from \"react\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport HomePage from \"./pages/home\";\r\nimport IngredientsListPage from \"./pages/ingredients-list\";\r\nimport PotionBaseMapEditorPage from \"./pages/potionbase-mapeditor\";\r\nimport PotionBaseListPage from \"./pages/potionbase-list\";\r\nimport PotionBasePage from \"./pages/potionbase\";\r\nimport PotionEffectPage from \"./pages/potioneffect\";\r\nimport PotionEffectListPage from \"./pages/potioneffect-list\";\r\n\r\nconst Routes: React.FC = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={HomePage} />\r\n\r\n    <Route path=\"/ingredients\" exact component={IngredientsListPage} />\r\n\r\n    <Route path=\"/potion-bases\" exact component={PotionBaseListPage} />\r\n    <Route\r\n      path=\"/potion-bases/:potionBaseId\"\r\n      exact\r\n      component={PotionBasePage}\r\n    />\r\n    <Route\r\n      path=\"/potion-bases/:potionBaseId/map-editor\"\r\n      exact\r\n      component={PotionBaseMapEditorPage}\r\n    />\r\n\r\n    <Route path=\"/potion-effects\" exact component={PotionEffectListPage} />\r\n    <Route\r\n      path=\"/potion-effects/:potionEffectId\"\r\n      exact\r\n      component={PotionEffectPage}\r\n    />\r\n\r\n    <Redirect to=\"/\" />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import platform from \"platform\";\r\n\r\nconst OS_WINDOWS = /windows/i;\r\nconst OS_MAC = /Mac|iOS|(OS\\ X)/;\r\nconst OS_LINUX = /linux/i;\r\n\r\nexport type OSType = \"windows\" | \"mac\" | \"linux\" | \"unknown\";\r\n\r\nconst osPlatform = (platform.os && platform.os.family) || \"unknown\";\r\nexport const OSType: OSType = OS_WINDOWS.test(osPlatform)\r\n  ? \"windows\"\r\n  : OS_MAC.test(osPlatform)\r\n  ? \"mac\"\r\n  : OS_LINUX.test(osPlatform)\r\n  ? \"linux\"\r\n  : \"unknown\";\r\n\r\nexport const isProd: boolean = process.env.NODE_ENV === \"production\";\r\n\r\nexport const keyboardModifierUseMeta = osPlatform === \"mac\";\r\n","import union from \"lodash/union\";\r\nimport difference from \"lodash/difference\";\r\n\r\nimport { ModifierKeys } from \"./modifier-keys\";\r\n\r\nexport type SelectionMode =\r\n  | \"set\"\r\n  | \"append\"\r\n  | \"remove\"\r\n  | \"toggle\"\r\n  | \"set-if-unselected\";\r\n\r\nexport function getSelectMode(\r\n  modifiers: ModifierKeys,\r\n  defaultMode: SelectionMode = \"set\"\r\n): SelectionMode {\r\n  if (modifiers.shiftKey && modifiers.ctrlMetaKey) {\r\n    return \"remove\";\r\n  }\r\n  if (modifiers.shiftKey) {\r\n    return \"append\";\r\n  }\r\n  if (modifiers.ctrlMetaKey) {\r\n    return \"toggle\";\r\n  }\r\n  return defaultMode;\r\n}\r\n\r\nexport function combineSelection(\r\n  selectedIds: string[],\r\n  chosenIds: string[],\r\n  mode: SelectionMode\r\n) {\r\n  switch (mode) {\r\n    case \"set\":\r\n      return chosenIds;\r\n    case \"set-if-unselected\": {\r\n      if (chosenIds.every((chosen) => selectedIds.indexOf(chosen) !== -1)) {\r\n        // All were selected.\r\n        return selectedIds;\r\n      }\r\n\r\n      // One wasn't selected, set it\r\n      return chosenIds;\r\n    }\r\n    case \"append\":\r\n      return union(selectedIds, chosenIds);\r\n    case \"remove\":\r\n      return difference(selectedIds, chosenIds);\r\n    case \"toggle\": {\r\n      return difference(selectedIds, chosenIds).concat(\r\n        difference(chosenIds, selectedIds)\r\n      );\r\n    }\r\n  }\r\n\r\n  return chosenIds;\r\n}\r\n\r\nexport function combineExtraniousSelection(\r\n  selectedIds: string[],\r\n  mode: SelectionMode\r\n) {\r\n  switch (mode) {\r\n    case \"append\":\r\n    case \"remove\":\r\n      return selectedIds;\r\n  }\r\n\r\n  return [];\r\n}\r\n","import { debounce, put } from \"redux-saga/effects\";\r\n\r\nimport { editorCommit } from \"@/actions/editors/commit\";\r\nimport { ACTION_EDITOR_COMMIT_QUEUE } from \"@/actions/editors/commit-queue\";\r\n\r\nexport default function* commitQueueSaga() {\r\n  yield debounce(1000, ACTION_EDITOR_COMMIT_QUEUE, doCommit);\r\n}\r\n\r\nfunction* doCommit() {\r\n  yield put(editorCommit());\r\n}\r\n","import commitQueueSaga from \"./commit-queue\";\r\n\r\nexport default commitQueueSaga;\r\n","import * as React from \"react\";\r\n\r\nimport { I18nextProvider } from \"react-i18next\";\r\n\r\nimport i18n from \"../i18n\";\r\n\r\nconst I18NProvider: React.FC = ({ children }) => (\r\n  <I18nextProvider i18n={i18n}>{children}</I18nextProvider>\r\n);\r\nexport default I18NProvider;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport { isProd } from \"@/runtime-env\";\r\n\r\ni18n.use(initReactI18next).init({\r\n  fallbackLng: \"en\",\r\n\r\n  ns: [\"common\", \"potioncraft\"],\r\n  defaultNS: \"common\",\r\n\r\n  resources: {\r\n    en: {\r\n      common: require(\"@/translations/en/common.json\"),\r\n      potioncraft: require(\"@/translations/en/potioncraft.json\"),\r\n    },\r\n  },\r\n\r\n  debug: !isProd,\r\n\r\n  interpolation: {\r\n    escapeValue: false, // not needed for react!!\r\n  },\r\n\r\n  react: {\r\n    wait: true,\r\n  },\r\n});\r\n\r\nexport default i18n;\r\n","import { createStructuredSelector } from \"@/state\";\r\n\r\nimport { I18NState } from \"./state\";\r\nimport i18n from \"./i18n\";\r\nimport { currentLanguageSelector } from \"./selectors/language\";\r\n\r\nexport const persistState = createStructuredSelector({\r\n  language: currentLanguageSelector\r\n});\r\n\r\ntype PersistedState = ReturnType<typeof persistState>;\r\n\r\nexport function loadState(\r\n  state: I18NState,\r\n  persisted: PersistedState\r\n): I18NState {\r\n  i18n.changeLanguage(persisted.language);\r\n\r\n  return {\r\n    ...state,\r\n    ...persisted\r\n  };\r\n}\r\n","import setLanguageReducer from \"./set-language\";\r\n\r\nexport default setLanguageReducer;\r\n","import { Action } from \"redux\";\r\n\r\nimport { ACTION_SET_LANGUAGE, SetLanguageAction } from \"@/actions/set-language\";\r\n\r\nimport { I18NState, defaultI18NState } from \"../state\";\r\nimport { createI18nReducer } from \"../state-utils\";\r\n\r\nimport i18n from \"../i18n\";\r\n\r\nexport default createI18nReducer(function setLanguageReducer(\r\n  state: I18NState = defaultI18NState,\r\n  action: Action\r\n): I18NState {\r\n  if (action.type !== ACTION_SET_LANGUAGE) {\r\n    return state;\r\n  }\r\n\r\n  const lang = (action as SetLanguageAction).payload;\r\n\r\n  // TODO: Side effect should be in saga.\r\n  i18n.changeLanguage(lang);\r\n\r\n  return {\r\n    ...state,\r\n    language: lang,\r\n  };\r\n});\r\n","import { I18NState as I18nState } from \"../state\";\r\nimport { createI18nSelector } from \"../state-utils\";\r\n\r\nexport const currentLanguageSelector = createI18nSelector(\r\n  (state: I18nState) => state.language\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../state-utils\";\r\n\r\nexport const createI18nReducer = createServiceReducerCreator(\"i18n\");\r\nexport const createI18nSelector = createServiceSelectorCreator(\"i18n\");\r\n","export interface I18NState {\r\n  language: string;\r\n}\r\n\r\nexport const defaultI18NState: Readonly<I18NState> = {\r\n  language: \"en\"\r\n};\r\nObject.freeze(defaultI18NState);\r\n","import { isMapEditorRenderedAction } from \"@/actions/map-editor/rendered\";\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default createEditorDamageReducer((state, action) => {\r\n  if (!isMapEditorRenderedAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    damageWorldRect: null,\r\n  };\r\n});\r\n","import { isMapEditorPanAction } from \"@/actions/map-editor/pan\";\r\nimport { isMapEditorViewportResizeAction } from \"@/actions/map-editor/viewport-resize\";\r\nimport { isMapEditorZoomAction } from \"@/actions/map-editor/zoom\";\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default createEditorDamageReducer((state, action, appState) => {\r\n  if (\r\n    !isMapEditorPanAction(action) &&\r\n    !isMapEditorZoomAction(action) &&\r\n    !isMapEditorViewportResizeAction(action)\r\n  ) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    damageWorldRect: {\r\n      p1: {\r\n        x: Number.NEGATIVE_INFINITY,\r\n        y: Number.NEGATIVE_INFINITY,\r\n      },\r\n      p2: {\r\n        x: Number.POSITIVE_INFINITY,\r\n        y: Number.POSITIVE_INFINITY,\r\n      },\r\n    },\r\n  };\r\n});\r\n","import { isMapEditorEntityDeleteAction } from \"@/actions/map-editor/entity-delete\";\r\nimport { addPointToRect } from \"@/geometry\";\r\nimport { PRIORITY_PRE, reducerPriority } from \"@/reducer/priorities\";\r\nimport { entityFromKeySelector } from \"@/services/map-editor/entities/selectors/entities\";\r\n\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createEditorDamageReducer((state, action, appState) => {\r\n    if (!isMapEditorEntityDeleteAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { entityKeys } = action.payload;\r\n\r\n    const damageRect = entityKeys.reduce((damageRect, entityKey) => {\r\n      const entity = entityFromKeySelector(appState, entityKey);\r\n      if (damageRect == null) {\r\n        return {\r\n          p1: { x: entity.x, y: entity.y },\r\n          p2: { x: entity.x, y: entity.y },\r\n        };\r\n      }\r\n      return addPointToRect(damageRect, entity);\r\n    }, state.damageWorldRect);\r\n\r\n    return {\r\n      ...state,\r\n      damageWorldRect: damageRect,\r\n    };\r\n  })\r\n);\r\n","import values from \"lodash/values\";\r\n\r\nimport { isMapEditorEntityInsertAction } from \"@/actions/map-editor/entity-insert\";\r\nimport { addPointToRect } from \"@/geometry\";\r\n\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default createEditorDamageReducer((state, action) => {\r\n  if (!isMapEditorEntityInsertAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { entities } = action.payload;\r\n\r\n  const damageRect = values(entities).reduce((damageRect, entity) => {\r\n    if (damageRect == null) {\r\n      return {\r\n        p1: { x: entity.x, y: entity.y },\r\n        p2: { x: entity.x, y: entity.y },\r\n      };\r\n    }\r\n    return addPointToRect(damageRect, entity);\r\n  }, state.damageWorldRect);\r\n\r\n  return {\r\n    ...state,\r\n    damageWorldRect: damageRect,\r\n  };\r\n});\r\n","import { addPointToRect } from \"@/geometry\";\r\n\r\nimport { PRIORITY_PRE, reducerPriority } from \"@/reducer/priorities\";\r\n\r\nimport { isMapEditorEntityOffsetAction } from \"@/actions/map-editor/entity-offset\";\r\n\r\nimport { entityFromKeySelector } from \"@/services/map-editor/entities/selectors/entities\";\r\n\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createEditorDamageReducer((state, action, appState) => {\r\n    if (!isMapEditorEntityOffsetAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { entityKeys, offsetX, offsetY } = action.payload;\r\n\r\n    const damageRect = entityKeys.reduce((damageRect, entityKey) => {\r\n      const entity = entityFromKeySelector(appState, entityKey);\r\n      if (damageRect == null) {\r\n        damageRect = {\r\n          p1: { x: entity.x, y: entity.y },\r\n          p2: { x: entity.x, y: entity.y },\r\n        };\r\n      } else {\r\n        damageRect = addPointToRect(damageRect, entity);\r\n      }\r\n\r\n      return addPointToRect(damageRect, {\r\n        x: entity.x + offsetX,\r\n        y: entity.y + offsetY,\r\n      });\r\n    }, state.damageWorldRect);\r\n\r\n    return {\r\n      ...state,\r\n      damageWorldRect: damageRect,\r\n    };\r\n  })\r\n);\r\n","import { isMapEditorEntityPrototypeInstantiateAction } from \"@/actions/map-editor/entity-prototype-instantiate\";\r\nimport { addPointToRect } from \"@/geometry\";\r\n\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default createEditorDamageReducer((state, action, appState) => {\r\n  if (!isMapEditorEntityPrototypeInstantiateAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { worldPos } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    damageWorldRect: state.damageWorldRect\r\n      ? addPointToRect(state.damageWorldRect, worldPos)\r\n      : { p1: worldPos, p2: worldPos },\r\n  };\r\n});\r\n","import { concatReducers } from \"@/reducer/utils\";\r\n\r\nimport editorRenderedReducer from \"./editor-rendered\";\r\nimport editorViewportReducer from \"./editor-viewport\";\r\nimport entityDeleteReducer from \"./entity-delete\";\r\nimport entityInsertReducer from \"./entity-insert\";\r\nimport entityOffsetReducer from \"./entity-offset\";\r\nimport entityPrototypeInstantiateReducer from \"./entity-prototype-instantiate\";\r\nimport mapClearReducer from \"./map-clear\";\r\nimport mapImportTemplateReducer from \"./map-import-template\";\r\nimport mapReceiveReducer from \"./map-receive\";\r\nimport selectClearReducer from \"./select-clear\";\r\nimport selectEntityReducer from \"./select-entity\";\r\n\r\nexport default concatReducers(\r\n  editorRenderedReducer,\r\n  editorViewportReducer,\r\n  entityDeleteReducer,\r\n  entityInsertReducer,\r\n  entityOffsetReducer,\r\n  entityPrototypeInstantiateReducer,\r\n  mapClearReducer,\r\n  mapImportTemplateReducer,\r\n  mapReceiveReducer,\r\n  selectClearReducer,\r\n  selectEntityReducer\r\n);\r\n","import { isMapEditorMapClearAction } from \"@/actions/map-editor/map-clear\";\r\n\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default createEditorDamageReducer((state, action) => {\r\n  if (!isMapEditorMapClearAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    damageWorldRect: {\r\n      p1: {\r\n        x: Number.NEGATIVE_INFINITY,\r\n        y: Number.NEGATIVE_INFINITY,\r\n      },\r\n      p2: {\r\n        x: Number.POSITIVE_INFINITY,\r\n        y: Number.POSITIVE_INFINITY,\r\n      },\r\n    },\r\n  };\r\n});\r\n","import { isMapEditorMapImportTemplateAction } from \"@/actions/map-editor/map-import-template\";\r\n\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default createEditorDamageReducer((state, action) => {\r\n  if (!isMapEditorMapImportTemplateAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    damageWorldRect: {\r\n      p1: {\r\n        x: Number.NEGATIVE_INFINITY,\r\n        y: Number.NEGATIVE_INFINITY,\r\n      },\r\n      p2: {\r\n        x: Number.POSITIVE_INFINITY,\r\n        y: Number.POSITIVE_INFINITY,\r\n      },\r\n    },\r\n  };\r\n});\r\n","import { isMapEditorMapReceiveAction } from \"@/actions/map-editor/map-receive\";\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default createEditorDamageReducer((state, action, appState) => {\r\n  if (!isMapEditorMapReceiveAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    damageWorldRect: {\r\n      p1: {\r\n        x: Number.NEGATIVE_INFINITY,\r\n        y: Number.NEGATIVE_INFINITY,\r\n      },\r\n      p2: {\r\n        x: Number.POSITIVE_INFINITY,\r\n        y: Number.POSITIVE_INFINITY,\r\n      },\r\n    },\r\n  };\r\n});\r\n","import { addPointToRect } from \"@/geometry\";\r\n\r\nimport { PRIORITY_PRE, reducerPriority } from \"@/reducer/priorities\";\r\n\r\nimport { isMapEditorSelectClearAction } from \"@/actions/map-editor/select-clear\";\r\n\r\nimport { selectedEntityKeysSelector } from \"@/services/map-editor/selection/selectors/selection\";\r\nimport { entityFromKeySelector } from \"@/services/map-editor/entities/selectors/entities\";\r\n\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createEditorDamageReducer((state, action, appState) => {\r\n    if (!isMapEditorSelectClearAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const selectedEntityKeys = selectedEntityKeysSelector(appState);\r\n\r\n    const damageRect = selectedEntityKeys.reduce((damageRect, entityKey) => {\r\n      const entity = entityFromKeySelector(appState, entityKey);\r\n      if (!entity) {\r\n        return damageRect;\r\n      }\r\n\r\n      if (damageRect == null) {\r\n        return {\r\n          p1: { x: entity.x, y: entity.y },\r\n          p2: { x: entity.x, y: entity.y },\r\n        };\r\n      } else {\r\n        return addPointToRect(damageRect, entity);\r\n      }\r\n    }, state.damageWorldRect);\r\n\r\n    return {\r\n      ...state,\r\n      damageWorldRect: damageRect,\r\n    };\r\n  })\r\n);\r\n","import { addPointToRect } from \"@/geometry\";\r\n\r\nimport { PRIORITY_PRE, reducerPriority } from \"@/reducer/priorities\";\r\n\r\nimport { isMapEditorSelectEntityAction } from \"@/actions/map-editor/select-entity\";\r\nimport { entityFromKeySelector } from \"@/services/map-editor/entities/selectors/entities\";\r\nimport { selectedEntityKeysSelector } from \"@/services/map-editor/selection/selectors/selection\";\r\n\r\nimport { createEditorDamageReducer } from \"../state-utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createEditorDamageReducer((state, action, appState) => {\r\n    if (!isMapEditorSelectEntityAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { entityKeys } = action.payload;\r\n\r\n    // Might need to re-render previously selected items to unselect them\r\n    const selectedEntityKeys = selectedEntityKeysSelector(appState);\r\n\r\n    let damageRect = selectedEntityKeys.reduce((damageRect, entityKey) => {\r\n      const entity = entityFromKeySelector(appState, entityKey);\r\n      if (!entity) {\r\n        return damageRect;\r\n      }\r\n\r\n      if (damageRect == null) {\r\n        return {\r\n          p1: { x: entity.x, y: entity.y },\r\n          p2: { x: entity.x, y: entity.y },\r\n        };\r\n      } else {\r\n        return addPointToRect(damageRect, entity);\r\n      }\r\n    }, state.damageWorldRect);\r\n\r\n    damageRect = entityKeys.reduce((damageRect, entityKey) => {\r\n      const entity = entityFromKeySelector(appState, entityKey);\r\n      if (!entity) {\r\n        return damageRect;\r\n      }\r\n\r\n      if (damageRect == null) {\r\n        return {\r\n          p1: { x: entity.x, y: entity.y },\r\n          p2: { x: entity.x, y: entity.y },\r\n        };\r\n      } else {\r\n        return addPointToRect(damageRect, entity);\r\n      }\r\n    }, damageRect);\r\n\r\n    return {\r\n      ...state,\r\n      damageWorldRect: damageRect,\r\n    };\r\n  })\r\n);\r\n","import { createEditorDamageSelector } from \"../state-utils\";\r\n\r\nexport const editorDamageRectSelector = createEditorDamageSelector(\r\n  (state) => state.damageWorldRect\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"@/services/state-utils\";\r\n\r\nexport const createEditorDamageReducer = createServiceReducerCreator(\r\n  \"mapEditor\",\r\n  \"damage\"\r\n);\r\nexport const createEditorDamageSelector = createServiceSelectorCreator(\r\n  \"mapEditor\",\r\n  \"damage\"\r\n);\r\n","import { Rectangle } from \"@/geometry\";\r\n\r\nexport interface EditorDamageState {\r\n  damageWorldRect: Rectangle | null;\r\n}\r\n\r\nconst _defaultState: EditorDamageState = {\r\n  damageWorldRect: null,\r\n};\r\n\r\nexport const defaultEditorDamageState = Object.freeze(_defaultState);\r\n","import omit from \"lodash/omit\";\r\n\r\nimport { isMapEditorEntityDeleteAction } from \"@/actions/map-editor/entity-delete\";\r\n\r\nimport { createMapEntitiesReducer } from \"../state-utils\";\r\nimport { removeFromRegionContainer } from \"../regions\";\r\n\r\nexport default createMapEntitiesReducer((state, action) => {\r\n  if (!isMapEditorEntityDeleteAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { entityKeys } = action.payload;\r\n\r\n  for (const entityKey of entityKeys) {\r\n    const entity = state.entitiesByKey[entityKey];\r\n    if (!entity) {\r\n      continue;\r\n    }\r\n    state = removeFromRegionContainer(state, entity, entityKey);\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    entitiesByKey: omit(state.entitiesByKey, entityKeys),\r\n  };\r\n});\r\n","import { isMapEditorEntityInsertAction } from \"@/actions/map-editor/entity-insert\";\r\n\r\nimport { addToRegionContainer } from \"../regions\";\r\n\r\nimport { createMapEntitiesReducer } from \"../state-utils\";\r\n\r\nexport default createMapEntitiesReducer((state, action) => {\r\n  if (!isMapEditorEntityInsertAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { entities } = action.payload;\r\n\r\n  for (const entityKey of Object.keys(entities)) {\r\n    const entity = entities[entityKey];\r\n    state = addToRegionContainer(state, entity, entityKey);\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    entitiesByKey: {\r\n      ...state.entitiesByKey,\r\n      ...entities,\r\n    },\r\n  };\r\n});\r\n","import mapValues from \"lodash/mapValues\";\r\n\r\nimport { pointAdd } from \"@/geometry\";\r\n\r\nimport { isMapEditorEntityOffsetAction } from \"@/actions/map-editor/entity-offset\";\r\n\r\nimport { createMapEntitiesReducer } from \"../state-utils\";\r\nimport { addToRegionContainer, removeFromRegionContainer } from \"../regions\";\r\n\r\nexport default createMapEntitiesReducer((state, action) => {\r\n  if (!isMapEditorEntityOffsetAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { entityKeys, offsetX, offsetY } = action.payload;\r\n  const offsetP = { x: offsetX, y: offsetY };\r\n\r\n  for (const entityKey of entityKeys) {\r\n    const entity = state.entitiesByKey[entityKey];\r\n    if (!entity) {\r\n      continue;\r\n    }\r\n    state = removeFromRegionContainer(state, entity, entityKey);\r\n    state = addToRegionContainer(state, pointAdd(entity, offsetP), entityKey);\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    entitiesByKey: mapValues(state.entitiesByKey, (entity, key) => {\r\n      if (!entityKeys.includes(key)) {\r\n        return entity;\r\n      }\r\n      return {\r\n        ...entity,\r\n        ...pointAdd(entity, offsetP),\r\n      };\r\n    }),\r\n  };\r\n});\r\n","import { concatReducers } from \"@/reducer/utils\";\r\n\r\nimport entityDeleteReducer from \"./entity-delete\";\r\nimport entityInsertReducer from \"./entity-insert\";\r\nimport entityOffsetReducer from \"./entity-offset\";\r\nimport mapClearReducer from \"./map-clear\";\r\nimport mapImportTemplateReducer from \"./map-import-template\";\r\nimport receiveMapConfigReducer from \"./map-receive\";\r\nimport prototypeInstantiateReducer from \"./prototype-instantiate\";\r\n\r\nexport default concatReducers(\r\n  entityDeleteReducer,\r\n  entityInsertReducer,\r\n  entityOffsetReducer,\r\n  mapClearReducer,\r\n  mapImportTemplateReducer,\r\n  receiveMapConfigReducer,\r\n  prototypeInstantiateReducer\r\n);\r\n","import { isMapEditorMapClearAction } from \"@/actions/map-editor/map-clear\";\r\n\r\nimport { defaultMapEntitiesState } from \"../state\";\r\nimport { createMapEntitiesReducer } from \"../state-utils\";\r\n\r\nexport default createMapEntitiesReducer((state, action) => {\r\n  if (!isMapEditorMapClearAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultMapEntitiesState;\r\n});\r\n","import { v4 as uuidV4 } from \"uuid\";\r\n\r\nimport { TemplatesByName } from \"@/map-templates\";\r\nimport { MapEntity } from \"@/map-config\";\r\n\r\nimport { isMapEditorMapImportTemplateAction } from \"@/actions/map-editor/map-import-template\";\r\n\r\nimport { createMapEntitiesReducer } from \"../state-utils\";\r\nimport { addToRegionContainer } from \"../regions\";\r\nimport { defaultMapEntitiesState } from \"../state\";\r\n\r\nexport default createMapEntitiesReducer((state, action) => {\r\n  if (!isMapEditorMapImportTemplateAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { templateId } = action.payload;\r\n\r\n  const entities = TemplatesByName[templateId];\r\n  if (!entities) {\r\n    return state;\r\n  }\r\n\r\n  const entitiesByKey: Record<string, MapEntity> = {};\r\n  for (let entity of entities) {\r\n    entitiesByKey[uuidV4()] = entity;\r\n  }\r\n\r\n  state = {\r\n    ...defaultMapEntitiesState,\r\n    entitiesByKey,\r\n  };\r\n\r\n  for (const entityKey of Object.keys(entitiesByKey)) {\r\n    const entity = entitiesByKey[entityKey];\r\n    state = addToRegionContainer(state, entity, entityKey);\r\n  }\r\n\r\n  return state;\r\n});\r\n","import { v4 as uuidV4 } from \"uuid\";\r\n\r\nimport { MapEntity } from \"@/map-config\";\r\n\r\nimport { isMapEditorMapReceiveAction } from \"@/actions/map-editor/map-receive\";\r\n\r\nimport { createMapEntitiesReducer } from \"../state-utils\";\r\nimport { addToRegionContainer } from \"../regions\";\r\nimport { defaultMapEntitiesState } from \"../state\";\r\n\r\nexport default createMapEntitiesReducer((state, action) => {\r\n  if (!isMapEditorMapReceiveAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  state = defaultMapEntitiesState;\r\n\r\n  const { entities } = action.payload;\r\n\r\n  const entitiesByKey: Record<string, MapEntity> = {};\r\n  for (let entity of entities) {\r\n    entitiesByKey[uuidV4()] = entity;\r\n  }\r\n\r\n  for (const entityKey of Object.keys(entitiesByKey)) {\r\n    const entity = entitiesByKey[entityKey];\r\n    state = addToRegionContainer(state, entity, entityKey);\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    entitiesByKey,\r\n  };\r\n});\r\n","import { isMapEditorEntityPrototypeInstantiateAction } from \"@/actions/map-editor/entity-prototype-instantiate\";\r\nimport { MapEntity } from \"@/map-config\";\r\nimport { addToRegionContainer } from \"../regions\";\r\n\r\nimport { createMapEntitiesReducer } from \"../state-utils\";\r\n\r\nexport default createMapEntitiesReducer((state, action) => {\r\n  if (!isMapEditorEntityPrototypeInstantiateAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { prototype, worldPos, entityKey: key } = action.payload;\r\n\r\n  const entity = {\r\n    ...prototype,\r\n    x: worldPos.x,\r\n    y: worldPos.y,\r\n  } as MapEntity;\r\n\r\n  state = addToRegionContainer(state, entity, key);\r\n\r\n  return {\r\n    ...state,\r\n    entitiesByKey: {\r\n      ...state.entitiesByKey,\r\n      [key]: entity,\r\n    },\r\n  };\r\n});\r\n","import { LargestEntityRadius } from \"@/entities\";\r\nimport { fpSet } from \"@/fp-set\";\r\nimport { Point, pointAdd, Rectangle } from \"@/geometry\";\r\n\r\nexport interface MapRegionContainer {\r\n  entityRegions: MapRegion[];\r\n  outOfBoundsRegion: MapRegion;\r\n}\r\n\r\nexport interface MapRegion {\r\n  entityKeys: string[];\r\n}\r\n\r\nconst MAP_WIDTH = 120;\r\nconst MAP_HEIGHT = 120;\r\nconst REGION_WIDTH = 10;\r\nconst REGION_HEIGHT = 10;\r\n\r\nconst ORIGIN_OFFSET: Point = { x: 60, y: 60 };\r\n\r\nexport const REGION_COUNT =\r\n  (MAP_WIDTH / REGION_WIDTH) * (MAP_HEIGHT / REGION_HEIGHT);\r\n\r\n// FIXME: Entities can be in multiple regions due to their hit radius.  Widen the point and return multiple region indexes from here.\r\nexport function getRegionIndexsFromPoint(p: Point): number[] {\r\n  const r = {\r\n    p1: {\r\n      x: p.x - LargestEntityRadius,\r\n      y: p.y - LargestEntityRadius,\r\n    },\r\n    p2: {\r\n      x: p.x + LargestEntityRadius,\r\n      y: p.y + LargestEntityRadius,\r\n    },\r\n  };\r\n\r\n  return getRegionIndexesFromRect(r);\r\n}\r\n\r\nexport function getEntityKeysFromPoint(\r\n  container: MapRegionContainer,\r\n  p: Point\r\n): string[] {\r\n  const regionIndexes = getRegionIndexsFromPoint(p);\r\n  const regionKeys: string[] = [];\r\n  regionIndexes.forEach((regionIndex) => {\r\n    if (regionIndex === -1) {\r\n      regionKeys.push(...container.outOfBoundsRegion.entityKeys);\r\n    } else {\r\n      regionKeys.push(...container.entityRegions[regionIndex].entityKeys);\r\n    }\r\n  });\r\n\r\n  return regionKeys;\r\n}\r\n\r\nexport function getRegionIndexesFromRect(r: Rectangle): number[] {\r\n  let { p1, p2 } = r;\r\n  p1 = pointAdd(p1, ORIGIN_OFFSET);\r\n  p2 = pointAdd(p2, ORIGIN_OFFSET);\r\n\r\n  let x1 = Math.floor((p1.x - LargestEntityRadius) / REGION_WIDTH);\r\n  let y1 = Math.floor((p1.y - LargestEntityRadius) / REGION_HEIGHT);\r\n  let x2 = Math.floor((p2.x + LargestEntityRadius) / REGION_WIDTH);\r\n  let y2 = Math.floor((p2.y + LargestEntityRadius) / REGION_HEIGHT);\r\n\r\n  const indexes = [];\r\n\r\n  let addedOOB = false;\r\n  const addOOB = () => {\r\n    if (addedOOB) {\r\n      return;\r\n    }\r\n    indexes.push(-1);\r\n    addedOOB = true;\r\n  };\r\n\r\n  if (x1 < 0) {\r\n    x1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 < 0) {\r\n    x2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (x1 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x1 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (x2 >= MAP_WIDTH / REGION_WIDTH) {\r\n    x2 = MAP_WIDTH / REGION_WIDTH - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 < 0) {\r\n    y1 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 < 0) {\r\n    y2 = 0;\r\n    addOOB();\r\n  }\r\n\r\n  if (y1 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y1 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  if (y2 >= MAP_HEIGHT / REGION_HEIGHT) {\r\n    y2 = MAP_HEIGHT / REGION_HEIGHT - 1;\r\n    addOOB();\r\n  }\r\n\r\n  for (let x = x1; x <= x2; x++) {\r\n    for (let y = y1; y <= y2; y++) {\r\n      indexes.push(x + y * (MAP_WIDTH / REGION_WIDTH));\r\n    }\r\n  }\r\n\r\n  return indexes;\r\n}\r\n\r\nexport function getEntityKeysFromRect(\r\n  container: MapRegionContainer,\r\n  r: Rectangle\r\n): string[] {\r\n  const regionIndexes = getRegionIndexesFromRect(r);\r\n  const regionKeys: string[] = [];\r\n  regionIndexes.forEach((regionIndex) => {\r\n    if (regionIndex === -1) {\r\n      regionKeys.push(...container.outOfBoundsRegion.entityKeys);\r\n    } else {\r\n      regionKeys.push(...container.entityRegions[regionIndex].entityKeys);\r\n    }\r\n  });\r\n\r\n  return regionKeys;\r\n}\r\n\r\nexport function addToRegionContainer<T extends MapRegionContainer>(\r\n  container: T,\r\n  p: Point,\r\n  entityKey: string\r\n) {\r\n  const regionIndexes = getRegionIndexsFromPoint(p);\r\n  return regionIndexes.reduce((container, regionIndex) => {\r\n    if (regionIndex === -1) {\r\n      return fpSet(container, \"outOfBoundsRegion\", (region) =>\r\n        addToRegion(region, entityKey)\r\n      );\r\n    } else {\r\n      return fpSet(container, \"entityRegions\", regionIndex, (region) =>\r\n        addToRegion(region, entityKey)\r\n      );\r\n    }\r\n  }, container);\r\n}\r\n\r\nexport function removeFromRegionContainer<T extends MapRegionContainer>(\r\n  container: T,\r\n  p: Point,\r\n  entityKey: string\r\n) {\r\n  const regionIndexes = getRegionIndexsFromPoint(p);\r\n  return regionIndexes.reduce((container, regionIndex) => {\r\n    if (regionIndex === -1) {\r\n      return fpSet(container, \"outOfBoundsRegion\", (region) =>\r\n        removeFromRegion(region, entityKey)\r\n      );\r\n    } else {\r\n      return fpSet(container, \"entityRegions\", regionIndex, (region) =>\r\n        removeFromRegion(region, entityKey)\r\n      );\r\n    }\r\n  }, container);\r\n}\r\n\r\nfunction addToRegion(region: MapRegion, entityKey: string): MapRegion {\r\n  return {\r\n    ...region,\r\n    entityKeys: [...region.entityKeys, entityKey],\r\n  };\r\n}\r\n\r\nfunction removeFromRegion(region: MapRegion, entityKey: string): MapRegion {\r\n  return {\r\n    ...region,\r\n    entityKeys: region.entityKeys.filter((x) => x !== entityKey),\r\n  };\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { AppState } from \"@/state\";\r\nimport {\r\n  magnitude,\r\n  Point,\r\n  pointIntersectsRect,\r\n  pointSubtract,\r\n  Rectangle,\r\n} from \"@/geometry\";\r\nimport { EntityDefsByType } from \"@/entities\";\r\n\r\nimport { createMapEntitiesSelector } from \"../state-utils\";\r\nimport { MapEntitiesState } from \"../state\";\r\nimport { getEntityKeysFromPoint, getEntityKeysFromRect } from \"../regions\";\r\n\r\nexport const entitiesByKeySelector = createMapEntitiesSelector(\r\n  (state) => state.entitiesByKey\r\n);\r\n\r\nexport const entitityKeysSelector = createSelector(\r\n  entitiesByKeySelector,\r\n  (entitiesByKey) => Object.keys(entitiesByKey)\r\n);\r\n\r\nexport const entityFromKeySelector = (state: AppState, entityKey: string) =>\r\n  entitiesByKeySelector(state)[entityKey];\r\n\r\nexport const entityKeyAtPointSelector = createMapEntitiesSelector(\r\n  (state: MapEntitiesState, worldPoint: Point) => {\r\n    const regionKeys = getEntityKeysFromPoint(state, worldPoint);\r\n\r\n    const entitiesByKey = state.entitiesByKey;\r\n    for (const key of regionKeys) {\r\n      const entity = entitiesByKey[key];\r\n      const type = EntityDefsByType[entity.entityType];\r\n      if (!type) {\r\n        continue;\r\n      }\r\n\r\n      const vec = pointSubtract(worldPoint, entity);\r\n      if (magnitude(vec) <= type.hitRadius) {\r\n        return key;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n);\r\n\r\nexport const entityKeysAtPointSelector = (\r\n  state: AppState,\r\n  worldPoint: Point,\r\n  radius: number = 0,\r\n  ignoreHitRadius = false\r\n) => {\r\n  const mapEntitiesState = state.services.mapEditor.entities;\r\n  const r: Rectangle = {\r\n    p1: {\r\n      x: worldPoint.x - radius,\r\n      y: worldPoint.y - radius,\r\n    },\r\n    p2: {\r\n      x: worldPoint.x + radius,\r\n      y: worldPoint.y + radius,\r\n    },\r\n  };\r\n  const regionKeys = getEntityKeysFromRect(mapEntitiesState, r);\r\n  const result = [];\r\n  for (const entityKey of regionKeys) {\r\n    const entity = mapEntitiesState.entitiesByKey[entityKey];\r\n    const type = EntityDefsByType[entity.entityType];\r\n    if (!type) {\r\n      continue;\r\n    }\r\n\r\n    const vec = pointSubtract(worldPoint, entity);\r\n    if (magnitude(vec) <= (ignoreHitRadius ? 0 : type.hitRadius) + radius) {\r\n      result.push(entityKey);\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const entityKeysAtRectSelector = (state: AppState, rect: Rectangle) => {\r\n  const mapEntitiesState = state.services.mapEditor.entities;\r\n  const regionKeys = getEntityKeysFromRect(mapEntitiesState, rect);\r\n\r\n  return regionKeys.filter((entityKey) =>\r\n    pointIntersectsRect(mapEntitiesState.entitiesByKey[entityKey], rect)\r\n  );\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\nimport { PotionEffectMapEntity } from \"@/map-config\";\r\n\r\nimport { packageIdObjectsSelector } from \"@/services/package/selectors/package\";\r\n\r\nimport { SpawnableEntityPrototype } from \"../types\";\r\n\r\nfunction potionEffectPrototype(\r\n  effect: string\r\n): SpawnableEntityPrototype<PotionEffectMapEntity> {\r\n  return {\r\n    i18nKey: `potioncraft:effects.${effect}`,\r\n    entityType: \"PotionEffect\",\r\n    effect,\r\n    angle: 0,\r\n  };\r\n}\r\n\r\nconst defaultPotionEffects = [\r\n  potionEffectPrototype(\"Crop\"),\r\n  potionEffectPrototype(\"Invisibility\"),\r\n  potionEffectPrototype(\"StoneSkin\"),\r\n  potionEffectPrototype(\"Growth\"),\r\n  potionEffectPrototype(\"SlowDown\"),\r\n  potionEffectPrototype(\"Sleep\"),\r\n  potionEffectPrototype(\"SharpVision\"),\r\n  potionEffectPrototype(\"Mana\"),\r\n  potionEffectPrototype(\"Lightning\"),\r\n  potionEffectPrototype(\"Hallucinations\"),\r\n  potionEffectPrototype(\"Fly\"),\r\n  potionEffectPrototype(\"Explosion\"),\r\n  potionEffectPrototype(\"Charm\"),\r\n  potionEffectPrototype(\"Berserker\"),\r\n  potionEffectPrototype(\"Light\"),\r\n  potionEffectPrototype(\"Libido\"),\r\n  potionEffectPrototype(\"Bounce\"),\r\n  potionEffectPrototype(\"Acid\"),\r\n  potionEffectPrototype(\"Fire\"),\r\n  potionEffectPrototype(\"Necromancy\"),\r\n  potionEffectPrototype(\"Frost\"),\r\n  potionEffectPrototype(\"Poison\"),\r\n  potionEffectPrototype(\"Healing\"),\r\n];\r\n\r\nexport const potionEffectEntityPrototypesSelector = createSelector(\r\n  (state: AppState) => packageIdObjectsSelector(state, \"potionEffects\"),\r\n  (potionEffects) => {\r\n    return [\r\n      ...defaultPotionEffects,\r\n      ...potionEffects.map((potionEffect) => ({\r\n        displayName: `${potionEffect.name} (${potionEffect.id})`,\r\n        entityType: \"PotionEffect\" as const,\r\n        effect: potionEffect.id,\r\n        angle: 0,\r\n      })),\r\n    ];\r\n  }\r\n);\r\n","import { Buffer } from \"buffer\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { packageIdObjectsSelector } from \"@/services/package/selectors/package\";\r\nimport { packageResourcesSelector } from \"@/services/package/selectors/resources\";\r\n\r\nimport { RenderResources } from \"../types\";\r\n\r\nconst PotionEffectImages: Record<string, string> = {\r\n  \"potionEffect::Acid\": require(\"@/assets/PotionEffects/Acid.webp\"),\r\n  \"potionEffect::Berserker\": require(\"@/assets/PotionEffects/Berserker.webp\"),\r\n  \"potionEffect::Bounce\": require(\"@/assets/PotionEffects/Bounce.webp\"),\r\n  \"potionEffect::Charm\": require(\"@/assets/PotionEffects/Charm.webp\"),\r\n  \"potionEffect::Crop\": require(\"@/assets/PotionEffects/Crop.webp\"),\r\n  \"potionEffect::Explosion\": require(\"@/assets/PotionEffects/Explosion.webp\"),\r\n  \"potionEffect::Fire\": require(\"@/assets/PotionEffects/Fire.webp\"),\r\n  \"potionEffect::Fly\": require(\"@/assets/PotionEffects/Fly.webp\"),\r\n  \"potionEffect::Frost\": require(\"@/assets/PotionEffects/Frost.webp\"),\r\n  \"potionEffect::Growth\": require(\"@/assets/PotionEffects/Growth.webp\"),\r\n  \"potionEffect::Hallucinations\": require(\"@/assets/PotionEffects/Hallucinations.webp\"),\r\n  \"potionEffect::Healing\": require(\"@/assets/PotionEffects/Healing.webp\"),\r\n  \"potionEffect::Invisibility\": require(\"@/assets/PotionEffects/Invisibility.webp\"),\r\n  \"potionEffect::Libido\": require(\"@/assets/PotionEffects/Libido.webp\"),\r\n  \"potionEffect::Light\": require(\"@/assets/PotionEffects/Light.webp\"),\r\n  \"potionEffect::Lightning\": require(\"@/assets/PotionEffects/Lightning.webp\"),\r\n  \"potionEffect::Mana\": require(\"@/assets/PotionEffects/Mana.webp\"),\r\n  \"potionEffect::Necromancy\": require(\"@/assets/PotionEffects/Necromancy.webp\"),\r\n  \"potionEffect::Poison\": require(\"@/assets/PotionEffects/Poison.webp\"),\r\n  \"potionEffect::SharpVision\": require(\"@/assets/PotionEffects/SharpVision.webp\"),\r\n  \"potionEffect::Sleep\": require(\"@/assets/PotionEffects/Sleep.webp\"),\r\n  \"potionEffect::SlowDown\": require(\"@/assets/PotionEffects/SlowDown.webp\"),\r\n  \"potionEffect::StoneSkin\": require(\"@/assets/PotionEffects/StoneSkin.webp\"),\r\n};\r\n\r\nexport const renderResourcesSelector = createSelector(\r\n  (state: AppState) => packageIdObjectsSelector(state, \"potionEffects\"),\r\n  (state: AppState) => packageResourcesSelector(state),\r\n  (potionEffects, resources) => {\r\n    const renderResources: RenderResources = {\r\n      ...PotionEffectImages,\r\n    };\r\n\r\n    for (const effect of potionEffects) {\r\n      if (!effect.icon || !resources[effect.icon]) {\r\n        continue;\r\n      }\r\n\r\n      const effectIcon = resources[effect.icon];\r\n      const iconUrl = `data:image/png;base64,${Buffer.from(effectIcon).toString(\r\n        \"base64\"\r\n      )}`;\r\n      renderResources[`potionEffect::${effect.id}`] = iconUrl;\r\n    }\r\n\r\n    return renderResources;\r\n  }\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"@/services/state-utils\";\r\n\r\nexport const createMapEntitiesReducer = createServiceReducerCreator(\r\n  \"mapEditor\",\r\n  \"entities\"\r\n);\r\nexport const createMapEntitiesSelector = createServiceSelectorCreator(\r\n  \"mapEditor\",\r\n  \"entities\"\r\n);\r\n","import { MapEntity } from \"@/map-config\";\r\n\r\nimport { MapRegionContainer, REGION_COUNT } from \"./regions\";\r\n\r\nexport interface MapEntitiesState extends MapRegionContainer {\r\n  entitiesByKey: Record<string, MapEntity>;\r\n}\r\n\r\nconst defaultRegion = Object.freeze({\r\n  entityKeys: [],\r\n});\r\n\r\nconst _defaultState: MapEntitiesState = {\r\n  entitiesByKey: {},\r\n  entityRegions: new Array(REGION_COUNT).fill(defaultRegion),\r\n  outOfBoundsRegion: defaultRegion,\r\n};\r\n\r\nexport const defaultMapEntitiesState = Object.freeze(_defaultState);\r\n","import { concatReducers } from \"@/reducer/utils\";\r\n\r\nimport modifierkeysChangedReducer from \"./modifierkeys-changed\";\r\nimport mouseDownReducer from \"./mouse-down\";\r\nimport mouseMoveReducer from \"./mouse-move\";\r\nimport mouseOutReducer from \"./mouse-out\";\r\nimport mouseUpReducer from \"./mouse-up\";\r\nimport toolRadiusSetReducer from \"./tool-radius-set\";\r\nimport toolSetReducer from \"./tool-set\";\r\n\r\nexport default concatReducers(\r\n  modifierkeysChangedReducer,\r\n  mouseDownReducer,\r\n  mouseMoveReducer,\r\n  mouseOutReducer,\r\n  mouseUpReducer,\r\n  toolRadiusSetReducer,\r\n  toolSetReducer\r\n);\r\n","import { isMapEditorModifierKeysChangedAction } from \"@/actions/map-editor/modifierkeys-changed\";\r\nimport { createEditorMouseReducer } from \"../state-utils\";\r\n\r\nexport default createEditorMouseReducer((state, action) => {\r\n  if (!isMapEditorModifierKeysChangedAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { modifiers } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    modifierKeys: modifiers,\r\n  };\r\n});\r\n","import { isMapEditorMouseDownAction } from \"@/actions/map-editor/mouse-down\";\r\n\r\nimport { createEditorMouseReducer } from \"../state-utils\";\r\n\r\nexport default createEditorMouseReducer((state, action) => {\r\n  if (!isMapEditorMouseDownAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { viewportPos, modifierKeys } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    currentPointerGesture: modifierKeys.altKey ? \"pan\" : null,\r\n    mouseDownViewportPos: viewportPos,\r\n    mouseViewportPos: viewportPos,\r\n    modifierKeys,\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { magnitude, pointAdd, pointSubtract } from \"@/geometry\";\r\nimport { getSelectMode } from \"@/selection-mode\";\r\nimport { fpSet } from \"@/fp-set\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport rootReducer from \"@/reducer\";\r\n\r\nimport { generateTileEntities } from \"@/entities/tiles\";\r\n\r\nimport {\r\n  MapEditorMouseMoveAction,\r\n  isMapEditorMouseMoveAction,\r\n} from \"@/actions/map-editor/mouse-move\";\r\nimport { mapEditorSelectEntity } from \"@/actions/map-editor/select-entity\";\r\nimport { mapEditorPan } from \"@/actions/map-editor/pan\";\r\nimport { mapEditorEntityDelete } from \"@/actions/map-editor/entity-delete\";\r\nimport { mapEditorEntityInsert } from \"@/actions/map-editor/entity-insert\";\r\n\r\nimport { clientToWorldSelector } from \"@/services/map-editor/view/selectors/coordinate-mapping\";\r\nimport {\r\n  entityKeyAtPointSelector,\r\n  entityKeysAtPointSelector,\r\n} from \"@/services/map-editor/entities/selectors/entities\";\r\n\r\nimport { EditorMousePointerGesture, EditorMouseTool } from \"../state\";\r\n\r\nconst GESTURE_START_DISTANCE = 5;\r\n\r\nexport default function mouseMoveReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isMapEditorMouseMoveAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { viewportPos, modifierKeys } = action.payload;\r\n\r\n  state = detectGestureReducer(state, action);\r\n\r\n  let { currentTool, currentPointerGesture } = state.services.mapEditor.mouse;\r\n\r\n  // Gestures take priority over tools, so holding alt can pan during tool usage.\r\n  if (currentPointerGesture) {\r\n    state = gestureReducer(state, action, currentPointerGesture);\r\n  } else {\r\n    state = toolReducer(state, action, currentTool);\r\n  }\r\n\r\n  state = fpSet(state, \"services\", \"mapEditor\", \"mouse\", (mouseState) => ({\r\n    ...mouseState,\r\n    mouseViewportPos: viewportPos,\r\n    modifierKeys,\r\n  }));\r\n\r\n  return state;\r\n}\r\n\r\nfunction detectGestureReducer(\r\n  state: AppState,\r\n  action: MapEditorMouseMoveAction\r\n): AppState {\r\n  const { viewportPos, modifierKeys } = action.payload;\r\n\r\n  const { mouseDownViewportPos, currentTool } = state.services.mapEditor.mouse;\r\n  let { currentPointerGesture } = state.services.mapEditor.mouse;\r\n\r\n  // If we are holding the mouse button with the pointer, determine the gesture.\r\n  if (\r\n    mouseDownViewportPos &&\r\n    currentTool == \"pointer\" &&\r\n    currentPointerGesture == null &&\r\n    magnitude(pointSubtract(mouseDownViewportPos, viewportPos)) >\r\n      GESTURE_START_DISTANCE\r\n  ) {\r\n    const mouseDownWorldPos = clientToWorldSelector(\r\n      state,\r\n      mouseDownViewportPos\r\n    );\r\n    const entityKeyAtMouse = entityKeyAtPointSelector(state, mouseDownWorldPos);\r\n\r\n    if (entityKeyAtMouse) {\r\n      const selectionMode = getSelectMode(modifierKeys, \"append\");\r\n      state = rootReducer(\r\n        state,\r\n        mapEditorSelectEntity(entityKeyAtMouse, selectionMode)\r\n      );\r\n      currentPointerGesture = \"drag-move\";\r\n    } else {\r\n      currentPointerGesture = \"drag-select\";\r\n    }\r\n  }\r\n\r\n  state = fpSet(\r\n    state,\r\n    \"services\",\r\n    \"mapEditor\",\r\n    \"mouse\",\r\n    \"currentPointerGesture\",\r\n    currentPointerGesture\r\n  );\r\n\r\n  return state;\r\n}\r\n\r\nfunction gestureReducer(\r\n  state: AppState,\r\n  action: MapEditorMouseMoveAction,\r\n  currentGesture: EditorMousePointerGesture\r\n): AppState {\r\n  switch (currentGesture) {\r\n    case \"pan\":\r\n      return panGestureReducer(state, action);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction panGestureReducer(\r\n  state: AppState,\r\n  action: MapEditorMouseMoveAction\r\n): AppState {\r\n  let previousPos = state.services.mapEditor.mouse.mouseViewportPos;\r\n  if (!previousPos) {\r\n    return state;\r\n  }\r\n\r\n  previousPos = clientToWorldSelector(state, previousPos);\r\n  const currentPos = clientToWorldSelector(state, action.payload.viewportPos);\r\n  const offset = pointSubtract(previousPos, currentPos);\r\n  return rootReducer(state, mapEditorPan(offset.x, -offset.y));\r\n}\r\n\r\nfunction toolReducer(\r\n  state: AppState,\r\n  action: MapEditorMouseMoveAction,\r\n  currentTool: EditorMouseTool\r\n): AppState {\r\n  const { mouseDownViewportPos } = state.services.mapEditor.mouse;\r\n  if (mouseDownViewportPos == null) {\r\n    // Mouse is not held\r\n    return state;\r\n  }\r\n\r\n  switch (currentTool) {\r\n    case \"eraser\":\r\n      return eraserReducer(state, action);\r\n    case \"paint-danger-zone\":\r\n      return paintDangerZoneReducer(state, action);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction eraserReducer(\r\n  state: AppState,\r\n  action: MapEditorMouseMoveAction\r\n): AppState {\r\n  const { viewportPos } = action.payload;\r\n  const { toolRadius } = state.services.mapEditor.mouse;\r\n  const worldPoint = clientToWorldSelector(state, viewportPos);\r\n  const keys = entityKeysAtPointSelector(state, worldPoint, toolRadius);\r\n  return rootReducer(state, mapEditorEntityDelete(keys));\r\n}\r\n\r\nfunction paintDangerZoneReducer(\r\n  state: AppState,\r\n  action: MapEditorMouseMoveAction\r\n) {\r\n  const { viewportPos } = action.payload;\r\n  const { toolRadius } = state.services.mapEditor.mouse;\r\n  const worldPoint = clientToWorldSelector(state, viewportPos);\r\n  const keys = entityKeysAtPointSelector(state, worldPoint, toolRadius, true);\r\n\r\n  state = rootReducer(state, mapEditorEntityDelete(keys));\r\n\r\n  const p1 = pointSubtract(worldPoint, { x: toolRadius, y: toolRadius });\r\n  const p2 = pointAdd(worldPoint, { x: toolRadius, y: toolRadius });\r\n  const entities = generateTileEntities(\"danger-zone\", { p1, p2 }).filter(\r\n    (entity) => {\r\n      const vec = pointSubtract(entity, worldPoint);\r\n      if (magnitude(vec) >= toolRadius) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  );\r\n\r\n  state = rootReducer(state, mapEditorEntityInsert(entities));\r\n  return state;\r\n}\r\n","import { isMapEditorMouseOutAction } from \"@/actions/map-editor/mouse-out\";\r\n\r\nimport { defaultEditorMouseServiceState } from \"../state\";\r\nimport { createEditorMouseReducer } from \"../state-utils\";\r\n\r\nexport default createEditorMouseReducer((state, action) => {\r\n  if (!isMapEditorMouseOutAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return defaultEditorMouseServiceState;\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { fpSet } from \"@/fp-set\";\r\nimport { AppState, defaultAppState } from \"@/state\";\r\nimport { getSelectMode } from \"@/selection-mode\";\r\nimport { normalizeRectangle, pointSubtract } from \"@/geometry\";\r\n\r\nimport rootReducer from \"@/reducer\";\r\n\r\nimport {\r\n  MapEditorMouseUpAction,\r\n  isMapEditorMouseUpAction,\r\n} from \"@/actions/map-editor/mouse-up\";\r\nimport { mapEditorSelectEntity } from \"@/actions/map-editor/select-entity\";\r\nimport { mapEditorSelectClear } from \"@/actions/map-editor/select-clear\";\r\nimport { mapEditorEntityOffset } from \"@/actions/map-editor/entity-offset\";\r\n\r\nimport {\r\n  entityKeyAtPointSelector,\r\n  entityKeysAtRectSelector,\r\n} from \"@/services/map-editor/entities/selectors/entities\";\r\nimport { clientToWorldSelector } from \"@/services/map-editor/view/selectors/coordinate-mapping\";\r\n\r\nexport default function mouseUpReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isMapEditorMouseUpAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { modifierKeys, viewportPos } = action.payload;\r\n\r\n  const mouseState = state.services.mapEditor.mouse;\r\n\r\n  switch (mouseState.currentPointerGesture) {\r\n    case \"drag-select\":\r\n      state = completeDragSelect(state, action);\r\n      break;\r\n    case \"drag-move\":\r\n      state = completeDragMove(state, action);\r\n      break;\r\n    default:\r\n      state = completeClick(state, action);\r\n      break;\r\n  }\r\n\r\n  return fpSet(state, \"services\", \"mapEditor\", \"mouse\", (mouseState) => ({\r\n    ...mouseState,\r\n    currentPointerGesture: null,\r\n    mouseDownViewportPos: null,\r\n    mouseViewportPos: viewportPos,\r\n    modifierKeys,\r\n  }));\r\n}\r\n\r\nfunction completeDragSelect(\r\n  state: AppState,\r\n  action: MapEditorMouseUpAction\r\n): AppState {\r\n  const { viewportPos, modifierKeys } = action.payload;\r\n\r\n  const { mouseDownViewportPos } = state.services.mapEditor.mouse;\r\n  if (!mouseDownViewportPos) {\r\n    return state;\r\n  }\r\n\r\n  const worldMouseDownPos = clientToWorldSelector(state, mouseDownViewportPos);\r\n  const worldMouseUpPos = clientToWorldSelector(state, viewportPos);\r\n\r\n  const selectionRect = normalizeRectangle(worldMouseDownPos, worldMouseUpPos);\r\n\r\n  const idsToSelect = entityKeysAtRectSelector(state, selectionRect);\r\n\r\n  const mode = getSelectMode(modifierKeys);\r\n  return rootReducer(state, mapEditorSelectEntity(idsToSelect, mode));\r\n}\r\n\r\nfunction completeDragMove(\r\n  state: AppState,\r\n  action: MapEditorMouseUpAction\r\n): AppState {\r\n  const selectedEntityKeys =\r\n    state.services.mapEditor.selection.selectedEntityKeys;\r\n  if (selectedEntityKeys.length === 0) {\r\n    return state;\r\n  }\r\n\r\n  const { viewportPos } = action.payload;\r\n\r\n  const { mouseDownViewportPos } = state.services.mapEditor.mouse;\r\n  if (!mouseDownViewportPos) {\r\n    return state;\r\n  }\r\n\r\n  const worldMouseDownPos = clientToWorldSelector(state, mouseDownViewportPos);\r\n  const worldMouseUpPos = clientToWorldSelector(state, viewportPos);\r\n\r\n  const offset = pointSubtract(worldMouseUpPos, worldMouseDownPos);\r\n\r\n  return rootReducer(\r\n    state,\r\n    mapEditorEntityOffset(selectedEntityKeys, offset.x, offset.y)\r\n  );\r\n}\r\n\r\nfunction completeClick(\r\n  state: AppState,\r\n  action: MapEditorMouseUpAction\r\n): AppState {\r\n  const { viewportPos, modifierKeys } = action.payload;\r\n\r\n  const worldPos = clientToWorldSelector(state, viewportPos);\r\n  const selectedKey = entityKeyAtPointSelector(state, worldPos);\r\n\r\n  const mode = getSelectMode(modifierKeys);\r\n\r\n  if (selectedKey != null) {\r\n    return rootReducer(state, mapEditorSelectEntity(selectedKey, mode));\r\n  } else if (mode === \"set\") {\r\n    return rootReducer(state, mapEditorSelectClear());\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { isMapEditorToolRadiusSetAction } from \"@/actions/map-editor/tool-radius-set\";\r\n\r\nimport { createEditorMouseReducer } from \"../state-utils\";\r\n\r\nexport default createEditorMouseReducer((state, action) => {\r\n  if (!isMapEditorToolRadiusSetAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { radius } = action.payload;\r\n\r\n  if (radius <= 0) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    toolRadius: radius,\r\n  };\r\n});\r\n","import { isMapEditorToolSetAction } from \"@/actions/map-editor/tool-set\";\r\nimport { createEditorMouseReducer } from \"../state-utils\";\r\n\r\nexport default createEditorMouseReducer((state, action) => {\r\n  if (!isMapEditorToolSetAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { tool } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    currentTool: tool,\r\n  };\r\n});\r\n","import { pointSubtract } from \"@/geometry\";\r\nimport { AppState } from \"@/state\";\r\nimport { createSelector } from \"reselect\";\r\nimport {\r\n  worldMouseDownPosSelector,\r\n  worldMousePosSelector,\r\n} from \"./world-coords\";\r\n\r\nexport const dragMoveOffsetSelector = createSelector(\r\n  (state: AppState) => state.services.mapEditor.mouse.currentPointerGesture,\r\n  worldMousePosSelector,\r\n  worldMouseDownPosSelector,\r\n  (currentGesture, worldMousePos, worldMouseDownPos) => {\r\n    if (\r\n      currentGesture !== \"drag-move\" ||\r\n      !worldMousePos ||\r\n      !worldMouseDownPos\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    return pointSubtract(worldMousePos, worldMouseDownPos);\r\n  }\r\n);\r\n","import { createSelector } from \"reselect\";\r\n\r\nimport { normalizeRectangle } from \"@/geometry\";\r\n\r\nimport { createEditorMouseSelector } from \"../state-utils\";\r\nimport { EditorMouseServiceState } from \"../state\";\r\n\r\nexport const dragSelectionRectSelector = createEditorMouseSelector(\r\n  createSelector(\r\n    (state: EditorMouseServiceState) =>\r\n      state.currentPointerGesture == \"drag-select\" &&\r\n      state.mouseDownViewportPos,\r\n    (state: EditorMouseServiceState) =>\r\n      state.currentPointerGesture == \"drag-select\" && state.mouseViewportPos,\r\n    (dragStart, dragEnd) => {\r\n      if (dragStart && dragEnd) {\r\n        return normalizeRectangle(dragStart, dragEnd);\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  )\r\n);\r\n","import { AppState } from \"@/state\";\r\nimport { createEditorMouseSelector } from \"../state-utils\";\r\n\r\nexport const currentToolSelector = createEditorMouseSelector((state) => {\r\n  if (state.currentPointerGesture !== null) {\r\n    return \"pointer\" as const;\r\n  }\r\n\r\n  if (state.mouseDownViewportPos == null && state.modifierKeys.altKey) {\r\n    return \"pointer\" as const;\r\n  }\r\n\r\n  return state.currentTool;\r\n});\r\n\r\nexport const toolRadiusSelector = createEditorMouseSelector(\r\n  (state) => state.toolRadius\r\n);\r\n\r\nexport const toolViewportRadiusSelector = (state: AppState) => {\r\n  const radius = toolRadiusSelector(state);\r\n  return radius * state.services.mapEditor.view.zoomFactor;\r\n};\r\n","import { createEditorMouseSelector } from \"../state-utils\";\r\n\r\nexport const viewportMousePosSelector = createEditorMouseSelector(\r\n  (state) => state.mouseViewportPos\r\n);\r\n","import { clientToWorld } from \"@/services/map-editor/view/utils\";\r\nimport { AppState } from \"@/state\";\r\n\r\nexport const worldMousePosSelector = (state: AppState) => {\r\n  const mouseViewportPos = state.services.mapEditor.mouse.mouseViewportPos;\r\n  if (!mouseViewportPos) {\r\n    return null;\r\n  }\r\n  return clientToWorld(\r\n    mouseViewportPos,\r\n    state.services.mapEditor.view.offsetX,\r\n    state.services.mapEditor.view.offsetY,\r\n    state.services.mapEditor.view.zoomFactor\r\n  );\r\n};\r\n\r\nexport const worldMouseDownPosSelector = (state: AppState) => {\r\n  const mouseDownViewportPos =\r\n    state.services.mapEditor.mouse.mouseDownViewportPos;\r\n  if (!mouseDownViewportPos) {\r\n    return null;\r\n  }\r\n  return clientToWorld(\r\n    mouseDownViewportPos,\r\n    state.services.mapEditor.view.offsetX,\r\n    state.services.mapEditor.view.offsetY,\r\n    state.services.mapEditor.view.zoomFactor\r\n  );\r\n};\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"@/services/state-utils\";\r\n\r\nexport const createEditorMouseReducer = createServiceReducerCreator(\r\n  \"mapEditor\",\r\n  \"mouse\"\r\n);\r\nexport const createEditorMouseSelector = createServiceSelectorCreator(\r\n  \"mapEditor\",\r\n  \"mouse\"\r\n);\r\n","import { Point } from \"@/geometry\";\r\nimport { ModifierKeys, MODIFIER_KEYS_NONE } from \"@/modifier-keys\";\r\n\r\nexport type EditorMouseTool = \"pointer\" | \"eraser\" | \"paint-danger-zone\";\r\nexport type EditorMousePointerGesture = \"pan\" | \"drag-select\" | \"drag-move\";\r\n\r\nexport interface EditorMouseServiceState {\r\n  currentTool: EditorMouseTool;\r\n  toolRadius: number;\r\n  currentPointerGesture: null | EditorMousePointerGesture;\r\n  mouseDownViewportPos: Point | null;\r\n  mouseViewportPos: Point | null;\r\n  modifierKeys: ModifierKeys;\r\n}\r\n\r\nconst _defaultState: EditorMouseServiceState = {\r\n  currentTool: \"pointer\",\r\n  toolRadius: 2,\r\n  currentPointerGesture: null,\r\n  mouseDownViewportPos: null,\r\n  mouseViewportPos: null,\r\n  modifierKeys: MODIFIER_KEYS_NONE,\r\n};\r\n\r\nexport const defaultEditorMouseServiceState = Object.freeze(_defaultState);\r\n","import { concatReducers } from \"@/reducer/utils\";\r\n\r\nimport editorDamageReducer from \"../damage/reducer\";\r\nimport editorEntitiesReducer from \"../entities/reducer\";\r\nimport editorMouseReducer from \"../mouse/reducer\";\r\nimport editorSelectionReducer from \"../selection/reducer\";\r\nimport editorViewReducer from \"../view/reducer\";\r\n\r\nimport mapEditorMapEditReducer from \"./mapeditor-map-edit\";\r\nimport packageNewReducer from \"./package-new\";\r\nimport packageReceiveReducer from \"./package-receive\";\r\n\r\nexport default concatReducers(\r\n  editorDamageReducer,\r\n  editorEntitiesReducer,\r\n  editorMouseReducer,\r\n  editorSelectionReducer,\r\n  editorViewReducer,\r\n\r\n  mapEditorMapEditReducer,\r\n  packageNewReducer,\r\n  packageReceiveReducer\r\n);\r\n","import { isPotionBaseMapEditAction } from \"@/actions/potion-bases/map-edit\";\r\nimport { PRIORITY_PRE, reducerPriority } from \"@/reducer/priorities\";\r\n\r\nimport { defaultMapEditorState } from \"../state\";\r\nimport { createMapEditorReducer } from \"../state-utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createMapEditorReducer((state, action) => {\r\n    if (!isPotionBaseMapEditAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { potionBaseId } = action.payload;\r\n\r\n    return {\r\n      ...defaultMapEditorState,\r\n      potionBaseId,\r\n    };\r\n  })\r\n);\r\n","import { isPackageNewAction } from \"@/actions/packages/package-new\";\r\n\r\nimport { PRIORITY_PRE, reducerPriority } from \"@/reducer/priorities\";\r\n\r\nimport { defaultMapEditorState } from \"../state\";\r\nimport { createMapEditorReducer } from \"../state-utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createMapEditorReducer((state, action) => {\r\n    if (!isPackageNewAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    return defaultMapEditorState;\r\n  })\r\n);\r\n","import { isPackageReceiveAction } from \"@/actions/packages/package-receive\";\r\n\r\nimport { PRIORITY_PRE, reducerPriority } from \"@/reducer/priorities\";\r\n\r\nimport { defaultMapEditorState } from \"../state\";\r\nimport { createMapEditorReducer } from \"../state-utils\";\r\n\r\nexport default reducerPriority(\r\n  PRIORITY_PRE,\r\n  createMapEditorReducer((state, action) => {\r\n    if (!isPackageReceiveAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    return defaultMapEditorState;\r\n  })\r\n);\r\n","import { put, select, takeLatest } from \"redux-saga/effects\";\r\nimport values from \"lodash/values\";\r\n\r\nimport {\r\n  ACTION_EDITOR_COMMIT,\r\n  EditorCommitAction,\r\n} from \"@/actions/editors/commit\";\r\nimport { packageDataSetById } from \"@/actions/packages/package-data-set-byid\";\r\n\r\nimport { entitiesByKeySelector } from \"../entities/selectors/entities\";\r\n\r\nimport { editingPotionIdSelector } from \"../selectors\";\r\n\r\nexport default function* editorCommitSaga() {\r\n  yield takeLatest(ACTION_EDITOR_COMMIT, handleEditorCommit);\r\n}\r\n\r\nfunction* handleEditorCommit(action: EditorCommitAction) {\r\n  const potionId: ReturnType<typeof editingPotionIdSelector> = yield select(\r\n    editingPotionIdSelector\r\n  );\r\n  if (potionId == null) {\r\n    return;\r\n  }\r\n\r\n  const entities: ReturnType<typeof entitiesByKeySelector> = yield select(\r\n    entitiesByKeySelector\r\n  );\r\n\r\n  yield put(\r\n    packageDataSetById(\"potionBases\", potionId, \"mapEntities\", values(entities))\r\n  );\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport editorCommitSaga from \"./editor-commit\";\r\nimport mapModifySaga from \"./map-modify\";\r\nimport mapEditorMapEditSaga from \"./mapeditor-map-edit\";\r\n\r\nexport default function* mapEditorSaga() {\r\n  yield fork(editorCommitSaga);\r\n  yield fork(mapModifySaga);\r\n  yield fork(mapEditorMapEditSaga);\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport { ACTION_MAPEDITOR_ENTITY_DELETE } from \"@/actions/map-editor/entity-delete\";\r\nimport { ACTION_MAPEDITOR_ENTITY_INSERT } from \"@/actions/map-editor/entity-insert\";\r\nimport { ACTION_MAPEDITOR_ENTITY_OFFSET } from \"@/actions/map-editor/entity-offset\";\r\nimport { ACTION_MAPEDITOR_ENTITY_PROTOTYPE_INSTANTIATE } from \"@/actions/map-editor/entity-prototype-instantiate\";\r\nimport { ACTION_MAPEDITOR_MAP_CLEAR } from \"@/actions/map-editor/map-clear\";\r\nimport { ACTION_MAPEDITOR_MAP_IMPORT_TEMPLATE } from \"@/actions/map-editor/map-import-template\";\r\nimport { ACTION_MAPEDITOR_SELECTION_DELETE } from \"@/actions/map-editor/selection-delete\";\r\n\r\nimport { editorCommitQueue } from \"@/actions/editors/commit-queue\";\r\n\r\nconst MapModifyActions = [\r\n  ACTION_MAPEDITOR_ENTITY_DELETE,\r\n  ACTION_MAPEDITOR_ENTITY_INSERT,\r\n  ACTION_MAPEDITOR_ENTITY_OFFSET,\r\n  ACTION_MAPEDITOR_ENTITY_PROTOTYPE_INSTANTIATE,\r\n  ACTION_MAPEDITOR_MAP_CLEAR,\r\n  ACTION_MAPEDITOR_MAP_IMPORT_TEMPLATE,\r\n  ACTION_MAPEDITOR_SELECTION_DELETE,\r\n];\r\n\r\nexport default function* mapModifySaga() {\r\n  yield takeLatest(MapModifyActions, handleMapModified);\r\n}\r\n\r\nfunction* handleMapModified() {\r\n  yield put(editorCommitQueue());\r\n}\r\n","import { put, select, takeLatest } from \"redux-saga/effects\";\r\nimport find from \"lodash/find\";\r\n\r\nimport history from \"@/history\";\r\n\r\nimport {\r\n  ACTION_POTIONBASE_MAP_EDIT,\r\n  PotionBaseMapEditAction,\r\n} from \"@/actions/potion-bases/map-edit\";\r\n\r\nimport { packageDataSelector } from \"@/services/package/selectors/package\";\r\nimport { CruciblePackage } from \"@/services/package/types\";\r\nimport { mapEditorMapReceive } from \"@/actions/map-editor/map-receive\";\r\n\r\nexport default function* mapEditorMapEditSaga() {\r\n  yield takeLatest(ACTION_POTIONBASE_MAP_EDIT, handleMapEdit);\r\n}\r\n\r\nfunction* handleMapEdit(action: PotionBaseMapEditAction) {\r\n  const { potionBaseId } = action.payload;\r\n\r\n  const pkg: CruciblePackage | null = yield select(packageDataSelector);\r\n  if (!pkg) {\r\n    return;\r\n  }\r\n\r\n  const potionBase = find(pkg.potionBases ?? [], (p) => p.id === potionBaseId);\r\n  if (!potionBase) {\r\n    return;\r\n  }\r\n\r\n  yield put(mapEditorMapReceive(potionBase.mapEntities ?? []));\r\n\r\n  const path = `/potion-bases/${potionBaseId}/map-editor`;\r\n  if (history.location.pathname !== path) {\r\n    history.push(path);\r\n  }\r\n}\r\n","import { isMapEditorEntityDeleteAction } from \"@/actions/map-editor/entity-delete\";\r\nimport { createEditorSelectionReducer } from \"../state-utils\";\r\n\r\nexport default createEditorSelectionReducer((state, action) => {\r\n  if (!isMapEditorEntityDeleteAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { entityKeys } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    selectedEntityKeys: state.selectedEntityKeys.filter(\r\n      (x) => !entityKeys.includes(x)\r\n    ),\r\n  };\r\n});\r\n","import { concatReducers } from \"@/reducer/utils\";\r\n\r\nimport entityDeleteReducer from \"./entity-delete\";\r\nimport selectClearReducer from \"./select-clear\";\r\nimport selectEntityReducer from \"./select-entity\";\r\nimport selectionDeleteReducer from \"./selection-delete\";\r\n\r\nexport default concatReducers(\r\n  entityDeleteReducer,\r\n  selectClearReducer,\r\n  selectEntityReducer,\r\n  selectionDeleteReducer\r\n);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { isMapEditorSelectClearAction } from \"@/actions/map-editor/select-clear\";\r\n\r\nimport { defaultEditorSelectionState, EditorSelectionState } from \"../state\";\r\nimport { createEditorSelectionReducer } from \"../state-utils\";\r\n\r\nexport default createEditorSelectionReducer(function selectClearReducer(\r\n  state: EditorSelectionState = defaultEditorSelectionState,\r\n  action: AnyAction\r\n): EditorSelectionState {\r\n  if (!isMapEditorSelectClearAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    selectedEntityKeys: [],\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { isMapEditorSelectEntityAction } from \"@/actions/map-editor/select-entity\";\r\nimport { combineSelection } from \"@/selection-mode\";\r\n\r\nimport { defaultEditorSelectionState, EditorSelectionState } from \"../state\";\r\nimport { createEditorSelectionReducer } from \"../state-utils\";\r\n\r\nexport default createEditorSelectionReducer(function selectEntityReducer(\r\n  state: EditorSelectionState = defaultEditorSelectionState,\r\n  action: AnyAction\r\n): EditorSelectionState {\r\n  if (!isMapEditorSelectEntityAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { entityKeys, mode } = action.payload;\r\n  return {\r\n    ...state,\r\n    selectedEntityKeys: combineSelection(\r\n      state.selectedEntityKeys,\r\n      entityKeys,\r\n      mode\r\n    ),\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\n\r\nimport { isMapEditorSelectionDeleteAction } from \"@/actions/map-editor/selection-delete\";\r\nimport { mapEditorEntityDelete } from \"@/actions/map-editor/entity-delete\";\r\n\r\nimport rootReducer from \"@/reducer\";\r\n\r\nexport default function selectionDeleteReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isMapEditorSelectionDeleteAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const selectedEntityKeys =\r\n    state.services.mapEditor.selection.selectedEntityKeys;\r\n\r\n  if (selectedEntityKeys.length === 0) {\r\n    return state;\r\n  }\r\n\r\n  return rootReducer(state, mapEditorEntityDelete(selectedEntityKeys));\r\n}\r\n","import { EditorSelectionState } from \"../state\";\r\nimport { createEditorSelectionSelector } from \"../state-utils\";\r\n\r\nexport const isEntitySelectedSelector = createEditorSelectionSelector(\r\n  (s: EditorSelectionState, entityKey: string) =>\r\n    s.selectedEntityKeys.includes(entityKey)\r\n);\r\n\r\nexport const selectedEntityKeysSelector = createEditorSelectionSelector(\r\n  (s: EditorSelectionState) => s.selectedEntityKeys\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"@/services/state-utils\";\r\n\r\nexport const createEditorSelectionReducer = createServiceReducerCreator(\r\n  \"mapEditor\",\r\n  \"selection\"\r\n);\r\nexport const createEditorSelectionSelector = createServiceSelectorCreator(\r\n  \"mapEditor\",\r\n  \"selection\"\r\n);\r\n","export interface EditorSelectionState {\r\n  selectedEntityKeys: string[];\r\n}\r\n\r\nconst _defaultState: EditorSelectionState = {\r\n  selectedEntityKeys: [],\r\n};\r\n\r\nexport const defaultEditorSelectionState = Object.freeze(_defaultState);\r\n","import { createMapEditorSelector } from \"./state-utils\";\r\n\r\nexport const editingPotionIdSelector = createMapEditorSelector(\r\n  (s) => s.potionBaseId\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../state-utils\";\r\n\r\nexport const createMapEditorReducer = createServiceReducerCreator(\"mapEditor\");\r\nexport const createMapEditorSelector =\r\n  createServiceSelectorCreator(\"mapEditor\");\r\n","import { EditorDamageState, defaultEditorDamageState } from \"./damage/state\";\r\nimport { MapEntitiesState, defaultMapEntitiesState } from \"./entities/state\";\r\nimport {\r\n  EditorMouseServiceState,\r\n  defaultEditorMouseServiceState,\r\n} from \"./mouse/state\";\r\nimport {\r\n  EditorSelectionState,\r\n  defaultEditorSelectionState,\r\n} from \"./selection/state\";\r\nimport { EditorViewState, defaultEditorViewState } from \"./view/state\";\r\n\r\nexport interface MapEditorState {\r\n  potionBaseId: string | null;\r\n  damage: EditorDamageState;\r\n  entities: MapEntitiesState;\r\n  mouse: EditorMouseServiceState;\r\n  selection: EditorSelectionState;\r\n  view: EditorViewState;\r\n}\r\n\r\nconst _defaultState: MapEditorState = {\r\n  potionBaseId: null,\r\n  damage: defaultEditorDamageState,\r\n  entities: defaultMapEntitiesState,\r\n  mouse: defaultEditorMouseServiceState,\r\n  selection: defaultEditorSelectionState,\r\n  view: defaultEditorViewState,\r\n};\r\n\r\nexport const defaultMapEditorState = Object.freeze(_defaultState);\r\n","import * as React from \"react\";\r\n\r\nimport { Point } from \"@/geometry\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport {\r\n  editorOffsetXSelector,\r\n  editorOffsetYSelector,\r\n  editorZoomFactorSelector,\r\n} from \"../selectors/view\";\r\nimport { clientToWorld } from \"../utils\";\r\n\r\nexport function useClientToWorld() {\r\n  const offsetX = useSelector(editorOffsetXSelector);\r\n  const offsetY = useSelector(editorOffsetYSelector);\r\n  const zoomFactor = useSelector(editorZoomFactorSelector);\r\n\r\n  return React.useCallback(\r\n    (p: Point) => clientToWorld(p, offsetX, offsetY, zoomFactor),\r\n    [offsetX, offsetY, zoomFactor]\r\n  );\r\n}\r\n","import { concatReducers } from \"@/reducer/utils\";\r\n\r\nimport panReducer from \"./pan\";\r\nimport viewportResizeReducer from \"./viewport-resize\";\r\nimport zoomReducer from \"./zoom\";\r\n\r\nexport default concatReducers(panReducer, viewportResizeReducer, zoomReducer);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { isMapEditorPanAction } from \"@/actions/map-editor/pan\";\r\n\r\nimport { defaultEditorViewState, EditorViewState } from \"../state\";\r\nimport { createEditorViewReducer } from \"../state-utils\";\r\n\r\nexport default createEditorViewReducer(function panReducer(\r\n  state: EditorViewState = defaultEditorViewState,\r\n  action: AnyAction\r\n): EditorViewState {\r\n  if (!isMapEditorPanAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { x, y } = action.payload;\r\n\r\n  return {\r\n    ...state,\r\n    offsetX: state.offsetX + x,\r\n    offsetY: state.offsetY + y,\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { isMapEditorViewportResizeAction } from \"@/actions/map-editor/viewport-resize\";\r\n\r\nimport { defaultEditorViewState, EditorViewState } from \"../state\";\r\nimport { createEditorViewReducer } from \"../state-utils\";\r\n\r\nexport default createEditorViewReducer(function viewportResizeReducer(\r\n  state: EditorViewState = defaultEditorViewState,\r\n  action: AnyAction\r\n): EditorViewState {\r\n  if (!isMapEditorViewportResizeAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { height, width } = action.payload;\r\n\r\n  let zoomFactor = state.zoomFactor;\r\n  if (state.viewportWidth === 0) {\r\n    zoomFactor = Math.min(width, height) / 120;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    viewportWidth: width,\r\n    viewportHeight: height,\r\n    zoomFactor,\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\nimport { fpSet } from \"@/fp-set\";\r\nimport { pointSubtract } from \"@/geometry\";\r\n\r\nimport rootReducer from \"@/reducer\";\r\n\r\nimport { worldMousePosSelector } from \"@/services/map-editor/mouse/selectors/world-coords\";\r\n\r\nimport { isMapEditorZoomAction } from \"@/actions/map-editor/zoom\";\r\nimport { mapEditorPan } from \"@/actions/map-editor/pan\";\r\n\r\nexport default function zoomReducer(\r\n  state: AppState = defaultAppState,\r\n  action: AnyAction\r\n): AppState {\r\n  if (!isMapEditorZoomAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { zoomFactor } = action.payload;\r\n\r\n  const worldMousePos = worldMousePosSelector(state);\r\n\r\n  state = fpSet(\r\n    state,\r\n    \"services\",\r\n    \"mapEditor\",\r\n    \"view\",\r\n    \"zoomFactor\",\r\n    zoomFactor\r\n  );\r\n\r\n  const newMousePos = worldMousePosSelector(state);\r\n\r\n  if (worldMousePos != null && newMousePos != null) {\r\n    const offset = pointSubtract(worldMousePos, newMousePos);\r\n    state = rootReducer(state, mapEditorPan(offset.x, -offset.y));\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { Point } from \"@/geometry\";\r\n\r\nimport { EditorViewState } from \"../state\";\r\nimport { createEditorViewSelector } from \"../state-utils\";\r\n\r\nimport { clientToWorld, worldToClient } from \"../utils\";\r\n\r\nexport const clientToWorldSelector = createEditorViewSelector(\r\n  (s: EditorViewState, p: Point) =>\r\n    clientToWorld(p, s.offsetX, s.offsetY, s.zoomFactor)\r\n);\r\n\r\nexport const worldToClientSelector = createEditorViewSelector(\r\n  (s: EditorViewState, p: Point) =>\r\n    worldToClient(p, s.offsetX, s.offsetY, s.zoomFactor)\r\n);\r\n","import { createEditorViewSelector } from \"../state-utils\";\r\n\r\nexport const editorOffsetXSelector = createEditorViewSelector((s) => s.offsetX);\r\nexport const editorOffsetYSelector = createEditorViewSelector((s) => s.offsetY);\r\n\r\nexport const editorZoomFactorSelector = createEditorViewSelector(\r\n  (s) => s.zoomFactor\r\n);\r\n","import { createEditorViewSelector } from \"../state-utils\";\r\n\r\nexport const editorViewportWidthSelector = createEditorViewSelector(\r\n  (s) => s.viewportWidth\r\n);\r\nexport const editorViewportHeightSelector = createEditorViewSelector(\r\n  (s) => s.viewportHeight\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"@/services/state-utils\";\r\n\r\nexport const createEditorViewReducer = createServiceReducerCreator(\r\n  \"mapEditor\",\r\n  \"view\"\r\n);\r\nexport const createEditorViewSelector = createServiceSelectorCreator(\r\n  \"mapEditor\",\r\n  \"view\"\r\n);\r\n","export interface EditorViewState {\r\n  viewportWidth: number;\r\n  viewportHeight: number;\r\n  offsetX: number;\r\n  offsetY: number;\r\n  zoomFactor: number;\r\n}\r\n\r\nconst _defaultState: EditorViewState = {\r\n  viewportWidth: 0,\r\n  viewportHeight: 0,\r\n  offsetX: 0,\r\n  offsetY: 0,\r\n  zoomFactor: 1,\r\n};\r\n\r\nexport const defaultEditorViewState = Object.freeze(_defaultState);\r\n","import { Point } from \"@/geometry\";\r\n\r\nexport const worldToClient = (\r\n  p: Point,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  zoomFactor: number\r\n) => ({\r\n  x: (p.x - offsetX + 60) * zoomFactor,\r\n  y: (-p.y - offsetY + 60) * zoomFactor,\r\n});\r\n\r\nexport const clientToWorld = (\r\n  p: Point,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  zoomFactor: number\r\n) => ({\r\n  x: p.x / zoomFactor - 60 + offsetX,\r\n  y: (p.y / zoomFactor - 60 + offsetY) * -1,\r\n});\r\n","import navtreeExpandedSetReducer from \"./navtree-expanded-set\";\r\n\r\nexport default navtreeExpandedSetReducer;\r\n","import { isNavtreeExpandedValuesSetAction } from \"@/actions/navigation/navtree-expanded-set\";\r\n\r\nimport { createNavigationReducer } from \"../state-utils\";\r\n\r\nexport default createNavigationReducer((state, action) => {\r\n  if (!isNavtreeExpandedValuesSetAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    expandedNavTreeValues: action.payload.expandedValues,\r\n  };\r\n});\r\n","import { createNavigationSelector } from \"./state-utils\";\r\n\r\nexport const navtreeExpandedValuesSelector = createNavigationSelector(\r\n  (state) => state.expandedNavTreeValues\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../state-utils\";\r\n\r\nexport const createNavigationReducer =\r\n  createServiceReducerCreator(\"navigation\");\r\nexport const createNavigationSelector =\r\n  createServiceSelectorCreator(\"navigation\");\r\n","export interface NavigationState {\r\n  expandedNavTreeValues: string[];\r\n}\r\n\r\nconst _defaultState: NavigationState = {\r\n  expandedNavTreeValues: [\"home\"],\r\n};\r\n\r\nexport const defaultNavigationState = Object.freeze(_defaultState);\r\n","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { packageLoadFile } from \"@/actions/packages/package-load-file\";\r\n\r\nimport {\r\n  packageLoadErrorSelector,\r\n  packageLoadStatusSelector,\r\n} from \"../selectors/package\";\r\n\r\nexport interface UseLoadMapConfig {\r\n  loadStatus: \"idle\" | \"loading\" | \"loaded\" | \"error\";\r\n  loadError: string | null;\r\n  onLoadPackage(file: File): void;\r\n}\r\n\r\nexport default function useLoadPackage(): UseLoadMapConfig {\r\n  const dispatch = useDispatch();\r\n  const loadStatus = useSelector(packageLoadStatusSelector);\r\n  const loadError = useSelector(packageLoadErrorSelector);\r\n  const onLoadPackage = React.useCallback(\r\n    (file: File) => {\r\n      dispatch(packageLoadFile(file));\r\n    },\r\n    [dispatch]\r\n  );\r\n  return {\r\n    loadStatus,\r\n    loadError,\r\n    onLoadPackage,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { ItemOf } from \"@/arrays\";\r\nimport { extname } from \"@/paths\";\r\n\r\nimport { useSelector } from \"@/hooks/use-selector\";\r\n\r\nimport { packageResourceSetById } from \"@/actions/packages/package-resource-set-byid\";\r\n\r\nimport {\r\n  packageIdObjectDataSelector,\r\n  packageIdObjectResourceSelector,\r\n} from \"../selectors/package\";\r\nimport { CruciblePackage } from \"../types\";\r\n\r\nexport function usePotionBaseResource(\r\n  potionBaseId: string,\r\n  resourceKey: keyof ItemOf<CruciblePackage[\"potionBases\"]>\r\n): [\r\n  Uint8Array | null,\r\n  string | null,\r\n  (image: Uint8Array, imageName: string) => void\r\n] {\r\n  const dispatch = useDispatch();\r\n  const potionBase = useSelector((state) =>\r\n    packageIdObjectDataSelector(state, \"potionBases\", potionBaseId)\r\n  );\r\n\r\n  return [\r\n    useSelector(\r\n      (state) =>\r\n        packageIdObjectResourceSelector(\r\n          state,\r\n          \"potionBases\",\r\n          potionBaseId,\r\n          resourceKey\r\n        ) as any\r\n    ),\r\n    potionBase?.name ?? null,\r\n    React.useCallback(\r\n      (image: Uint8Array, imageName: string) => {\r\n        dispatch(\r\n          packageResourceSetById(\r\n            \"potionBases\",\r\n            potionBaseId,\r\n            resourceKey,\r\n            `${potionBaseId}/${resourceKey}.${extname(imageName)}`,\r\n            image\r\n          )\r\n        );\r\n      },\r\n      [potionBaseId]\r\n    ),\r\n  ];\r\n}\r\n","import { concatReducers } from \"@/reducer/utils\";\r\n\r\nimport packageDataSetByIdReducer from \"./package-data-set-byid\";\r\nimport packageDataSetReducer from \"./package-data-set\";\r\nimport packageIdObjectNewReducer from \"./package-idobject-new\";\r\nimport packageLoadErrorReducer from \"./package-load-error\";\r\nimport packageLoadFileReducer from \"./package-load-file\";\r\nimport packageNewReducer from \"./package-new\";\r\nimport packageReceiveReducer from \"./package-receive\";\r\nimport packageResourceSetById from \"./package-resource-set-byid\";\r\n\r\nexport default concatReducers(\r\n  packageDataSetByIdReducer,\r\n  packageDataSetReducer,\r\n  packageIdObjectNewReducer,\r\n  packageLoadErrorReducer,\r\n  packageLoadFileReducer,\r\n  packageNewReducer,\r\n  packageReceiveReducer,\r\n  packageResourceSetById\r\n);\r\n","import findIndex from \"lodash/findIndex\";\r\n\r\nimport { fpSetByArray } from \"@/fp-set\";\r\nimport { Encoder } from \"@/text-encoding\";\r\nimport { stringifyYaml } from \"@/services/yaml/api\";\r\n\r\nimport { isPackageDataSetByIdAction } from \"@/actions/packages/package-data-set-byid\";\r\n\r\nimport { createPackageReducer } from \"../state-utils\";\r\nimport { packageDataSelector } from \"../selectors/package\";\r\n\r\nexport default createPackageReducer((state, action) => {\r\n  if (!isPackageDataSetByIdAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { sectionKey, id, path, data } = action.payload;\r\n\r\n  if (state.loadingStatus != \"loaded\") {\r\n    return state;\r\n  }\r\n\r\n  const packageData = packageDataSelector.local(state);\r\n  if (!packageData) {\r\n    return state;\r\n  }\r\n\r\n  const index = findIndex(packageData[sectionKey], (x) => x.id === id);\r\n  if (index == -1) {\r\n    // Should we try to make a new one?\r\n    return state;\r\n  }\r\n\r\n  const newPackageData = fpSetByArray(\r\n    packageData,\r\n    [sectionKey, index, ...path],\r\n    data\r\n  );\r\n  const newPackgeStr = stringifyYaml(newPackageData);\r\n  const newPackageResource = Encoder.encode(newPackgeStr);\r\n  return {\r\n    ...state,\r\n    resources: {\r\n      ...state.resources,\r\n      \"package.yml\": newPackageResource,\r\n    },\r\n  };\r\n});\r\n","import { isPackageDataSetAction } from \"@/actions/packages/package-data-set\";\r\nimport { fpSetByArray } from \"@/fp-set\";\r\nimport { stringifyYaml } from \"@/services/yaml/api\";\r\nimport { Encoder } from \"@/text-encoding\";\r\nimport { packageDataSelector } from \"../selectors/package\";\r\nimport { createPackageReducer } from \"../state-utils\";\r\n\r\nexport default createPackageReducer((state, action) => {\r\n  if (!isPackageDataSetAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { path, data } = action.payload;\r\n\r\n  if (state.loadingStatus != \"loaded\") {\r\n    return state;\r\n  }\r\n\r\n  const packageData = packageDataSelector.local(state);\r\n  if (!packageData) {\r\n    return state;\r\n  }\r\n\r\n  const newPackageData = fpSetByArray(packageData, path, data);\r\n  const newPackageStr = stringifyYaml(newPackageData);\r\n  const newPackageResource = Encoder.encode(newPackageStr);\r\n  return {\r\n    ...state,\r\n    resources: {\r\n      ...state.resources,\r\n      \"package.yml\": newPackageResource,\r\n    },\r\n  };\r\n});\r\n","import { stringifyYaml } from \"@/services/yaml/api\";\r\nimport { Encoder } from \"@/text-encoding\";\r\n\r\nimport { isPackageIdObjectNewAction } from \"@/actions/packages/package-idobject-new\";\r\n\r\nimport {\r\n  packageDataSelector,\r\n  packageIdObjectDataSelector,\r\n} from \"../selectors/package\";\r\n\r\nimport { createPackageReducer } from \"../state-utils\";\r\nimport { CruciblePackage, CruciblePackageIdObject } from \"../types\";\r\n\r\nexport default createPackageReducer((state, action, appState) => {\r\n  if (!isPackageIdObjectNewAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  if (state.loadingStatus != \"loaded\") {\r\n    return state;\r\n  }\r\n\r\n  const packageData = packageDataSelector.local(state);\r\n  if (!packageData) {\r\n    return state;\r\n  }\r\n\r\n  const { key, id } = action.payload;\r\n\r\n  const exists = packageIdObjectDataSelector(appState, key, id);\r\n  if (exists != null) {\r\n    return state;\r\n  }\r\n\r\n  const newItem: CruciblePackageIdObject = {\r\n    id,\r\n  };\r\n\r\n  const newPackageData: CruciblePackage = {\r\n    ...packageData,\r\n    [key]: [...(packageData[key] ?? []), newItem],\r\n  };\r\n\r\n  const newPackageStr = stringifyYaml(newPackageData);\r\n  const newResource = Encoder.encode(newPackageStr);\r\n  return {\r\n    ...state,\r\n    resources: {\r\n      ...state.resources,\r\n      \"package.yml\": newResource,\r\n    },\r\n  };\r\n});\r\n","import { isPackageLoadErrorAction } from \"@/actions/packages/package-load-error\";\r\nimport { createPackageReducer } from \"../state-utils\";\r\n\r\nexport default createPackageReducer((state, action) => {\r\n  if (!isPackageLoadErrorAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    loadingStatus: \"error\",\r\n    loadError: action.payload.errorMessage,\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { isPackageLoadFileAction } from \"@/actions/packages/package-load-file\";\r\n\r\nimport { defaultPackageState, PackageState } from \"../state\";\r\nimport { createPackageReducer } from \"../state-utils\";\r\n\r\nexport default createPackageReducer(\r\n  (state: PackageState, action: AnyAction) => {\r\n    if (!isPackageLoadFileAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { file } = action.payload;\r\n\r\n    return {\r\n      ...defaultPackageState,\r\n      packageId: file.name,\r\n      loadingStatus: \"loading\",\r\n    };\r\n  }\r\n);\r\n","import { isPackageNewAction } from \"@/actions/packages/package-new\";\r\nimport { Encoder } from \"@/text-encoding\";\r\nimport { defaultPackageState } from \"../state\";\r\n\r\nimport { createPackageReducer } from \"../state-utils\";\r\n\r\nexport default createPackageReducer((state, action) => {\r\n  if (!isPackageNewAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...defaultPackageState,\r\n    packageId: \"new-package\",\r\n    loadingStatus: \"loaded\",\r\n    resources: {\r\n      \"package.yml\": Encoder.encode(`{}`),\r\n    },\r\n  };\r\n});\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { isPackageReceiveAction } from \"@/actions/packages/package-receive\";\r\n\r\nimport { defaultPackageState, PackageState } from \"../state\";\r\nimport { createPackageReducer } from \"../state-utils\";\r\n\r\nexport default createPackageReducer(\r\n  (state: PackageState, action: AnyAction) => {\r\n    if (!isPackageReceiveAction(action)) {\r\n      return state;\r\n    }\r\n\r\n    const { packageId, resources } = action.payload;\r\n\r\n    return {\r\n      ...defaultPackageState,\r\n      loadingStatus: \"loaded\",\r\n      packageId,\r\n      resources,\r\n    };\r\n  }\r\n);\r\n","import findIndex from \"lodash/findIndex\";\r\n\r\nimport { fpSetByArray } from \"@/fp-set\";\r\nimport { Encoder } from \"@/text-encoding\";\r\nimport { stringifyYaml } from \"@/services/yaml/api\";\r\n\r\nimport { isPackageResourceSetByIdAction } from \"@/actions/packages/package-resource-set-byid\";\r\n\r\nimport { createPackageReducer } from \"../state-utils\";\r\nimport { packageDataSelector } from \"../selectors/package\";\r\n\r\nexport default createPackageReducer((state, action) => {\r\n  if (!isPackageResourceSetByIdAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  const { sectionKey, id, path, resourceName, resource } = action.payload;\r\n\r\n  if (state.loadingStatus != \"loaded\") {\r\n    return state;\r\n  }\r\n\r\n  const packageData = packageDataSelector.local(state);\r\n  if (!packageData) {\r\n    return state;\r\n  }\r\n\r\n  const index = findIndex(packageData[sectionKey], (x) => x.id === id);\r\n  if (index == -1) {\r\n    // Should we try to make a new one?\r\n    return state;\r\n  }\r\n\r\n  const newPackageData = fpSetByArray(\r\n    packageData,\r\n    [sectionKey, index, ...path],\r\n    resourceName\r\n  );\r\n  const newPackgeStr = stringifyYaml(newPackageData);\r\n  const newPackageResource = Encoder.encode(newPackgeStr);\r\n  return {\r\n    ...state,\r\n    resources: {\r\n      ...state.resources,\r\n      \"package.yml\": newPackageResource,\r\n      [resourceName]: resource,\r\n    },\r\n  };\r\n});\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport packageLoadFileSaga from \"./package-load-file\";\r\nimport packageSaveSaga from \"./package-save\";\r\n\r\nexport default function* packageSaga() {\r\n  yield fork(packageLoadFileSaga);\r\n  yield fork(packageSaveSaga);\r\n}\r\n","import { entries } from \"lodash\";\r\nimport { loadAsync } from \"jszip\";\r\nimport { call, put, takeLatest } from \"@redux-saga/core/effects\";\r\nimport { SagaIterator } from \"@redux-saga/types\";\r\n\r\nimport {\r\n  ACTION_PACKAGE_LOAD_FILE,\r\n  PackageLoadFileAction,\r\n} from \"@/actions/packages/package-load-file\";\r\nimport { packageLoadError } from \"@/actions/packages/package-load-error\";\r\nimport { packageReceive } from \"@/actions/packages/package-receive\";\r\n\r\nexport default function* packageLoadFileSaga() {\r\n  yield takeLatest(ACTION_PACKAGE_LOAD_FILE, handlePackageLoadFile);\r\n}\r\n\r\nfunction* handlePackageLoadFile(action: PackageLoadFileAction): SagaIterator {\r\n  const { file } = action.payload;\r\n\r\n  try {\r\n    if (!file.name.endsWith(\".zip\")) {\r\n      throw new Error(\"Only zipped Crucible packages are supported.\");\r\n    }\r\n\r\n    const packageId = file.name.replace(/\\.zip$/, \"\");\r\n    const buffer: ArrayBuffer = yield call(() => file.arrayBuffer());\r\n\r\n    // jszip typings don't actually export the value returned by loadAsync...\r\n    const zip: Awaited<ReturnType<typeof loadAsync>> = yield call(() =>\r\n      loadAsync(buffer)\r\n    );\r\n\r\n    zip.generateAsync();\r\n\r\n    const resources: Record<string, Uint8Array> = {};\r\n    yield call(() =>\r\n      Promise.all(\r\n        entries(zip.files).map(([resourcePath, resource]) => {\r\n          return resource.async(\"uint8array\").then((data) => {\r\n            resources[resourcePath] = data;\r\n          });\r\n        })\r\n      )\r\n    );\r\n\r\n    if (resources[\"package.yml\"] == null) {\r\n      throw new Error(\"Package does not contain a package.yml file.\");\r\n    }\r\n\r\n    yield put(packageReceive(packageId, resources));\r\n  } catch (e: any) {\r\n    yield put(packageLoadError(e.message ?? String(e)));\r\n  }\r\n}\r\n","import { SagaIterator } from \"redux-saga\";\r\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { saveAs } from \"file-saver\";\r\nimport JSZip from \"jszip\";\r\n\r\nimport { ACTION_PACKAGE_SAVE } from \"@/actions/packages/package-save\";\r\nimport { editorCommit } from \"@/actions/editors/commit\";\r\n\r\nimport { packageResourcesSelector } from \"../selectors/resources\";\r\nimport { packageIdSelector } from \"../selectors/package\";\r\n\r\nexport default function* projectSaveSaga() {\r\n  yield takeEvery(ACTION_PACKAGE_SAVE, savePackage);\r\n}\r\n\r\nfunction* savePackage() {\r\n  const packageId: string | null = yield select(packageIdSelector);\r\n  if (!packageId) {\r\n    return;\r\n  }\r\n\r\n  yield put(editorCommit());\r\n\r\n  const zipData: Uint8Array = yield call(buildZip);\r\n  try {\r\n    if (window.showSaveFilePicker) {\r\n      yield call(saveNativeFileApi, zipData, packageId);\r\n    } else {\r\n      yield call(saveLegacy, zipData, packageId);\r\n    }\r\n  } catch (e) {\r\n    // TODO: Report error\r\n    console.warn(\"Failed to save project\", e);\r\n  }\r\n}\r\n\r\nfunction* buildZip(): SagaIterator<Uint8Array> {\r\n  const resources: Record<string, Uint8Array> = yield select(\r\n    packageResourcesSelector\r\n  );\r\n\r\n  const zip = new JSZip();\r\n  for (const key of Object.keys(resources)) {\r\n    const resource = resources[key];\r\n    zip.file(key, resource, { binary: true });\r\n  }\r\n\r\n  const result = yield call(() =>\r\n    zip.generateAsync({ type: \"uint8array\", compression: \"DEFLATE\" })\r\n  );\r\n\r\n  return result;\r\n}\r\n\r\nfunction* saveNativeFileApi(\r\n  zipData: Uint8Array,\r\n  packageId: string\r\n): SagaIterator {\r\n  const fileHandle: FileHandle | null = yield call(window.showSaveFilePicker!, {\r\n    // This isn't official yet, even with the not-official showSaveFilePicker\r\n    // https://github.com/WICG/file-system-access/blob/main/SuggestedNameAndDir.md#specifying-suggested-file-name-to-save-as\r\n    // It's so new, chrome does not yet support it, but it will:\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1145102\r\n    suggestedName: packageId,\r\n    types: [\r\n      {\r\n        description: \"Crucible Packages\",\r\n        accept: {\r\n          \"application/zip\": [\".zip\"],\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  if (!fileHandle) {\r\n    return;\r\n  }\r\n\r\n  const writable: FileSystemWritableStream = yield call(\r\n    fileHandle.createWritable.bind(fileHandle)\r\n  );\r\n  yield call(writable.write.bind(writable), zipData);\r\n  yield call(writable.close.bind(writable));\r\n}\r\n\r\nfunction* saveLegacy(zipData: Uint8Array, packageId: string): SagaIterator {\r\n  const blob = new Blob([zipData], {\r\n    type: \"application/zip\",\r\n  });\r\n\r\n  saveAs(blob, `${packageId}.zip`);\r\n}\r\n","import find from \"lodash/find\";\r\n\r\nimport { AppState } from \"@/state\";\r\nimport { emptyFrozenArray, ItemOf } from \"@/arrays\";\r\n\r\nimport { parseYaml } from \"@/services/yaml/api\";\r\n\r\nimport { createPackageSelector } from \"../state-utils\";\r\nimport {\r\n  CruciblePackage,\r\n  CruciblePackageIdObject,\r\n  CruciblePackageSectionKey,\r\n  CruciblePackageSections,\r\n} from \"../types\";\r\n\r\nimport {\r\n  packageResourceSelector,\r\n  packageTextResourceSelector,\r\n} from \"./resources\";\r\nimport { forEach } from \"lodash\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const packageLoadStatusSelector = createPackageSelector(\r\n  (x) => x.loadingStatus\r\n);\r\n\r\nexport const packageLoadErrorSelector = createPackageSelector(\r\n  (x) => x.loadError\r\n);\r\n\r\nexport const packageIdSelector = createPackageSelector((x) => x.packageId);\r\n\r\nlet cacheResources: any;\r\nlet cacheYaml: CruciblePackage | undefined;\r\nexport const packageDataSelector = createPackageSelector((state) => {\r\n  if (state.loadingStatus !== \"loaded\") {\r\n    return null;\r\n  }\r\n\r\n  if (cacheResources == state.resources) {\r\n    return cacheYaml;\r\n  }\r\n\r\n  const yamlStr = packageTextResourceSelector.local(state, \"package.yml\");\r\n  if (yamlStr == null) {\r\n    return null;\r\n  }\r\n\r\n  const yaml = parseYaml(yamlStr, (resourePath) => {\r\n    const resource = packageTextResourceSelector.local(state, resourePath);\r\n    if (resource == null) {\r\n      // TODO: We need to get this error to the user somehow...\r\n      // This will probably just crash the react renderer.\r\n      throw new Error(`Resource ${resourePath} not found`);\r\n    }\r\n    return resource;\r\n  }) as CruciblePackage;\r\n\r\n  cacheResources = state.resources;\r\n  cacheYaml = yaml;\r\n\r\n  return yaml;\r\n});\r\n\r\nexport function packageIdObjectIdsSelector(\r\n  state: AppState,\r\n  key: CruciblePackageSectionKey\r\n): string[] {\r\n  const data = packageDataSelector(state);\r\n  if (!data) {\r\n    return [];\r\n  }\r\n\r\n  const ids = data[key]?.map(\r\n    (idObject: CruciblePackageIdObject) => idObject.id\r\n  );\r\n  if (ids == null) {\r\n    return emptyFrozenArray<string>();\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\nexport function packageIdObjectsSelector<\r\n  TKey extends CruciblePackageSectionKey\r\n>(state: AppState, key: TKey): CruciblePackageSections[TKey] {\r\n  const data = packageDataSelector(state);\r\n  if (data == null || data[key] == null) {\r\n    return emptyFrozenArray() as CruciblePackageSections[TKey];\r\n  }\r\n  return data[key];\r\n}\r\n\r\nexport function packageIdObjectDataSelector<\r\n  TKey extends CruciblePackageSectionKey\r\n>(\r\n  state: AppState,\r\n  key: TKey,\r\n  id: string\r\n): ItemOf<CruciblePackageSections[TKey]> | null {\r\n  const data = packageDataSelector(state);\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  // This cast should be unnecessary, since all CruciblePackageSections are arrays of id objects.\r\n  // Typescript doesnt seem to agree though.\r\n  const entries = data[key] as CruciblePackageIdObject[];\r\n  return (find(entries, (entry) => entry.id === id) as any) ?? null;\r\n}\r\n\r\nexport function packageIdObjectResourceSelector<\r\n  TSection extends CruciblePackageSectionKey,\r\n  TK1 extends keyof ItemOf<CruciblePackageSections[TSection]>\r\n>(state: AppState, key: TSection, id: string, k1: TK1): Uint8Array | null {\r\n  const data = packageIdObjectDataSelector(state, key, id);\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  const resourcePath = data[k1] as unknown;\r\n  if (typeof resourcePath !== \"string\") {\r\n    return null;\r\n  }\r\n\r\n  return packageResourceSelector(state, resourcePath);\r\n}\r\n","import { Utf8Decoder } from \"@/text-encoding\";\r\n\r\nimport { PackageState } from \"../state\";\r\nimport { createPackageSelector } from \"../state-utils\";\r\n\r\nexport const packageResourcesSelector = createPackageSelector(\r\n  (s) => s.resources\r\n);\r\n\r\nexport const packageResourceSelector = createPackageSelector(\r\n  (state: PackageState, resourcePath: string) => {\r\n    const resource = state.resources[resourcePath];\r\n    if (resource == null) {\r\n      return null;\r\n    }\r\n    return resource;\r\n  }\r\n);\r\n\r\nexport const packageTextResourceSelector = createPackageSelector(\r\n  (state: PackageState, resourcePath: string) => {\r\n    const resource = state.resources[resourcePath];\r\n    if (resource == null) {\r\n      return null;\r\n    }\r\n\r\n    return Utf8Decoder.decode(state.resources[resourcePath]);\r\n  }\r\n);\r\n","import {\r\n  createServiceReducerCreator,\r\n  createServiceSelectorCreator,\r\n} from \"../state-utils\";\r\n\r\nexport const createPackageReducer = createServiceReducerCreator(\"package\");\r\nexport const createPackageSelector = createServiceSelectorCreator(\"package\");\r\n","export interface PackageState {\r\n  packageId: string | null;\r\n  loadingStatus: \"idle\" | \"loading\" | \"loaded\" | \"error\";\r\n  loadError: string | null;\r\n  resources: Record<string, Uint8Array>;\r\n}\r\n\r\nconst _defaultState: PackageState = {\r\n  packageId: null,\r\n  loadingStatus: \"idle\",\r\n  loadError: null,\r\n  resources: {},\r\n};\r\n\r\nexport const defaultPackageState = Object.freeze(_defaultState);\r\n","import { concatReducers } from \"@/reducer/utils\";\r\n\r\nimport i18nReducer from \"./i18n/reducer\";\r\nimport mapEditorReducer from \"./map-editor/reducer\";\r\nimport navigationReducer from \"./navigation/reducer\";\r\nimport packageReducer from \"./package/reducer\";\r\n\r\nexport default concatReducers(\r\n  i18nReducer,\r\n  mapEditorReducer,\r\n  navigationReducer,\r\n  packageReducer\r\n);\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport commitQueueSaga from \"./commit-queue/saga\";\r\nimport mapEditorSaga from \"./map-editor/saga\";\r\nimport packageSaga from \"./package/saga\";\r\n\r\nexport function* servicesSaga() {\r\n  yield fork(commitQueueSaga);\r\n  yield fork(mapEditorSaga);\r\n  yield fork(packageSaga);\r\n}\r\n","import { AnyAction, Reducer } from \"redux\";\r\nimport get from \"lodash/get\";\r\n\r\nimport { AppState, defaultAppState } from \"@/state\";\r\nimport { fpSetByArray } from \"@/fp-set\";\r\n\r\nexport type ServiceKey = keyof AppState[\"services\"];\r\nexport type SubServiceKey<T extends ServiceKey> = keyof AppState[\"services\"][T];\r\nexport type ServiceState<TServiceKey extends ServiceKey> =\r\n  AppState[\"services\"][TServiceKey];\r\nexport type SubServiceState<\r\n  TServiceKey extends ServiceKey,\r\n  TSubServiceKey extends SubServiceKey<TServiceKey>\r\n> = ServiceState<TServiceKey>[TSubServiceKey];\r\n\r\nexport interface ServiceReducer<TServiceState> {\r\n  (\r\n    state: Readonly<TServiceState>,\r\n    action: AnyAction,\r\n    appState: AppState\r\n  ): TServiceState;\r\n}\r\n\r\nexport function createServiceReducerCreator<TServiceKey extends ServiceKey>(\r\n  service: TServiceKey\r\n): (\r\n  reducer: ServiceReducer<ServiceState<TServiceKey>>\r\n) => Reducer<AppState, AnyAction>;\r\nexport function createServiceReducerCreator<\r\n  TServiceKey extends ServiceKey,\r\n  TSubServiceKey extends SubServiceKey<TServiceKey>\r\n>(\r\n  service: TServiceKey,\r\n  service2: TSubServiceKey\r\n): (\r\n  reducer: ServiceReducer<SubServiceState<TServiceKey, TSubServiceKey>>\r\n) => Reducer<AppState, AnyAction>;\r\nexport function createServiceReducerCreator(\r\n  ...serviceKeys: string[]\r\n): (reducer: ServiceReducer<any>) => Reducer<AppState, AnyAction> {\r\n  return (reducer: ServiceReducer<any>) => {\r\n    return (state: AppState = defaultAppState, action: AnyAction) => {\r\n      const oldState = get(state.services, serviceKeys);\r\n      const newState = reducer(oldState, action, state);\r\n      if (oldState != newState) {\r\n        return fpSetByArray(state, [\"services\", ...serviceKeys], newState);\r\n      }\r\n      return state;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface ServiceSelectorA0<TServiceState, TReturn> {\r\n  (s: AppState): TReturn;\r\n  local(s: TServiceState): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorA1<TServiceState, TA1, TReturn> {\r\n  (s: AppState, a1: TA1): TReturn;\r\n  local(s: TServiceState, a1: TA1): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorA2<TServiceState, TA1, TA2, TReturn> {\r\n  (s: AppState, a1: TA1, a2: TA2): TReturn;\r\n  local(s: TServiceState, a1: TA1, a2: TA2): TReturn;\r\n}\r\n\r\nexport interface ServiceSelectorCreator<TServiceKey extends ServiceKey> {\r\n  <TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>) => TReturn\r\n  ): ServiceSelectorA0<ServiceState<TServiceKey>, TReturn>;\r\n  <TA1, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, a1: TA1) => TReturn\r\n  ): ServiceSelectorA1<ServiceState<TServiceKey>, TA1, TReturn>;\r\n  <TA1, TA2, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, a1: TA1, a2: TA2) => TReturn\r\n  ): ServiceSelectorA2<ServiceState<TServiceKey>, TA1, TA2, TReturn>;\r\n}\r\n\r\nexport interface SubServiceSelectorCreator<\r\n  TServiceKey extends ServiceKey,\r\n  TSubServiceKey extends SubServiceKey<TServiceKey>\r\n> {\r\n  <TReturn>(\r\n    selector: (s: SubServiceState<TServiceKey, TSubServiceKey>) => TReturn\r\n  ): ServiceSelectorA0<SubServiceState<TServiceKey, TSubServiceKey>, TReturn>;\r\n  <TA1, TReturn>(\r\n    selector: (\r\n      s: SubServiceState<TServiceKey, TSubServiceKey>,\r\n      a1: TA1\r\n    ) => TReturn\r\n  ): ServiceSelectorA1<\r\n    SubServiceState<TServiceKey, TSubServiceKey>,\r\n    TA1,\r\n    TReturn\r\n  >;\r\n  <TA1, TA2, TReturn>(\r\n    selector: (\r\n      s: SubServiceState<TServiceKey, TSubServiceKey>,\r\n      a1: TA1,\r\n      a2: TA2\r\n    ) => TReturn\r\n  ): ServiceSelectorA2<\r\n    SubServiceState<TServiceKey, TSubServiceKey>,\r\n    TA1,\r\n    TA2,\r\n    TReturn\r\n  >;\r\n}\r\n\r\nexport function createServiceSelectorCreator<TServiceKey extends ServiceKey>(\r\n  service: TServiceKey\r\n): ServiceSelectorCreator<TServiceKey>;\r\nexport function createServiceSelectorCreator<\r\n  TServiceKey extends ServiceKey,\r\n  TSubServiceKey extends SubServiceKey<TServiceKey>\r\n>(\r\n  service: TServiceKey,\r\n  subService: TSubServiceKey\r\n): SubServiceSelectorCreator<TServiceKey, TSubServiceKey>;\r\nexport function createServiceSelectorCreator<TServiceKey extends ServiceKey>(\r\n  ...serviceKeys: string[]\r\n): ServiceSelectorCreator<any> {\r\n  return <TArgs, TReturn>(\r\n    selector: (s: ServiceState<TServiceKey>, ...args: TArgs[]) => TReturn\r\n  ) => {\r\n    const appSelector: any = (s: AppState, ...args: TArgs[]) => {\r\n      const state = get(s.services, serviceKeys);\r\n      return selector(state, ...args);\r\n    };\r\n    appSelector.local = selector;\r\n    return appSelector;\r\n  };\r\n}\r\n","import { I18NState, defaultI18NState } from \"./i18n/state\";\r\nimport { MapEditorState, defaultMapEditorState } from \"./map-editor/state\";\r\nimport { NavigationState, defaultNavigationState } from \"./navigation/state\";\r\nimport { PackageState, defaultPackageState } from \"./package/state\";\r\n\r\nexport interface ServicesState {\r\n  i18n: I18NState;\r\n  mapEditor: MapEditorState;\r\n  navigation: NavigationState;\r\n  package: PackageState;\r\n}\r\n\r\nexport const defaultServicesState: Readonly<ServicesState> = Object.freeze({\r\n  i18n: defaultI18NState,\r\n  mapEditor: defaultMapEditorState,\r\n  navigation: defaultNavigationState,\r\n  package: defaultPackageState,\r\n});\r\n","import { parse, stringify, CST, Document } from \"yaml\";\r\n\r\nexport function parseYaml(\r\n  yaml: string,\r\n  resolveImport: (resourcePath: string) => string\r\n): any {\r\n  // Frustratingly, the Tag interface is not exported from yaml.\r\n  const importTag = {\r\n    identify: (value: any) => false,\r\n    tag: \"!import\",\r\n    resolve: (doc: Document, cst: CST.Node) => {\r\n      const resourcePath = (cst as CST.PlainValue).strValue;\r\n      if (!resourcePath) {\r\n        throw new Error(\"Invalid import path\");\r\n      }\r\n      const imported = resolveImport(resourcePath);\r\n      return parse(imported, { merge: true, customTags: [importTag] });\r\n    },\r\n  };\r\n  return parse(yaml, { merge: true, customTags: [importTag] });\r\n}\r\n\r\nexport function stringifyYaml(data: any) {\r\n  return stringify(data);\r\n}\r\n","export * from \"./utils\";\r\n\r\nimport { ServicesState, defaultServicesState } from \"@/services/state\";\r\n\r\nexport interface AppState {\r\n  services: ServicesState;\r\n}\r\n\r\nexport const defaultAppState: Readonly<AppState> = Object.freeze({\r\n  services: defaultServicesState,\r\n});\r\n","import { Selector } from \"react-redux\";\r\nimport { createStructuredSelector as createSS } from \"reselect\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nexport type StructuredStateProps<\r\n  TSelectors extends Record<string, Selector<AppState, TOwnProps, any>>,\r\n  TOwnProps = {}\r\n> = { [K in keyof TSelectors]: ReturnType<TSelectors[K]> };\r\n\r\n/**\r\n * Type wrangling function to provide better type inferencing\r\n * for createStructuredSelector against our AppState.\r\n *\r\n * By inverting the type relationship from the real cSS, we\r\n * allow the selector to become the primary inferred type\r\n * and generate the state props from its return types.\r\n */\r\nexport function createStructuredSelector<\r\n  TSelectors extends Record<string, Selector<AppState, any, any>>\r\n>(\r\n  selectors: TSelectors\r\n): (state: AppState) => StructuredStateProps<TSelectors> {\r\n  return createSS(selectors as any) as any;\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"../store\";\r\n\r\nconst StoreProvider: React.FC = ({ children }) => (\r\n  <Provider store={store}>{children}</Provider>\r\n);\r\nexport default StoreProvider;\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { AppState } from \"@/state\";\r\n\r\nimport { ACTION_MAPEDITOR_MOUSE_MOVE } from \"@/actions/map-editor/mouse-move\";\r\nimport { ACTION_MAPEDITOR_PAN } from \"@/actions/map-editor/pan\";\r\nimport { ACTION_MAPEDITOR_ZOOM } from \"@/actions/map-editor/zoom\";\r\nimport { ACTION_MAPEDITOR_RENDERED } from \"@/actions/map-editor/rendered\";\r\nimport { ACTION_EDITOR_COMMIT_QUEUE } from \"@/actions/editors/commit-queue\";\r\n\r\nexport const actionsBlacklist: string[] = [\r\n  ACTION_MAPEDITOR_MOUSE_MOVE,\r\n  ACTION_MAPEDITOR_PAN,\r\n  ACTION_MAPEDITOR_ZOOM,\r\n  ACTION_MAPEDITOR_RENDERED,\r\n  ACTION_EDITOR_COMMIT_QUEUE,\r\n];\r\n\r\nexport function actionSanitizer(action: AnyAction): AnyAction {\r\n  return action;\r\n}\r\n\r\nexport function stateSanitizer(state: AppState): any {\r\n  return {\r\n    ...state,\r\n    services: {\r\n      ...state.services,\r\n      package: {\r\n        ...state.services.package,\r\n        resources: undefined,\r\n      },\r\n    },\r\n  };\r\n}\r\n","import { AppState, createStructuredSelector } from \"@/state\";\r\n\r\nimport {\r\n  loadState as loadI18nState,\r\n  persistState as persistI18nState\r\n} from \"@/services/i18n/persist\";\r\n\r\nexport function loadPersistedState(state: AppState): AppState {\r\n  const persistedState = getStoredState();\r\n\r\n  return {\r\n    ...state,\r\n    services: {\r\n      ...state.services,\r\n      i18n: loadI18nState(state.services.i18n, persistedState.i18n || {})\r\n    }\r\n  };\r\n}\r\n\r\n// Store the last persisted state to avoid setting the item\r\n//  when no data has changed.\r\nlet lastPersistedState: any = null;\r\n\r\nconst buildPersistedState = createStructuredSelector({\r\n  i18n: persistI18nState\r\n});\r\n\r\nexport function savePersistedState(state: AppState) {\r\n  const persistedState = buildPersistedState(state);\r\n  if (lastPersistedState === persistedState) {\r\n    return;\r\n  }\r\n  setStoredState(persistedState);\r\n  lastPersistedState = persistedState;\r\n}\r\n\r\nconst PERSISTED_STATE_KEY = \"persisted-state\";\r\n\r\nfunction getStoredState(): any {\r\n  const stateJson = localStorage.getItem(PERSISTED_STATE_KEY);\r\n  if (!stateJson) {\r\n    return {};\r\n  }\r\n\r\n  try {\r\n    return JSON.parse(stateJson);\r\n  } catch {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction setStoredState(state: any) {\r\n  localStorage.setItem(PERSISTED_STATE_KEY, JSON.stringify(state));\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\n\r\nimport { servicesSaga } from \"@/services/saga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield fork(servicesSaga);\r\n}\r\n","import {\r\n  compose,\r\n  createStore as createReduxStore,\r\n  applyMiddleware,\r\n} from \"redux\";\r\n\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { defaultAppState } from \"@/state\";\r\nimport { initialize } from \"@/actions/initialize\";\r\n\r\nimport reducer from \"@/reducer\";\r\n\r\nimport { loadPersistedState, savePersistedState } from \"./persist\";\r\n\r\nimport {\r\n  actionSanitizer,\r\n  stateSanitizer,\r\n  actionsBlacklist,\r\n} from \"./devtool-sanitizer\";\r\n\r\nimport saga from \"./saga\";\r\n\r\nfunction createStore() {\r\n  const composeEnhancers =\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        actionSanitizer,\r\n        stateSanitizer,\r\n        actionsBlacklist,\r\n      })) ||\r\n    compose;\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const initialState = loadPersistedState(defaultAppState);\r\n\r\n  const store = createReduxStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n  );\r\n\r\n  sagaMiddleware.run(saga);\r\n\r\n  store.subscribe(() => savePersistedState(store.getState()));\r\n  store.dispatch(initialize());\r\n\r\n  return store;\r\n}\r\n\r\nconst store = createStore();\r\nexport default store;\r\n","import \"normalize.css\";\r\n\r\nimport \"./colors.css\";\r\nimport \"./global.css\";\r\n","export const Utf8Decoder = new TextDecoder(\"utf-8\");\r\nexport const Encoder = new TextEncoder();\r\n"],"names":["ACTION_EDITOR_COMMIT_QUEUE","editorCommitQueue","type","action","ACTION_EDITOR_COMMIT","editorCommit","ACTION_INITIALIZE","initialize","ACTION_MAPEDITOR_ENTITY_DELETE","mapEditorEntityDelete","entityKeys","payload","asArray","ACTION_MAPEDITOR_ENTITY_INSERT","mapEditorEntityInsert","entity","entities","x","ACTION_MAPEDITOR_ENTITY_OFFSET","mapEditorEntityOffset","offsetX","offsetY","ACTION_MAPEDITOR_ENTITY_PROTOTYPE_INSTANTIATE","mapEditorEntityPrototypeInstantiate","prototype","worldPos","entityKey","ACTION_MAPEDITOR_MAP_CLEAR","mapEditorMapClear","ACTION_MAPEDITOR_MAP_IMPORT_TEMPLATE","mapEditorMapImportTemplate","templateId","ACTION_MAPEDITOR_MAP_RECEIVE","mapEditorMapReceive","ACTION_MAPEDITOR_MODIFIERKEYS_CHANGED","mapEditorModifierKeysChanged","modifiers","ACTION_MAPEDITOR_MOUSE_DOWN","mapEditorMouseDown","viewportPos","modifierKeys","ACTION_MAPEDITOR_MOUSE_MOVE","mapEditorMouseMove","ACTION_MAPEDITOR_MOUSE_OUT","mapEditorMouseOut","ACTION_MAPEDITOR_MOUSE_UP","mapEditorMouseUp","ACTION_MAPEDITOR_PAN","mapEditorPan","xOffset","yOffset","y","ACTION_MAPEDITOR_RENDERED","mapEditorRendered","ACTION_MAPEDITOR_SELECT_CLEAR","mapEditorSelectClear","ACTION_MAPEDITOR_SELECT_ENTITY","mapEditorSelectEntity","mode","ACTION_MAPEDITOR_SELECTION_DELETE","mapEditorSelectionDelete","ACTION_MAPEDITOR_TOOL_RADIUS_SET","mapEditorToolRadiusSet","radius","ACTION_MAPEDITOR_TOOL_SET","mapEditorToolSet","tool","ACTION_MAPEDITOR_VIEWPORT_RESIZE","mapEditorViewportResize","width","height","ACTION_MAPEDITOR_ZOOM","mapEditorZoom","zoomFactor","ACTION_NAVTREE_EXPANDEDVALUES_SET","navtreeExpandedValuesSet","expandedValues","ACTION_PACKAGE_DATA_SET_BYID","sectionKey","id","args","path","slice","length","data","ACTION_PACKGE_DATA_SET","ACTION_PACKAGE_IDOBJECT_NEW","packageIdObjectNew","key","ACITON_PACKAGE_LOAD_ERROR","packageLoadError","errorMessage","ACTION_PACKAGE_LOAD_FILE","packageLoadFile","file","ACTION_PACKAGE_NEW","packageNew","ACTION_PACKAGE_RECEIVE","packageReceive","packageId","resources","ACTION_PACKAGE_RESOURCE_SET_BYID","resourceName","resource","ACTION_PACKAGE_SAVE","packageSave","ACTION_POTIONBASE_MAP_EDIT","potionBaseMapEdit","potionBaseId","ACTION_SET_LANGUAGE","setLanguage","language","Array","isArray","_emptyArray","Object","freeze","ctx","handler","save","scale","translate","restore","beginPath","fillStyle","arc","POTION_RADIUS","Math","PI","fill","isSelected","renderResources","EntityDefsByType","entityType","render","disabled","accept","onFileLoaded","onInteractionComplete","children","inputRef","React","useRef","onClick","useCallback","current","click","onFileChange","e","files","target","ref","style","display","onChange","content","placement","anchorEl","open","setOpen","useState","onClose","MenuCloseListener","isOpen","onRequestClose","Button","forwardRef","className","variant","size","props","LinkButton","Link","color","svgRef","setIsOpen","bufferedColor","setBufferedColor","onSketchColorChange","hex","onSketchColorCommit","cx","cy","r","SketchPicker","onChangeComplete","value","onCommit","editingValue","setEditingValue","onBlur","orientation","useSelector","packageLoadStatusSelector","Redirect","to","label","imageResource","imageResourceName","isLoading","setLoading","imageUrl","useMemo","URL","createObjectURL","Blob","buffer","extname","arrayBuffer","then","Uint8Array","name","finally","FontAwesomeIcon","icon","faFileUpload","src","toolSize","toolRadiusSelector","currentTool","currentToolSelector","onIncreaseToolSize","useClickAction","onDecreaseToolSize","onPointerClick","onEraserClick","onBonesClick","toFixed","bonePrototype","i18nKey","prefab","angle","boneItems","t","useTranslation","entityPrototypes","setClosed","useBooleanSetState","map","entityPrototype","i","PotionEffectDraggableItem","selfRef","setSelfRef","displayName","canvasRef","dragRef","useDrag","DRAGOBJECT_NEW_ENTITY","item","newEntityDragObject","isShowingTooltip","showTooltip","hideTooltip","renderResourcesSelector","useLayoutEffect","canvas","getContext","onMouseOut","effects","potionEffectEntityPrototypesSelector","vortexPrototype","vortexItems","HotkeysContainer","dispatch","useDispatch","keyHandlers","KEYMAP_DELETE","defaultPrevented","preventDefault","HotKeys","keyMap","handlers","component","entitiesByKey","entitiesByKeySelector","selectedEntityKeys","selectedEntityKeysSelector","editorOffsetXSelector","editorOffsetYSelector","editorZoomFactorSelector","viewportWidth","editorViewportWidthSelector","viewportHeight","editorViewportHeightSelector","dragMoveOffset","dragMoveOffsetSelector","useEffect","clearRect","transformToMap","renderEntity","store","useStore","pointerRef","canvasBounds","useComponentBounds","clientToWorld","useClientToWorld","eventCanvasPoint","clientX","left","clientY","top","onMouseEnter","focus","onPointerDown","pointerId","currentTarget","setPointerCapture","getModifiers","p","onPointerMove","onPointerUp","releasePointerCapture","onKeyDown","onKeyUp","_","dropRef","useDrop","drop","monitor","isNewEntityDragObject","getClientOffset","worldP","animationFrame","state","getState","damageRect","editorDamageRectSelector","p1","LargestEntityRadius","p2","redrawRect","clearClientP1","worldToClientSelector","clearClientP2","normalizeRectangle","max","min","lineWidth","setLineDash","moveTo","lineTo","stroke","renderPotionStart","keys","pointIntersectsRect","includes","unsubscribe","subscribe","requestAnimationFrame","cancelAnimationFrame","tabIndex","selectionRect","dragSelectionRectSelector","mousePos","viewportMousePosSelector","toolRadius","toolViewportRadiusSelector","strokeWidth","opacity","strokeDasharray","ZOOM_FACTOR","PAN_FACTOR","containerRef","containerBounds","onWheel","ctrlMetaKey","nextZoom","deltaY","stopPropagation","shiftKey","useNativeEvent","passive","keymap","MenuCloseContext","createContext","useMenuCloseContext","useContext","onCloseProp","onCloseChain","Provider","autoDismissMenu","secondary","requestMenuClose","onItemClick","d","createPortal","FocusOn","onClickOutside","onEscapeKey","AutoFocusInside","document","body","navtreeExpandedValues","navtreeExpandedValuesSelector","onExpandedValuesChanged","values","potionBaseIds","packageIdObjectIdsSelector","potionEffectIds","PackageMenu","loadStatus","onLoadPackage","onNew","useAction","onSave","titlebarContent","showContentTree","noop","popperRef","setPopperRef","attributes","styles","usePopper","usePopperChild","popperChildren","registerPopperChild","unregisterPopperChild","useArrayState","insideRefs","useOutsideMouseEvent","PopperChildContextProvider","popper","noopPopperChildContext","PopperChildContext","usePopperChildContext","contextRegister","contextUnregister","parent","parentRegister","parentUnregister","element","providedContext","popperContext","ctxRef","title","titlebar","arrowRef","setArrowRef","popperStyles","options","offset","role","arrow","pathname","useLocation","useLinkClicked","selected","context","setExpandedValues","TreeChildContext","emptyFrozenArray","useTreeChildContext","isExpanded","indexOf","onChevronClick","filter","v","onLabelClick","fixedWidth","faChevronDown","faChevronRight","VORTEX_MEDIUM","VORTEX_LARGE","makeImg","img","Image","onerror","console","error","bind","DangerZoneImages","Bone1","Bone2","Fang1","Fang2","Skull1","DangerZonePartDef","hitRadius","tweakStyles","rotate","fillRect","w","h","drawImage","ExperienceBonusDef","resourceCache","PotionEffectDef","rect","effectId","resourceId","image","resourceToImage","tryGetResourceImage","effect","VortexDef","DangerZonePart","ExperienceBonus","PotionEffect","Vortex","reduce","def","TileDataByType","tileType","tileData","tileEntities","padding","tilePadding","tileBounds","tileSize","calcSize","tileXOrdinal","floor","ceil","tileYOrdinal","tileEntity","push","fpSetByArray","firstPaths","String","lastPath","newData","clone","rollingTarget","seg","obj","assign","ZeroPoint","ZeroRect","sqrt","history","createHashHistory","actionCreator","preBind","defaultValue","items","setItems","addItem","removeItem","defaultState","setState","setSize","right","bottom","observer","ResizeObserver","el","b","getBoundingClientRect","observe","disconnect","listener","listenTarget","addEventListener","removeEventListener","isTruthy","Boolean","onOutsideEvent","when","onEvent","elements","every","contains","selector","rootEl","getElementById","ReactDOM","event","button","isModifierPressed","oil","water","TemplatesByName","MODIFIER_KEYS_NONE","ctrlKey","altKey","metaKey","keyboardModifierUseMeta","loadingState","packageLoadErrorSelector","packageData","packageDataSelector","onSetPackageName","packageDataSet","onSetPackageAuthor","author","onSetPackageDescription","description","ingredientIds","newIngredientId","setNewIngredientId","newPotionId","setNewPotionId","onRequestNewPotionBase","onCancelNewPotionBase","onNewPotionBase","autoFocus","match","params","MapMenu","onMapClear","MapImportMenu","MapImportTemplateMenu","onNewWaterMap","onNewOilMap","potionBase","packageIdObjectDataSelector","onSetUnlockedOnStart","packageDataSetById","checked","unlockedOnStart","onSetColor","liquidColor","onSetDescription","placeholder","minRows","ingredientListIcon","ingredientListIconName","onSetIngredientListIcon","usePotionBaseResource","menuButtonImage","menuButtonImageName","onSetMenuButtonImage","menuButtonHoverImage","menuButtonHoverImageName","onSetMenuButtonHoverImage","menuButtonSelectedImage","menuButtonSelectedImageName","onSetMenuButtonSelectedImage","menuButtonLockedImage","menuButtonLockedImageName","onSetMenuButtonLockedImage","ladleImage","ladleImageName","onSetLadleImage","recipeStepImage","recipeStepImageName","onSetRecipeStepImage","mapOriginImage","mapOriginImageName","onSetMapOriginImage","onSetName","tooltipImage","tooltipImageName","onSetTooltipImage","newEffectId","setNewEffectId","onRequestNewEffect","onCancelNewEffect","onNewPotionEffect","potionEffectId","potionEffect","onColorChange","potionColor","effectIcon","packageIdObjectResourceSelector","setEffectIcon","imageName","packageResourceSetById","idx","lastIndexOf","substring","finalizedReducer","finalizeReducerList","defaultAppState","PRIORITY_PRE","PRIORITY_POST","priority","reducer","weight","reducers","concat","finalizedList","Router","DndProvider","backend","HTML5Backend","Switch","Route","exact","osPlatform","os","family","OSType","test","isProd","defaultMode","selectedIds","chosenIds","chosen","doCommit","put","debounce","I18nextProvider","i18n","use","initReactI18next","init","fallbackLng","ns","defaultNS","en","common","potioncraft","debug","interpolation","escapeValue","react","wait","persistState","createStructuredSelector","currentLanguageSelector","persisted","changeLanguage","createI18nReducer","defaultI18NState","lang","createI18nSelector","createServiceReducerCreator","createServiceSelectorCreator","createEditorDamageReducer","isMapEditorRenderedAction","damageWorldRect","appState","isMapEditorPanAction","isMapEditorZoomAction","isMapEditorViewportResizeAction","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","reducerPriority","isMapEditorEntityDeleteAction","entityFromKeySelector","addPointToRect","isMapEditorEntityInsertAction","isMapEditorEntityOffsetAction","isMapEditorEntityPrototypeInstantiateAction","concatReducers","isMapEditorMapClearAction","isMapEditorMapImportTemplateAction","isMapEditorMapReceiveAction","isMapEditorSelectClearAction","isMapEditorSelectEntityAction","createEditorDamageSelector","defaultEditorDamageState","createMapEntitiesReducer","removeFromRegionContainer","addToRegionContainer","offsetP","pointAdd","defaultMapEntitiesState","ORIGIN_OFFSET","getRegionIndexsFromPoint","getRegionIndexesFromRect","x1","y1","x2","y2","indexes","addedOOB","addOOB","MAP_WIDTH","MAP_HEIGHT","addToRegion","region","removeFromRegion","REGION_COUNT","container","regionIndexes","regionKeys","forEach","regionIndex","outOfBoundsRegion","entityRegions","fpSet","createMapEntitiesSelector","entitityKeysSelector","createSelector","entityKeyAtPointSelector","worldPoint","getEntityKeysFromPoint","vec","pointSubtract","magnitude","entityKeysAtPointSelector","ignoreHitRadius","mapEntitiesState","services","mapEditor","getEntityKeysFromRect","result","entityKeysAtRectSelector","potionEffectPrototype","defaultPotionEffects","packageIdObjectsSelector","potionEffects","PotionEffectImages","packageResourcesSelector","iconUrl","Buffer","from","toString","defaultRegion","_defaultState","createEditorMouseReducer","isMapEditorModifierKeysChangedAction","isMapEditorMouseDownAction","currentPointerGesture","mouseDownViewportPos","mouseViewportPos","isMapEditorMouseMoveAction","mouse","mouseDownWorldPos","clientToWorldSelector","entityKeyAtMouse","selectionMode","getSelectMode","detectGestureReducer","currentGesture","previousPos","currentPos","panGestureReducer","gestureReducer","eraserReducer","generateTileEntities","paintDangerZoneReducer","toolReducer","mouseState","isMapEditorMouseOutAction","defaultEditorMouseServiceState","isMapEditorMouseUpAction","worldMouseDownPos","worldMouseUpPos","idsToSelect","completeDragSelect","selection","completeDragMove","selectedKey","completeClick","isMapEditorToolRadiusSetAction","isMapEditorToolSetAction","worldMousePosSelector","worldMouseDownPosSelector","worldMousePos","createEditorMouseSelector","dragStart","dragEnd","view","createMapEditorReducer","isPotionBaseMapEditAction","defaultMapEditorState","isPackageNewAction","isPackageReceiveAction","handleEditorCommit","potionId","select","editingPotionIdSelector","takeLatest","fork","MapModifyActions","handleMapModified","handleMapEdit","pkg","potionBases","mapEntities","location","createEditorSelectionReducer","defaultEditorSelectionState","combineSelection","isMapEditorSelectionDeleteAction","isEntitySelectedSelector","createEditorSelectionSelector","s","createMapEditorSelector","damage","defaultEditorViewState","createEditorViewReducer","newMousePos","createEditorViewSelector","worldToClient","createNavigationReducer","isNavtreeExpandedValuesSetAction","expandedNavTreeValues","createNavigationSelector","defaultNavigationState","loadError","resourceKey","createPackageReducer","isPackageDataSetByIdAction","loadingStatus","local","index","newPackageData","newPackgeStr","stringifyYaml","newPackageResource","Encoder","encode","isPackageDataSetAction","newPackageStr","isPackageIdObjectNewAction","newItem","newResource","isPackageLoadErrorAction","isPackageLoadFileAction","defaultPackageState","isPackageResourceSetByIdAction","handlePackageLoadFile","endsWith","Error","replace","call","zip","loadAsync","generateAsync","Promise","all","entries","resourcePath","async","message","savePackage","packageIdSelector","zipData","buildZip","window","showSaveFilePicker","saveNativeFileApi","saveLegacy","warn","binary","compression","fileHandle","suggestedName","types","writable","createWritable","write","close","blob","saveAs","takeEvery","cacheResources","cacheYaml","entry","createPackageSelector","yamlStr","packageTextResourceSelector","yaml","parseYaml","resourePath","ids","idObject","k1","packageResourceSelector","Utf8Decoder","decode","serviceKeys","oldState","newState","appSelector","defaultServicesState","navigation","package","resolveImport","importTag","identify","tag","resolve","doc","cst","strValue","imported","parse","merge","customTags","stringify","selectors","actionsBlacklist","undefined","persistedState","stateJson","localStorage","getItem","PERSISTED_STATE_KEY","JSON","getStoredState","lastPersistedState","buildPersistedState","setItem","setStoredState","servicesSaga","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionSanitizer","stateSanitizer","compose","sagaMiddleware","initialState","loadPersistedState","applyMiddleware","run","savePersistedState","createStore","TextDecoder","TextEncoder"],"sourceRoot":""}